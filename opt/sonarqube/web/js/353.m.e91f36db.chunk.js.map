{"version":3,"sources":["webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./src/main/js/components/charts/DonutChart.tsx"],"names":["pi","Math","PI","tau","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","b","a","NaN","d","atan2","max","min","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","DonutChart","props","height","padding","width","availableWidth","availableHeight","size","radius","floor","pie","value","identity","sortValues","descending","sort","constant","data","i","j","k","v","n","length","sum","index","Array","arcs","apply","arguments","p","pa","undefined","sectors","map","Sector","fill","key","thickness","className","transform","cornerRadius","padRadius","context","buffer","r0","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","ax","ay","bx","by","kc","lc","centroid","style"],"mappings":"6FAAA,IAAIA,EAAKC,KAAKC,GACVC,EAAM,EAAIH,EAEVI,EAAaD,EADH,KAGd,SAASE,IACPC,KAAKC,IAAMD,KAAKE,IAChBF,KAAKG,IAAMH,KAAKI,IAAM,KACtBJ,KAAKK,EAAI,GAGX,SAASC,IACP,OAAO,IAAIP,EAGbA,EAAKQ,UAAYD,EAAKC,UAAY,CAChCC,YAAaT,EACbU,OAAQ,SAASC,EAAGC,GAClBX,KAAKK,GAAK,KAAOL,KAAKC,IAAMD,KAAKG,KAAOO,GAAK,KAAOV,KAAKE,IAAMF,KAAKI,KAAOO,IAE7EC,UAAW,WACQ,OAAbZ,KAAKG,MACPH,KAAKG,IAAMH,KAAKC,IAAKD,KAAKI,IAAMJ,KAAKE,IACrCF,KAAKK,GAAK,MAGdQ,OAAQ,SAASH,EAAGC,GAClBX,KAAKK,GAAK,KAAOL,KAAKG,KAAOO,GAAK,KAAOV,KAAKI,KAAOO,IAEvDG,iBAAkB,SAASC,EAAIC,EAAIN,EAAGC,GACpCX,KAAKK,GAAK,MAAQU,EAAM,MAAQC,EAAM,KAAOhB,KAAKG,KAAOO,GAAK,KAAOV,KAAKI,KAAOO,IAEnFM,cAAe,SAASF,EAAIC,EAAIE,EAAIC,EAAIT,EAAGC,GACzCX,KAAKK,GAAK,MAAQU,EAAM,MAAQC,EAAM,MAAQE,EAAM,MAAQC,EAAM,KAAOnB,KAAKG,KAAOO,GAAK,KAAOV,KAAKI,KAAOO,IAE/GS,MAAO,SAASL,EAAIC,EAAIE,EAAIC,EAAIE,GAC9BN,GAAMA,EAAIC,GAAMA,EAAIE,GAAMA,EAAIC,GAAMA,EAAIE,GAAKA,EAC7C,IAAIC,EAAKtB,KAAKG,IACVoB,EAAKvB,KAAKI,IACVoB,EAAMN,EAAKH,EACXU,EAAMN,EAAKH,EACXU,EAAMJ,EAAKP,EACXY,EAAMJ,EAAKP,EACXY,EAAQF,EAAMA,EAAMC,EAAMA,EAG9B,GAAIN,EAAI,EAAG,MAAM,IAAIQ,MAAM,oBAAsBR,GAGjD,GAAiB,OAAbrB,KAAKG,IACPH,KAAKK,GAAK,KAAOL,KAAKG,IAAMY,GAAM,KAAOf,KAAKI,IAAMY,QAIjD,GAAMY,EApDD,KAyDL,GAAMjC,KAAKmC,IAAIH,EAAMH,EAAMC,EAAMC,GAzD5B,MAyDgDL,EAKrD,CACH,IAAIU,EAAMb,EAAKI,EACXU,EAAMb,EAAKI,EACXU,EAAQT,EAAMA,EAAMC,EAAMA,EAC1BS,EAAQH,EAAMA,EAAMC,EAAMA,EAC1BG,EAAMxC,KAAKyC,KAAKH,GAChBI,EAAM1C,KAAKyC,KAAKR,GAChBU,EAAIjB,EAAI1B,KAAK4C,KAAK7C,EAAKC,KAAK6C,MAAMP,EAAQL,EAAQM,IAAU,EAAIC,EAAME,KAAS,GAC/EI,EAAMH,EAAID,EACVK,EAAMJ,EAAIH,EAGVxC,KAAKmC,IAAIW,EAAM,GA1EX,OA2ENzC,KAAKK,GAAK,KAAOU,EAAK0B,EAAMf,GAAO,KAAOV,EAAKyB,EAAMd,IAGvD3B,KAAKK,GAAK,IAAMgB,EAAI,IAAMA,EAAI,WAAaM,EAAMI,EAAML,EAAMM,GAAQ,KAAOhC,KAAKG,IAAMY,EAAK2B,EAAMlB,GAAO,KAAOxB,KAAKI,IAAMY,EAAK0B,EAAMjB,QApBtIzB,KAAKK,GAAK,KAAOL,KAAKG,IAAMY,GAAM,KAAOf,KAAKI,IAAMY,UAuBxD2B,IAAK,SAASjC,EAAGC,EAAGU,EAAGuB,EAAIC,EAAIC,GAC7BpC,GAAKA,EAAGC,GAAKA,EAAWmC,IAAQA,EAChC,IAAIC,GADY1B,GAAKA,GACR1B,KAAKqD,IAAIJ,GAClBK,EAAK5B,EAAI1B,KAAKuD,IAAIN,GAClBtB,EAAKZ,EAAIqC,EACTxB,EAAKZ,EAAIsC,EACTE,EAAK,EAAIL,EACTM,EAAKN,EAAMF,EAAKC,EAAKA,EAAKD,EAG9B,GAAIvB,EAAI,EAAG,MAAM,IAAIQ,MAAM,oBAAsBR,GAGhC,OAAbrB,KAAKG,IACPH,KAAKK,GAAK,IAAMiB,EAAK,IAAMC,GAIpB5B,KAAKmC,IAAI9B,KAAKG,IAAMmB,GAnGnB,MAmGoC3B,KAAKmC,IAAI9B,KAAKI,IAAMmB,GAnGxD,QAoGRvB,KAAKK,GAAK,IAAMiB,EAAK,IAAMC,GAIxBF,IAGD+B,EAAK,IAAGA,EAAKA,EAAKvD,EAAMA,GAGxBuD,EAAKtD,EACPE,KAAKK,GAAK,IAAMgB,EAAI,IAAMA,EAAI,QAAU8B,EAAK,KAAOzC,EAAIqC,GAAM,KAAOpC,EAAIsC,GAAM,IAAM5B,EAAI,IAAMA,EAAI,QAAU8B,EAAK,KAAOnD,KAAKG,IAAMmB,GAAM,KAAOtB,KAAKI,IAAMmB,GAIrJ6B,EAnHC,OAoHRpD,KAAKK,GAAK,IAAMgB,EAAI,IAAMA,EAAI,SAAW+B,GAAM1D,GAAO,IAAMyD,EAAK,KAAOnD,KAAKG,IAAMO,EAAIW,EAAI1B,KAAKqD,IAAIH,IAAO,KAAO7C,KAAKI,IAAMO,EAAIU,EAAI1B,KAAKuD,IAAIL,OAGlJQ,KAAM,SAAS3C,EAAGC,EAAG2C,EAAGC,GACtBvD,KAAKK,GAAK,KAAOL,KAAKC,IAAMD,KAAKG,KAAOO,GAAK,KAAOV,KAAKE,IAAMF,KAAKI,KAAOO,GAAK,MAAQ2C,EAAK,MAAQC,EAAK,KAAQD,EAAK,KAEzHE,SAAU,WACR,OAAOxD,KAAKK,IAID,O,iCCjIA,gBACb,OAAO,WACL,OAAOK,K,6FCFI,gBACb,OAAO+C,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAID,GAAKC,EAAI,EAAIC,KCDhC,cACb,OAAOC,GCDE9B,EAAMnC,KAAKmC,IACX+B,EAAQlE,KAAKkE,MACbb,EAAMrD,KAAKqD,IACXc,EAAMnE,KAAKmE,IACXC,EAAMpE,KAAKoE,IACXb,EAAMvD,KAAKuD,IACXd,EAAOzC,KAAKyC,KAGZ1C,EAAKC,KAAKC,GACVoE,EAAStE,EAAK,EACdG,EAAM,EAAIH,EAEd,SAAS8C,EAAK9B,GACnB,OAAOA,EAAI,EAAI,EAAIA,GAAK,EAAIhB,EAAKC,KAAK6C,KAAK9B,GAGtC,SAASuD,EAAKvD,GACnB,OAAOA,GAAK,EAAIsD,EAAStD,IAAM,GAAKsD,EAASrE,KAAKsE,KAAKvD,GCb1C,I,UCDf,SAASwD,EAAeN,GACtB,OAAOA,EAAEO,YAGX,SAASC,EAAeR,GACtB,OAAOA,EAAES,YAGX,SAASC,EAAcV,GACrB,OAAOA,EAAEW,WAGX,SAASC,EAAYZ,GACnB,OAAOA,EAAEa,SAGX,SAASC,EAAYd,GACnB,OAAOA,GAAKA,EAAEe,SAGhB,SAASC,EAAUtD,EAAIC,EAAIR,EAAIC,EAAIE,EAAIC,EAAI0D,EAAIC,GAC7C,IAAIC,EAAMhE,EAAKO,EAAI0D,EAAMhE,EAAKO,EAC1B0D,EAAMJ,EAAK3D,EAAIgE,EAAMJ,EAAK3D,EAC1BgE,EAAID,EAAMH,EAAME,EAAMD,EAC1B,KAAIG,EAAIA,EFpBW,OEsBnB,MAAO,CAAC7D,GADR6D,GAAKF,GAAO1D,EAAKJ,GAAM+D,GAAO5D,EAAKJ,IAAOiE,GACzBJ,EAAKxD,EAAK4D,EAAIH,GAKjC,SAASI,EAAe9D,EAAIC,EAAIR,EAAIC,EAAIqE,EAAIC,EAAInC,GAC9C,IAAIzB,EAAMJ,EAAKP,EACXY,EAAMJ,EAAKP,EACXuE,GAAMpC,EAAKmC,GAAMA,GAAMlD,EAAKV,EAAMA,EAAMC,EAAMA,GAC9C6D,EAAKD,EAAK5D,EACV8D,GAAMF,EAAK7D,EACXgE,EAAMpE,EAAKkE,EACXG,EAAMpE,EAAKkE,EACXV,EAAMhE,EAAKyE,EACXR,EAAMhE,EAAKyE,EACXG,GAAOF,EAAMX,GAAO,EACpBc,GAAOF,EAAMX,GAAO,EACpBjC,EAAKgC,EAAMW,EACXzC,EAAK+B,EAAMW,EACXG,EAAK/C,EAAKA,EAAKE,EAAKA,EACpB5B,EAAIgE,EAAKC,EACTS,EAAIL,EAAMV,EAAMD,EAAMY,EACtB/B,GAAKX,EAAK,GAAK,EAAI,GAAKb,EAAK0B,EAAI,EAAGzC,EAAIA,EAAIyE,EAAKC,EAAIA,IACrDC,GAAOD,EAAI9C,EAAKF,EAAKa,GAAKkC,EAC1BG,IAAQF,EAAIhD,EAAKE,EAAKW,GAAKkC,EAC3BI,GAAOH,EAAI9C,EAAKF,EAAKa,GAAKkC,EAC1BK,IAAQJ,EAAIhD,EAAKE,EAAKW,GAAKkC,EAC3BM,EAAMJ,EAAMJ,EACZS,EAAMJ,EAAMJ,EACZS,EAAMJ,EAAMN,EACZW,EAAMJ,EAAMN,EAMhB,OAFIO,EAAMA,EAAMC,EAAMA,EAAMC,EAAMA,EAAMC,EAAMA,IAAKP,EAAME,EAAKD,EAAME,GAE7D,CACLK,GAAIR,EACJS,GAAIR,EACJvE,KAAM8D,EACN7D,KAAM8D,EACNC,IAAKM,GAAOX,EAAKhE,EAAI,GACrBsE,IAAKM,GAAOZ,EAAKhE,EAAI,IAIV,I,SCxCA,SAASqF,EAAWC,GACjC,MAAM,OAAEC,EAAF,QAAUC,EAAU,CAAC,EAAG,EAAG,EAAG,GAA9B,MAAkCC,GAAUH,EAE5CI,EAAiBD,EAAQD,EAAQ,GAAKA,EAAQ,GAC9CG,EAAkBJ,EAASC,EAAQ,GAAKA,EAAQ,GAEhDI,EAAOtH,KAAKoE,IAAIgD,EAAgBC,GAChCE,EAASvH,KAAKwH,MAAMF,EAAO,GAE3BG,EFxCO,WACb,IAAIC,EAAQC,EACRC,EAAaC,EACbC,EAAO,KACPlD,EAAa,OAAAmD,EAAA,GAAS,GACtBjD,EAAW,OAAAiD,EAAA,GAAS7H,GACpB8E,EAAW,OAAA+C,EAAA,GAAS,GAExB,SAASN,EAAIO,GACX,IAAIC,EAEAC,EACAC,EAMAjF,EAGAkF,EAXAC,EAAIL,EAAKM,OAGTC,EAAM,EACNC,EAAQ,IAAIC,MAAMJ,GAClBK,EAAO,IAAID,MAAMJ,GACjBpF,GAAM2B,EAAW+D,MAAMtI,KAAMuI,WAC7BnF,EAAKzD,KAAKoE,IAAIlE,EAAKF,KAAKmE,KAAKjE,EAAK4E,EAAS6D,MAAMtI,KAAMuI,WAAa3F,IAEpE4F,EAAI7I,KAAKoE,IAAIpE,KAAKmC,IAAIsB,GAAM4E,EAAGrD,EAAS2D,MAAMtI,KAAMuI,YACpDE,EAAKD,GAAKpF,EAAK,GAAK,EAAI,GAG5B,IAAKwE,EAAI,EAAGA,EAAII,IAAKJ,GACdG,EAAIM,EAAKF,EAAMP,GAAKA,IAAMP,EAAMM,EAAKC,GAAIA,EAAGD,IAAS,IACxDO,GAAOH,GASX,IAJkB,MAAdR,EAAoBY,EAAMV,MAAK,SAASG,EAAGC,GAAK,OAAON,EAAWc,EAAKT,GAAIS,EAAKR,OACnE,MAARJ,GAAcU,EAAMV,MAAK,SAASG,EAAGC,GAAK,OAAOJ,EAAKE,EAAKC,GAAID,EAAKE,OAGxED,EAAI,EAAGE,EAAII,GAAO9E,EAAK4E,EAAIS,GAAMP,EAAM,EAAGN,EAAII,IAAKJ,EAAGhF,EAAKC,EAC9DgF,EAAIM,EAAMP,GAAiB/E,EAAKD,IAAlBmF,EAAIM,EAAKR,IAAmB,EAAIE,EAAID,EAAI,GAAKW,EAAIJ,EAAKR,GAAK,CACvEF,KAAMA,EAAKE,GACXM,MAAOP,EACPP,MAAOU,EACPxD,WAAY3B,EACZ6B,SAAU5B,EACV8B,SAAU6D,GAId,OAAOH,EA2BT,OAxBAjB,EAAIC,MAAQ,SAAShH,GACnB,OAAOkI,UAAUN,QAAUZ,EAAqB,mBAANhH,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAI+G,GAAOC,GAGxFD,EAAIG,WAAa,SAASlH,GACxB,OAAOkI,UAAUN,QAAUV,EAAalH,EAAGoH,EAAO,KAAML,GAAOG,GAGjEH,EAAIK,KAAO,SAASpH,GAClB,OAAOkI,UAAUN,QAAUR,EAAOpH,EAAGkH,EAAa,KAAMH,GAAOK,GAGjEL,EAAI7C,WAAa,SAASlE,GACxB,OAAOkI,UAAUN,QAAU1D,EAA0B,mBAANlE,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAI+G,GAAO7C,GAG7F6C,EAAI3C,SAAW,SAASpE,GACtB,OAAOkI,UAAUN,QAAUxD,EAAwB,mBAANpE,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAI+G,GAAO3C,GAG3F2C,EAAIzC,SAAW,SAAStE,GACtB,OAAOkI,UAAUN,QAAUtD,EAAwB,mBAANtE,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAI+G,GAAOzC,GAGpFyC,EEhCK,GACTK,KAAK,MACLJ,MAAMzD,GAAKA,EAAEyD,YAEOqB,IAAnB/B,EAAMhC,UACRyC,EAAIzC,SAASgC,EAAMhC,UAGrB,MAAMgE,EAAUvB,EAAIT,EAAMgB,MAAMiB,IAAI,CAAChF,EAAGgE,IAEpC,gBAACiB,EAAM,CACLlB,KAAM/D,EACNkF,KAAMnC,EAAMgB,KAAKC,GAAGkB,KAEpBC,IAAKnB,EACLV,OAAQA,EACR8B,UAAWrC,EAAMqC,aAKvB,OACE,uBAAKC,UAAU,cAAcrC,OAAQA,EAAQE,MAAOA,GAClD,qBAAGoC,UAAS,oBAAerC,EAAQ,GAAvB,aAA8BA,EAAQ,GAAtC,MACV,qBAAGqC,UAAS,oBAAehC,EAAf,aAA0BA,EAA1B,MAAsCyB,KAa1D,SAASE,EAAOlC,GACd,MAGM/C,EDVO,WACb,IAAIO,EAAcD,EACdG,EAAcD,EACd+E,EAAe,OAAAzB,EAAA,GAAS,GACxB0B,EAAY,KACZ7E,EAAaD,EACbG,EAAWD,EACXG,EAAWD,EACX2E,EAAU,KAEd,SAAS1G,IACP,IAAI2G,EACAjI,EACAkI,GAAMpF,EAAYmE,MAAMtI,KAAMuI,WAC9BlD,GAAMhB,EAAYiE,MAAMtI,KAAMuI,WAC9B3F,EAAK2B,EAAW+D,MAAMtI,KAAMuI,WAAavE,EACzCnB,EAAK4B,EAAS6D,MAAMtI,KAAMuI,WAAavE,EACvCZ,EAAKtB,EAAIe,EAAKD,GACdO,EAAKN,EAAKD,EAQd,GANKyG,IAASA,EAAUC,EAAS,OAAAhJ,EAAA,MAG7B+E,EAAKkE,IAAIlI,EAAIgE,EAAIA,EAAKkE,EAAIA,EAAKlI,GAG7BgE,EF9FW,MEiGZ,GAAIjC,EAAKvD,EFjGG,MEkGfwJ,EAAQ5I,OAAO4E,EAAKrC,EAAIJ,GAAKyC,EAAKnC,EAAIN,IACtCyG,EAAQ1G,IAAI,EAAG,EAAG0C,EAAIzC,EAAIC,GAAKM,GAC3BoG,EFpGW,QEqGbF,EAAQ5I,OAAO8I,EAAKvG,EAAIH,GAAK0G,EAAKrG,EAAIL,IACtCwG,EAAQ1G,IAAI,EAAG,EAAG4G,EAAI1G,EAAID,EAAIO,QAK7B,CACH,IAWIqG,EACAC,EAZAC,EAAM9G,EACN+G,EAAM9G,EACN+G,EAAMhH,EACNiH,EAAMhH,EACNiH,EAAM1G,EACN2G,EAAM3G,EACN4G,EAAKrF,EAAS2D,MAAMtI,KAAMuI,WAAa,EACvC0B,EAAMD,EFnHK,QEmHaZ,GAAaA,EAAUd,MAAMtI,KAAMuI,WAAanG,EAAKmH,EAAKA,EAAKlE,EAAKA,IAC5FC,EAAKvB,EAAIjC,EAAIuD,EAAKkE,GAAM,GAAIJ,EAAab,MAAMtI,KAAMuI,YACrD2B,EAAM5E,EACN6E,EAAM7E,EAKV,GAAI2E,EF3HW,ME2HG,CAChB,IAAIG,EAAKnG,EAAKgG,EAAKV,EAAKrG,EAAI8G,IACxBK,EAAKpG,EAAKgG,EAAK5E,EAAKnC,EAAI8G,KACvBF,GAAY,EAALM,GF9HC,OE8HuCR,GAArBQ,GAAOjH,EAAK,GAAK,EAAe0G,GAAOO,IACjEN,EAAM,EAAGF,EAAMC,GAAOjH,EAAKC,GAAM,IACjCkH,GAAY,EAALM,GFhIC,OEgIuCX,GAArBW,GAAOlH,EAAK,GAAK,EAAewG,GAAOU,IACjEN,EAAM,EAAGL,EAAMC,GAAO/G,EAAKC,GAAM,GAGxC,IAAInB,EAAM2D,EAAKrC,EAAI0G,GACf/H,EAAM0D,EAAKnC,EAAIwG,GACf3E,EAAMwE,EAAKvG,EAAI6G,GACf7E,EAAMuE,EAAKrG,EAAI2G,GAGnB,GAAIvE,EF1IW,ME0IG,CAChB,IAIIgF,EAJA5E,EAAML,EAAKrC,EAAI2G,GACfhE,EAAMN,EAAKnC,EAAIyG,GACf/D,EAAM2D,EAAKvG,EAAI4G,GACf/D,EAAM0D,EAAKrG,EAAI0G,GAInB,GAAIxG,EAAK1D,IAAO4K,EAAK1F,EAAUlD,EAAKC,EAAKiE,EAAKC,EAAKH,EAAKC,EAAKZ,EAAKC,IAAO,CACvE,IAAIuF,GAAK7I,EAAM4I,EAAG,GACdE,GAAK7I,EAAM2I,EAAG,GACdG,GAAK/E,EAAM4E,EAAG,GACdI,GAAK/E,EAAM2E,EAAG,GACdK,GAAK,EAAIzH,EAAIV,GAAM+H,GAAKE,GAAKD,GAAKE,KAAOtI,EAAKmI,GAAKA,GAAKC,GAAKA,IAAMpI,EAAKqI,GAAKA,GAAKC,GAAKA,MAAQ,GAC/FE,GAAKxI,EAAKkI,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IACzCJ,EAAMnG,EAAIuB,GAAKiE,EAAKqB,KAAOD,GAAK,IAChCR,EAAMpG,EAAIuB,GAAKD,EAAKuF,KAAOD,GAAK,KAK9BZ,EF/JS,MEkKNI,EFlKM,OEmKbX,EAAKpE,EAAeQ,EAAKC,EAAKnE,EAAKC,EAAK0D,EAAI8E,EAAKhH,GACjDsG,EAAKrE,EAAeM,EAAKC,EAAKZ,EAAKC,EAAKK,EAAI8E,EAAKhH,GAEjDkG,EAAQ5I,OAAO+I,EAAGhD,GAAKgD,EAAG9H,IAAK8H,EAAG/C,GAAK+C,EAAG7H,KAGtCwI,EAAM7E,EAAI+D,EAAQ1G,IAAI6G,EAAGhD,GAAIgD,EAAG/C,GAAI0D,EAAKtG,EAAM2F,EAAG7H,IAAK6H,EAAG9H,KAAMmC,EAAM4F,EAAG9H,IAAK8H,EAAG/H,MAAOyB,IAI1FkG,EAAQ1G,IAAI6G,EAAGhD,GAAIgD,EAAG/C,GAAI0D,EAAKtG,EAAM2F,EAAG7H,IAAK6H,EAAG9H,KAAMmC,EAAM2F,EAAG7D,IAAK6D,EAAG9D,MAAOvC,GAC9EkG,EAAQ1G,IAAI,EAAG,EAAG0C,EAAIxB,EAAM2F,EAAG/C,GAAK+C,EAAG7D,IAAK6D,EAAGhD,GAAKgD,EAAG9D,KAAM7B,EAAM4F,EAAGhD,GAAKgD,EAAG9D,IAAK8D,EAAGjD,GAAKiD,EAAG/D,MAAOvC,GACrGkG,EAAQ1G,IAAI8G,EAAGjD,GAAIiD,EAAGhD,GAAI0D,EAAKtG,EAAM4F,EAAG9D,IAAK8D,EAAG/D,KAAM7B,EAAM4F,EAAG9H,IAAK8H,EAAG/H,MAAOyB,MAK7EkG,EAAQ5I,OAAOiB,EAAKC,GAAM0H,EAAQ1G,IAAI,EAAG,EAAG0C,EAAIqE,EAAKC,GAAMxG,IArB1CkG,EAAQ5I,OAAOiB,EAAKC,GAyBpC4H,EFxLS,OEwLUO,EFxLV,ME2LNI,EF3LM,OE4LbV,EAAKpE,EAAeL,EAAKC,EAAKU,EAAKC,EAAK4D,GAAKW,EAAK/G,GAClDsG,EAAKrE,EAAe1D,EAAKC,EAAKiE,EAAKC,EAAK0D,GAAKW,EAAK/G,GAElDkG,EAAQxI,OAAO2I,EAAGhD,GAAKgD,EAAG9H,IAAK8H,EAAG/C,GAAK+C,EAAG7H,KAGtCuI,EAAM5E,EAAI+D,EAAQ1G,IAAI6G,EAAGhD,GAAIgD,EAAG/C,GAAIyD,EAAKrG,EAAM2F,EAAG7H,IAAK6H,EAAG9H,KAAMmC,EAAM4F,EAAG9H,IAAK8H,EAAG/H,MAAOyB,IAI1FkG,EAAQ1G,IAAI6G,EAAGhD,GAAIgD,EAAG/C,GAAIyD,EAAKrG,EAAM2F,EAAG7H,IAAK6H,EAAG9H,KAAMmC,EAAM2F,EAAG7D,IAAK6D,EAAG9D,MAAOvC,GAC9EkG,EAAQ1G,IAAI,EAAG,EAAG4G,EAAI1F,EAAM2F,EAAG/C,GAAK+C,EAAG7D,IAAK6D,EAAGhD,GAAKgD,EAAG9D,KAAM7B,EAAM4F,EAAGhD,GAAKgD,EAAG9D,IAAK8D,EAAGjD,GAAKiD,EAAG/D,KAAMvC,GACpGkG,EAAQ1G,IAAI8G,EAAGjD,GAAIiD,EAAGhD,GAAIyD,EAAKrG,EAAM4F,EAAG9D,IAAK8D,EAAG/D,KAAM7B,EAAM4F,EAAG9H,IAAK8H,EAAG/H,MAAOyB,KAK7EkG,EAAQ1G,IAAI,EAAG,EAAG4G,EAAIM,EAAKD,EAAKzG,GArBIkG,EAAQxI,OAAOkE,EAAKC,QA1F1CqE,EAAQ5I,OAAO,EAAG,GAoHvC,GAFA4I,EAAQzI,YAEJ0I,EAAQ,OAAOD,EAAU,KAAMC,EAAS,IAAM,KAyCpD,OAtCA3G,EAAIkI,SAAW,WACb,IAAIxJ,IAAM8C,EAAYmE,MAAMtI,KAAMuI,aAAclE,EAAYiE,MAAMtI,KAAMuI,YAAc,EAClF7E,IAAMa,EAAW+D,MAAMtI,KAAMuI,aAAc9D,EAAS6D,MAAMtI,KAAMuI,YAAc,EAAI7I,EAAK,EAC3F,MAAO,CAACsD,EAAIU,GAAKrC,EAAG6B,EAAIQ,GAAKrC,IAG/BsB,EAAIwB,YAAc,SAAS9D,GACzB,OAAOkI,UAAUN,QAAU9D,EAA2B,mBAAN9D,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAIsC,GAAOwB,GAG9FxB,EAAI0B,YAAc,SAAShE,GACzB,OAAOkI,UAAUN,QAAU5D,EAA2B,mBAANhE,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAIsC,GAAO0B,GAG9F1B,EAAIwG,aAAe,SAAS9I,GAC1B,OAAOkI,UAAUN,QAAUkB,EAA4B,mBAAN9I,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAIsC,GAAOwG,GAG/FxG,EAAIyG,UAAY,SAAS/I,GACvB,OAAOkI,UAAUN,QAAUmB,EAAiB,MAAL/I,EAAY,KAAoB,mBAANA,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAIsC,GAAOyG,GAG/GzG,EAAI4B,WAAa,SAASlE,GACxB,OAAOkI,UAAUN,QAAU1D,EAA0B,mBAANlE,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAIsC,GAAO4B,GAG7F5B,EAAI8B,SAAW,SAASpE,GACtB,OAAOkI,UAAUN,QAAUxD,EAAwB,mBAANpE,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAIsC,GAAO8B,GAG3F9B,EAAIgC,SAAW,SAAStE,GACtB,OAAOkI,UAAUN,QAAUtD,EAAwB,mBAANtE,EAAmBA,EAAI,OAAAqH,EAAA,IAAUrH,GAAIsC,GAAOgC,GAG3FhC,EAAI0G,QAAU,SAAShJ,GACrB,OAAOkI,UAAUN,QAAWoB,EAAe,MAALhJ,EAAY,KAAOA,EAAIsC,GAAO0G,GAG/D1G,EChLK,GACT0B,YAAYsC,EAAMO,QAClB/C,YAAYwC,EAAMO,OAASP,EAAMqC,UAC1BrG,CAAIgE,EAAMgB,MACpB,OAAO,wBAAM/D,EAAGA,EAAGkH,MAAO,CAAEhC,KAAMnC,EAAMmC","file":"js/353.m.e91f36db.chunk.js","sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { arc as d3Arc, pie as d3Pie, PieArcDatum } from 'd3-shape';\nimport * as React from 'react';\n\ninterface DataPoint {\n  fill: string;\n  value: number;\n}\n\nexport interface DonutChartProps {\n  data: DataPoint[];\n  height: number;\n  padAngle?: number;\n  padding?: [number, number, number, number];\n  thickness: number;\n  width: number;\n}\n\nexport default function DonutChart(props: DonutChartProps) {\n  const { height, padding = [0, 0, 0, 0], width } = props;\n\n  const availableWidth = width - padding[1] - padding[3];\n  const availableHeight = height - padding[0] - padding[2];\n\n  const size = Math.min(availableWidth, availableHeight);\n  const radius = Math.floor(size / 2);\n\n  const pie = d3Pie<any, DataPoint>()\n    .sort(null)\n    .value(d => d.value);\n\n  if (props.padAngle !== undefined) {\n    pie.padAngle(props.padAngle);\n  }\n\n  const sectors = pie(props.data).map((d, i) => {\n    return (\n      <Sector\n        data={d}\n        fill={props.data[i].fill}\n        // eslint-disable-next-line react/no-array-index-key\n        key={i}\n        radius={radius}\n        thickness={props.thickness}\n      />\n    );\n  });\n\n  return (\n    <svg className=\"donut-chart\" height={height} width={width}>\n      <g transform={`translate(${padding[3]}, ${padding[0]})`}>\n        <g transform={`translate(${radius}, ${radius})`}>{sectors}</g>\n      </g>\n    </svg>\n  );\n}\n\ninterface SectorProps {\n  data: PieArcDatum<DataPoint>;\n  fill: string;\n  radius: number;\n  thickness: number;\n}\n\nfunction Sector(props: SectorProps) {\n  const arc = d3Arc<any, PieArcDatum<DataPoint>>()\n    .outerRadius(props.radius)\n    .innerRadius(props.radius - props.thickness);\n  const d = arc(props.data) as string;\n  return <path d={d} style={{ fill: props.fill }} />;\n}\n"],"sourceRoot":""}