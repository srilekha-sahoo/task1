{"version":3,"sources":["webpack:///./src/main/js/apps/maintenance/components/MaintenanceAppContainer.tsx","webpack:///./src/main/js/components/intl/DateTimeFormatter.tsx","webpack:///./src/main/js/components/intl/DateFromNow.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/apps/maintenance/components/App.tsx","webpack:///./src/main/js/apps/maintenance/styles.css?95d4","webpack:///./src/main/js/apps/maintenance/styles.css"],"names":["MaintenanceAppContainer","props","setup","formatterOption","year","month","day","hour","minute","DateTimeFormatter","children","date","value","DateFromNow","originalChildren","f","hourPrecision","Date","now","parsedDate","formattedDate","title","setLogLevel","level","catch","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","max","slowThreshold","status","longFormatterOption","second","TimeFormatter","long","App","mounted","state","fetchStatus","this","fetchMigrationState","fetchSystemStatus","setState","message","undefined","startedAt","then","wasStarting","scheduleRefresh","loadPreviousPage","interval","window","setTimeout","setInterval","location","href","handleMigrateClick","clearInterval","defaultTitle","defer","className","id","defaultMessage","values","link","target","rel","onClick","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push"],"mappings":"6FAAA,qEA0Be,SAASA,EAAwBC,GAC9C,OAAO,gBAAC,IAAG,eAACC,OAAO,GAAWD,M,iCC3BhC,kGA4BO,MAAME,EAAkB,CAC7BC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,WAGK,SAASC,GAAkB,SAAEC,EAAF,KAAYC,IACpD,OACE,gBAAC,gBAAa,eAACC,MAAO,YAAUD,IAAWR,GACxCO,K,iCCvCP,yFAgCe,SAASG,EAAYZ,GAClC,MAAQS,SAAUI,EAAoBC,IAAcA,GAA9C,KAAiDJ,EAAjD,cAAuDK,GAAkBf,EAC/E,IAAIS,EAAWI,EAEf,IAAKH,EAMH,OAAO,gCAAGG,EAAiB,YAAU,WAGnCH,GAAQK,GAAiB,4BAAkBC,KAAKC,MAAOP,GAAQ,IACjED,EAAW,IAAMI,EAAiB,YAAU,0BAG9C,MAAMK,EAAa,YAAUR,GAE7B,OACE,gBAAC,IAAiB,CAACA,KAAMQ,GACtBC,GACC,wBAAMC,MAAOD,GACX,gBAAC,oBAAiB,CAACR,MAAOO,GAAaT,O,iCCvDjD,oSAuBO,SAASY,EAAYC,GAC1B,OAAO,YAAK,+BAAgC,CAAEA,UAASC,MAAM,KAGxD,SAASC,IACd,OAAO,YAAQ,oBAAoBD,MAAM,KAGpC,SAASE,IACd,OAAO,YAAQ,sBAGV,SAASC,IAId,OAAO,YAAQ,wBAGV,SAASC,IAKd,OAAO,YAAQ,mCAGV,SAASC,IAKd,OAAO,YAAS,0BAGX,SAASC,IACd,OAAO,YAAK,uBAAuBN,MAAM,KAGpC,SAASO,IAKd,OAAO,YACLL,EACA,CAAEM,KAAM,EAAGC,eAAgB,IAC3B,EAAGC,YAAwB,OAAXA,K,iCCtEpB,gEA6BO,MAAM/B,EAAkB,CAAEI,KAAM,UAAWC,OAAQ,WAE7C2B,EAAsB,CAAE5B,KAAM,UAAWC,OAAQ,UAAW4B,OAAQ,WAElE,SAASC,GAAc,SAAE3B,EAAF,KAAYC,EAAZ,KAAkB2B,IACtD,OACE,gBAAC,gBAAa,eAAC1B,MAAO,YAAUD,IAAY2B,EAAOH,EAAsBhC,GACtEO,K,iCCpCP,qJA8Ce,MAAM6B,UAAY,gBAAjC,c,oBAEE,KAAAC,SAAU,EACV,KAAAC,MAAe,GAcf,KAAAC,YAAc,MACIC,KAAK1C,MAAMC,MAAQyC,KAAKC,sBAAwBD,KAAKE,qBAC7DrB,MAAM,KACRmB,KAAKH,SACPG,KAAKG,SAAS,CACZC,aAASC,EACTC,eAAWD,EACXP,WAAOO,EACPd,OAAQ,eAMhB,KAAAW,kBAAoB,IACX,cAAkBK,KAAK,EAAGhB,aAC3BS,KAAKH,UACPG,KAAKG,SAAS,CAAEZ,WAED,aAAXA,GACFS,KAAKG,SAAS,CAAEK,aAAa,IAC7BR,KAAKS,mBACe,OAAXlB,EACLS,KAAKF,MAAMU,aACbR,KAAKU,mBAGPV,KAAKS,qBAMb,KAAAR,oBAAsB,IACb,cAAqBM,KAAK,EAAGH,UAASE,YAAWR,YAClDE,KAAKH,UACPG,KAAKG,SAAS,CAAEC,UAASE,YAAWR,UACtB,wBAAVA,EACFE,KAAKU,mBACc,iBAAVZ,GACTE,KAAKS,qBAMb,KAAAA,gBAAkB,KAChBT,KAAKW,SAAWC,OAAOC,WAAWb,KAAKD,YAAa,MAGtD,KAAAW,iBAAmB,KACjBI,YAAY,KACVF,OAAOG,SAASC,KAAO,YAAahB,KAAK1C,MAAMyD,WAC9C,OAGL,KAAAE,mBAAqB,KACnB,cAAkBV,KAChB,EAAGH,UAASE,YAAWR,YACjBE,KAAKH,SACPG,KAAKG,SAAS,CAAEC,UAASE,YAAWR,WAGxC,SA3EJ,oBACEE,KAAKH,SAAU,EACfG,KAAKD,cAGP,uBACEC,KAAKH,SAAU,EACXG,KAAKW,UACPC,OAAOM,cAAclB,KAAKW,UAuE9B,SACE,MAAM,MAAEb,EAAF,OAASP,GAAWS,KAAKF,MAE/B,OACE,gCACE,gBAAC,IAAM,CAACqB,aAAc,YAAU,oBAAqBC,OAAO,IAC5D,uBAAKC,UAAU,sBAAsBC,GAAG,MACtC,uBACED,UAAW,EAAW,cAAe,CACnC,gBAA2B,uBAAVvB,IAEnBwB,GAAG,SACS,YAAX/B,GACC,gCACE,sBAAI8B,UAAU,iCACZ,gBAAC,IAAe,CAACjB,QAAS,YAAU,8BAEpC,0BACA,qBAAGiB,UAAU,oBACV,YAAU,0CAGf,qBAAGA,UAAU,gCACX,qBAAGL,KAAM,uBAAe,KAAM,YAAU,4BAKlC,OAAXzB,GACC,gCACE,sBAAI8B,UAAU,qBACZ,gBAAC,IAAe,CAACjB,QAAS,YAAU,wBAEtC,qBAAGiB,UAAU,gCACV,YAAU,wCAEb,qBAAGA,UAAU,gCACX,qBAAGL,KAAM,uBAAe,KAAM,YAAU,kBAKlC,aAAXzB,GACC,gCACE,sBAAI8B,UAAU,qBACZ,gBAAC,IAAe,CAACjB,QAAS,YAAU,8BAEtC,qBAAGiB,UAAU,uBACX,qBAAGA,UAAU,cAKP,SAAX9B,GACC,gCACE,sBAAI8B,UAAU,iCACZ,gBAAC,IAAe,CAACjB,QAAS,YAAU,0BAEtC,qBAAGiB,UAAU,oBACV,YAAU,uCAEb,qBAAGA,UAAU,gCACX,qBAAGL,KAAM,uBAAe,KAAM,YAAU,6BAKjC,wBAAXzB,GAA+C,yBAAXA,IACpC,gCACE,sBAAI8B,UAAU,qBACZ,gBAAC,IAAe,CAACjB,QAAS,YAAU,uCAEtC,qBAAGiB,UAAU,oBACX,gBAAC,mBAAgB,CACfE,eAAgB,YAAU,gDAC1BD,GAAG,+CACHE,OAAQ,CACNC,KACE,qBACET,KAAK,4DACLU,OAAO,SACPC,IAAI,uBACH,YAAU,0DAMrB,qBAAGN,UAAU,oBACX,gBAAC,mBAAgB,CACfE,eAAgB,YAAU,gDAC1BD,GAAG,+CACHE,OAAQ,CACNC,KACE,qBACET,KAAK,sDACLU,OAAO,SACPC,IAAI,uBACH,YAAU,2DASd,iBAAV7B,GACC,gCACE,sBAAIuB,UAAU,qBACX,YAAU,uCAEb,qBAAGA,UAAU,gCACX,qBAAGL,KAAM,uBAAe,KAAM,YAAU,kBAKnC,uBAAVlB,GACC,gCACE,sBAAIuB,UAAU,qBAAqB,YAAU,iCAC7C,qBAAGA,UAAU,oBAAoB,YAAU,mCAC3C,qBAAGA,UAAU,oBAAoB,YAAU,mCAC3C,qBAAGA,UAAU,oBAAoB,YAAU,mCAC3C,uBAAKA,UAAU,uBACb,gBAAC,IAAM,CAACC,GAAG,kBAAkBM,QAAS5B,KAAKiB,oBACxC,YAAU,0BAMR,kBAAVnB,GACC,gCACE,sBAAIuB,UAAU,iCACX,YAAU,wCAEb,yBAAI,YAAU,8CAIP,sBAAVvB,GACC,gCACE,sBAAIuB,UAAU,qBAAqB,YAAU,mCAC5CrB,KAAKF,MAAMM,SACV,qBAAGiB,UAAU,gCAAgCrB,KAAKF,MAAMM,SAEzDJ,KAAKF,MAAMQ,WACV,qBAAGe,UAAU,gCACV,YAAU,kCAAmC,IAC9C,gBAAC,IAAW,CAACrD,KAAMgC,KAAKF,MAAMQ,YAC9B,2BACA,yBAAOe,UAAU,cACf,gBAAC,IAAa,CAACrD,KAAMgC,KAAKF,MAAMQ,UAAWX,MAAM,MAIvD,qBAAG0B,UAAU,uBACX,qBAAGA,UAAU,cAKR,wBAAVvB,GACC,gCACE,sBAAIuB,UAAU,kCACX,YAAU,uCAEb,qBAAGA,UAAU,gCACX,qBAAGL,KAAM,uBAAe,KAAM,YAAU,kBAKnC,qBAAVlB,GACC,gCACE,sBAAIuB,UAAU,iCACX,YAAU,+BAEb,qBAAGA,UAAU,oBAAoB,YAAU,2C,oBCrT3D,IAAIQ,EAAM,EAAQ,KACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,qBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,qPAAsP,KAE/QD,EAAOK,QAAUA","file":"js/325.m.f85fcaec.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport App from './App';\n\ninterface Props {\n  location: { query: { return_to: string } };\n}\n\nexport default function MaintenanceAppContainer(props: Props) {\n  return <App setup={false} {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport const formatterOption = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nexport default function DateTimeFormatter({ children, date }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...formatterOption}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { differenceInHours } from 'date-fns';\nimport * as React from 'react';\nimport { DateSource, FormattedRelative } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\nimport { translate } from '../../helpers/l10n';\nimport DateTimeFormatter from './DateTimeFormatter';\n\nexport interface DateFromNowProps {\n  children?: (formattedDate: string) => React.ReactNode;\n  date?: DateSource;\n  hourPrecision?: boolean;\n}\n\nexport default function DateFromNow(props: DateFromNowProps) {\n  const { children: originalChildren = (f: string) => f, date, hourPrecision } = props;\n  let children = originalChildren;\n\n  if (!date) {\n    /*\n     * We return a JSX.Element to bypass typescript issue with functional components return type\n     * (https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544)\n     */\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{originalChildren(translate('never'))}</>;\n  }\n\n  if (date && hourPrecision && differenceInHours(Date.now(), date) < 1) {\n    children = () => originalChildren(translate('less_than_1_hour_ago'));\n  }\n\n  const parsedDate = parseDate(date);\n\n  return (\n    <DateTimeFormatter date={parsedDate}>\n      {formattedDate => (\n        <span title={formattedDate}>\n          <FormattedRelative value={parsedDate}>{children}</FormattedRelative>\n        </span>\n      )}\n    </DateTimeFormatter>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from '../helpers/request';\nimport { SystemUpgrade } from '../types/system';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\nexport interface TimeFormatterProps {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: TimeFormatterProps) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { FormattedMessage } from 'react-intl';\nimport { getMigrationStatus, getSystemStatus, migrateDatabase } from '../../../api/system';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { Button } from '../../../components/controls/buttons';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl, isSonarCloud } from '../../../helpers/system';\nimport { getReturnUrl } from '../../../helpers/urls';\nimport '../styles.css';\n\ninterface Props {\n  location: { query: { return_to?: string } };\n  setup: boolean;\n}\n\ninterface State {\n  message?: string;\n  startedAt?: string;\n  state?: string;\n  status?: string;\n  wasStarting?: boolean;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  interval?: number;\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchStatus();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.interval) {\n      window.clearInterval(this.interval);\n    }\n  }\n\n  fetchStatus = () => {\n    const request = this.props.setup ? this.fetchMigrationState() : this.fetchSystemStatus();\n    request.catch(() => {\n      if (this.mounted) {\n        this.setState({\n          message: undefined,\n          startedAt: undefined,\n          state: undefined,\n          status: 'OFFLINE'\n        });\n      }\n    });\n  };\n\n  fetchSystemStatus = () => {\n    return getSystemStatus().then(({ status }) => {\n      if (this.mounted) {\n        this.setState({ status });\n\n        if (status === 'STARTING') {\n          this.setState({ wasStarting: true });\n          this.scheduleRefresh();\n        } else if (status === 'UP') {\n          if (this.state.wasStarting) {\n            this.loadPreviousPage();\n          }\n        } else {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  fetchMigrationState = () => {\n    return getMigrationStatus().then(({ message, startedAt, state }) => {\n      if (this.mounted) {\n        this.setState({ message, startedAt, state });\n        if (state === 'MIGRATION_SUCCEEDED') {\n          this.loadPreviousPage();\n        } else if (state !== 'NO_MIGRATION') {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  scheduleRefresh = () => {\n    this.interval = window.setTimeout(this.fetchStatus, 5000);\n  };\n\n  loadPreviousPage = () => {\n    setInterval(() => {\n      window.location.href = getReturnUrl(this.props.location);\n    }, 2500);\n  };\n\n  handleMigrateClick = () => {\n    migrateDatabase().then(\n      ({ message, startedAt, state }) => {\n        if (this.mounted) {\n          this.setState({ message, startedAt, state });\n        }\n      },\n      () => {}\n    );\n  };\n\n  render() {\n    const { state, status } = this.state;\n\n    return (\n      <>\n        <Helmet defaultTitle={translate('maintenance.page')} defer={false} />\n        <div className=\"page-wrapper-simple\" id=\"bd\">\n          <div\n            className={classNames('page-simple', {\n              'panel-warning': state === 'MIGRATION_REQUIRED'\n            })}\n            id=\"nonav\">\n            {status === 'OFFLINE' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  <InstanceMessage message={translate('maintenance.is_offline')} />\n                </h1>\n                {!isSonarCloud() && (\n                  <p className=\"maintenance-text\">\n                    {translate('maintenance.sonarqube_is_offline.text')}\n                  </p>\n                )}\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'UP' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_up')} />\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  {translate('maintenance.all_systems_opetational')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'STARTING' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_starting')} />\n                </h1>\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {status === 'DOWN' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  <InstanceMessage message={translate('maintenance.is_down')} />\n                </h1>\n                <p className=\"maintenance-text\">\n                  {translate('maintenance.sonarqube_is_down.text')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {(status === 'DB_MIGRATION_NEEDED' || status === 'DB_MIGRATION_RUNNING') && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_under_maintenance')} />\n                </h1>\n                <p className=\"maintenance-text\">\n                  <FormattedMessage\n                    defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.1')}\n                    id=\"maintenance.sonarqube_is_under_maintenance.1\"\n                    values={{\n                      link: (\n                        <a\n                          href=\"https://www.sonarlint.org/?referrer=sonarqube-maintenance\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\">\n                          {translate('maintenance.sonarqube_is_under_maintenance_link.1')}\n                        </a>\n                      )\n                    }}\n                  />\n                </p>\n                <p className=\"maintenance-text\">\n                  <FormattedMessage\n                    defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.2')}\n                    id=\"maintenance.sonarqube_is_under_maintenance.2\"\n                    values={{\n                      link: (\n                        <a\n                          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\">\n                          {translate('maintenance.sonarqube_is_under_maintenance_link.2')}\n                        </a>\n                      )\n                    }}\n                  />\n                </p>\n              </>\n            )}\n\n            {state === 'NO_MIGRATION' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_REQUIRED' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.upgrade_database')}</h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.1')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.2')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.3')}</p>\n                <div className=\"maintenance-spinner\">\n                  <Button id=\"start-migration\" onClick={this.handleMigrateClick}>\n                    {translate('maintenance.upgrade')}\n                  </Button>\n                </div>\n              </>\n            )}\n\n            {state === 'NOT_SUPPORTED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.migration_not_supported')}\n                </h1>\n                <p>{translate('maintenance.migration_not_supported.text')}</p>\n              </>\n            )}\n\n            {state === 'MIGRATION_RUNNING' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.database_migration')}</h1>\n                {this.state.message && (\n                  <p className=\"maintenance-text text-center\">{this.state.message}</p>\n                )}\n                {this.state.startedAt && (\n                  <p className=\"maintenance-text text-center\">\n                    {translate('background_tasks.table.started')}{' '}\n                    <DateFromNow date={this.state.startedAt} />\n                    <br />\n                    <small className=\"text-muted\">\n                      <TimeFormatter date={this.state.startedAt} long={true} />\n                    </small>\n                  </p>\n                )}\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_SUCCEEDED' && (\n              <>\n                <h1 className=\"maintenance-title text-success\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_FAILED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.upgrade_failed')}\n                </h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_failed.text')}</p>\n              </>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".maintenance-title{margin-bottom:40px;line-height:1.5;font-size:24px;font-weight:300;text-align:center}.maintenance-text{margin-bottom:16px;line-height:1.5;font-size:16px;font-weight:300}.maintenance-spinner{margin-top:40px;text-align:center}\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}