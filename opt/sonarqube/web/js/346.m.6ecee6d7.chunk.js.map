{"version":3,"sources":["webpack:///./src/main/js/apps/sessions/components/Unauthorized.tsx","webpack:///./src/main/js/apps/change-admin-password/ChangeAdminPasswordAppRenderer.tsx","webpack:///./src/main/js/apps/change-admin-password/constants.ts","webpack:///./src/main/js/apps/change-admin-password/ChangeAdminPasswordApp.tsx","webpack:///./src/main/js/components/ui/MandatoryFieldMarker.tsx","webpack:///./src/main/js/components/ui/MandatoryFieldsExplanation.tsx"],"names":["Unauthorized","message","decodeURIComponent","className","id","Boolean","href","ChangeAdminPasswordAppRenderer","props","canAdmin","canSubmit","confirmPasswordValue","passwordValue","location","submitting","success","Alert","variant","GlobalMessagesContainer","onSubmit","e","preventDefault","MandatoryFieldsExplanation","htmlFor","MandatoryFieldMarker","name","onChange","onPasswordChange","currentTarget","value","required","type","onConfirmPasswordChange","disabled","super","mounted","handlePasswordChange","this","setState","checkCanSubmit","handleConfirmPasswordChange","handleSubmit","async","state","login","password","then","instanceUsesDefaultAdminCredentials","mapStateToProps","withRouter","defaultMessage","values","star"],"mappings":"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","file":"js/346.m.6ecee6d7.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getCookie } from '../../../helpers/cookies';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\n\nexport default function Unauthorized() {\n  const message = decodeURIComponent(getCookie('AUTHENTICATION-ERROR') || '');\n  return (\n    <div className=\"page-wrapper-simple\" id=\"bd\">\n      <div className=\"page-simple\" id=\"nonav\">\n        <div className=\"text-center\">\n          <p id=\"unauthorized\">{translate('unauthorized.message')}</p>\n\n          {Boolean(message) && (\n            <p className=\"spacer-top\">\n              {translate('unauthorized.reason')} {message}\n            </p>\n          )}\n\n          <div className=\"big-spacer-top\">\n            <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport GlobalMessagesContainer from '../../app/components/GlobalMessagesContainer';\nimport { SubmitButton } from '../../components/controls/buttons';\nimport { Location } from '../../components/hoc/withRouter';\nimport { Alert } from '../../components/ui/Alert';\nimport MandatoryFieldMarker from '../../components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from '../../components/ui/MandatoryFieldsExplanation';\nimport { translate } from '../../helpers/l10n';\nimport { getReturnUrl } from '../../helpers/urls';\nimport Unauthorized from '../sessions/components/Unauthorized';\nimport { DEFAULT_ADMIN_PASSWORD } from './constants';\n\nexport interface ChangeAdminPasswordAppRendererProps {\n  passwordValue: string;\n  confirmPasswordValue: string;\n  onConfirmPasswordChange: (password: string) => void;\n  onPasswordChange: (password: string) => void;\n  onSubmit: () => void;\n  canAdmin?: boolean;\n  canSubmit?: boolean;\n  submitting: boolean;\n  success: boolean;\n  location: Location;\n}\n\nexport default function ChangeAdminPasswordAppRenderer(props: ChangeAdminPasswordAppRendererProps) {\n  const {\n    canAdmin,\n    canSubmit,\n    confirmPasswordValue,\n    passwordValue,\n    location,\n    submitting,\n    success\n  } = props;\n\n  if (!canAdmin) {\n    return <Unauthorized />;\n  }\n\n  return (\n    <div className=\"page-wrapper-simple\">\n      <div className=\"page-simple\">\n        {success ? (\n          <Alert variant=\"success\">\n            <p className=\"spacer-bottom\">{translate('users.change_admin_password.form.success')}</p>\n            {/* We must not use Link here, because we need a refresh of the /api/navigation/global call. */}\n            <a href={getReturnUrl(location)}>\n              {translate('users.change_admin_password.form.continue_to_app')}\n            </a>\n          </Alert>\n        ) : (\n          <>\n            <GlobalMessagesContainer />\n\n            <h1 className=\"text-center bg-danger big padded\">\n              {translate('users.change_admin_password.instance_is_at_risk')}\n            </h1>\n            <p className=\"text-center huge huge-spacer-top\">\n              {translate('users.change_admin_password.header')}\n            </p>\n            <p className=\"text-center huge-spacer-top huge-spacer-bottom\">\n              {translate('users.change_admin_password.description')}\n            </p>\n\n            <form\n              className=\"text-center\"\n              onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                props.onSubmit();\n              }}>\n              <h2 className=\"big-spacer-bottom big\">\n                {translate('users.change_admin_password.form.header')}\n              </h2>\n\n              <MandatoryFieldsExplanation className=\"form-field\" />\n\n              <div className=\"form-field\">\n                <label htmlFor=\"user-password\">\n                  {translate('users.change_admin_password.form.password')}\n                  <MandatoryFieldMarker />\n                </label>\n                <input\n                  id=\"user-password\"\n                  name=\"password\"\n                  onChange={(e: React.SyntheticEvent<HTMLInputElement>) => {\n                    props.onPasswordChange(e.currentTarget.value);\n                  }}\n                  required={true}\n                  type=\"password\"\n                  value={passwordValue}\n                />\n              </div>\n\n              <div className=\"form-field\">\n                <label htmlFor=\"confirm-user-password\">\n                  {translate('users.change_admin_password.form.confirm')}\n                  <MandatoryFieldMarker />\n                </label>\n                <input\n                  id=\"confirm-user-password\"\n                  name=\"confirm-password\"\n                  onChange={(e: React.SyntheticEvent<HTMLInputElement>) => {\n                    props.onConfirmPasswordChange(e.currentTarget.value);\n                  }}\n                  required={true}\n                  type=\"password\"\n                  value={confirmPasswordValue}\n                />\n\n                {confirmPasswordValue === passwordValue &&\n                  passwordValue === DEFAULT_ADMIN_PASSWORD && (\n                    <Alert className=\"spacer-top\" variant=\"warning\">\n                      {translate('users.change_admin_password.form.cannot_use_default_password')}\n                    </Alert>\n                  )}\n              </div>\n\n              <div className=\"form-field\">\n                <SubmitButton disabled={!canSubmit || submitting}>\n                  {translate('update_verb')}\n                  {submitting && <i className=\"spinner spacer-left\" />}\n                </SubmitButton>\n              </div>\n            </form>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const DEFAULT_ADMIN_LOGIN = 'admin';\nexport const DEFAULT_ADMIN_PASSWORD = 'admin';\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { changePassword } from '../../api/users';\nimport { Location, withRouter } from '../../components/hoc/withRouter';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport ChangeAdminPasswordAppRenderer from './ChangeAdminPasswordAppRenderer';\nimport { DEFAULT_ADMIN_LOGIN, DEFAULT_ADMIN_PASSWORD } from './constants';\n\ninterface Props {\n  canAdmin?: boolean;\n  instanceUsesDefaultAdminCredentials?: boolean;\n  location: Location;\n}\n\ninterface State {\n  passwordValue: string;\n  confirmPasswordValue: string;\n  canSubmit?: boolean;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport class ChangeAdminPasswordApp extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      passwordValue: '',\n      confirmPasswordValue: '',\n      submitting: false,\n      success: !props.instanceUsesDefaultAdminCredentials\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handlePasswordChange = (passwordValue: string) => {\n    this.setState({ passwordValue }, this.checkCanSubmit);\n  };\n\n  handleConfirmPasswordChange = (confirmPasswordValue: string) => {\n    this.setState({ confirmPasswordValue }, this.checkCanSubmit);\n  };\n\n  handleSubmit = async () => {\n    const { canSubmit, passwordValue } = this.state;\n    if (canSubmit) {\n      this.setState({ submitting: true });\n      const success = await changePassword({\n        login: DEFAULT_ADMIN_LOGIN,\n        password: passwordValue\n      }).then(\n        () => true,\n        () => false\n      );\n      if (this.mounted) {\n        this.setState({ submitting: false, success });\n      }\n    }\n  };\n\n  checkCanSubmit = () => {\n    this.setState(({ passwordValue, confirmPasswordValue }) => ({\n      canSubmit: passwordValue === confirmPasswordValue && passwordValue !== DEFAULT_ADMIN_PASSWORD\n    }));\n  };\n\n  render() {\n    const { canAdmin, location } = this.props;\n    const { canSubmit, confirmPasswordValue, passwordValue, submitting, success } = this.state;\n    return (\n      <ChangeAdminPasswordAppRenderer\n        canAdmin={canAdmin}\n        passwordValue={passwordValue}\n        confirmPasswordValue={confirmPasswordValue}\n        canSubmit={canSubmit}\n        onPasswordChange={this.handlePasswordChange}\n        onConfirmPasswordChange={this.handleConfirmPasswordChange}\n        onSubmit={this.handleSubmit}\n        submitting={submitting}\n        success={success}\n        location={location}\n      />\n    );\n  }\n}\n\nexport const mapStateToProps = (state: Store) => {\n  const { canAdmin, instanceUsesDefaultAdminCredentials } = getAppState(state);\n  return { canAdmin, instanceUsesDefaultAdminCredentials };\n};\n\nexport default connect(mapStateToProps)(withRouter(ChangeAdminPasswordApp));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\n\nexport interface MandatoryFieldMarkerProps {\n  className?: string;\n}\n\nexport default function MandatoryFieldMarker({ className }: MandatoryFieldMarkerProps) {\n  return (\n    <em\n      aria-label={translate('field_required')}\n      className={classNames('mandatory little-spacer-left', className)}>\n      *\n    </em>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from '../../helpers/l10n';\n\nexport interface MandatoryFieldsExplanationProps {\n  className?: string;\n}\n\nexport default function MandatoryFieldsExplanation({ className }: MandatoryFieldsExplanationProps) {\n  return (\n    <div aria-hidden={true} className={classNames('text-muted', className)}>\n      <FormattedMessage\n        id=\"fields_marked_with_x_required\"\n        defaultMessage={translate('fields_marked_with_x_required')}\n        values={{ star: <em className=\"mandatory\">*</em> }}\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}