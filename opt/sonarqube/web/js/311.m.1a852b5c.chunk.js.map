{"version":3,"sources":["webpack:///./src/main/js/apps/account/notifications/SonarCloudNotifications.tsx","webpack:///./src/main/js/apps/account/notifications/GlobalNotifications.tsx","webpack:///./src/main/js/apps/account/notifications/ProjectModal.tsx","webpack:///./src/main/js/apps/account/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/apps/account/notifications/Projects.tsx","webpack:///./src/main/js/apps/account/notifications/Notifications.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/Checkbox.tsx","webpack:///./src/main/js/components/controls/Checkbox.css?57e1","webpack:///./src/main/js/components/controls/Checkbox.css","webpack:///./node_modules/lodash/groupBy.js","webpack:///./src/main/js/components/icons/ChevronDownIcon.tsx","webpack:///./src/main/js/components/icons/OpenCloseIcon.tsx","webpack:///./node_modules/lodash/partition.js","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./node_modules/lodash/uniqWith.js","webpack:///./src/main/js/components/hoc/withNotifications.tsx","webpack:///./src/main/js/api/notifications.ts"],"names":["handleCheckOptOut","checked","this","props","setCurrentUserSetting","key","value","className","Checkbox","notificationsOptOut","onCheck","mapDispatchToProps","state","GlobalNotifications","channels","map","channel","NotificationsList","checkboxId","notifications","onAdd","addNotification","onRemove","removeNotification","types","type","super","mounted","handleKeyDown","event","keyCode","preventDefault","handleSelectHighlighted","handleHighlightPrevious","handleHighlightNext","getCurrentIndex","highlighted","suggestions","findIndex","suggestion","project","highlightIndex","index","length","setState","selectedProject","undefined","handleSubmit","handleSelect","handleSearch","query","addedProjects","open","Promise","resolve","loading","then","r","projects","results","find","domain","q","items","filter","item","p","projectName","name","onSubmit","closeModal","header","SimpleModal","onClose","onCloseClick","onFormSubmit","SearchBox","autoFocus","onChange","onKeyDown","placeholder","Dropdown","noPadding","active","onClick","disabled","ProjectNotifications","collapsed","isCollapsed","setCollapsed","BoxedGroupAccordion","title","isNotificationProject","search","showModal","filterSearch","toLowerCase","includes","handleAddProject","openModal","removed","allProjects","projectToRemove","notificationsByProject","n","filteredProjects","shouldBeCollapsed","Object","keys","Notifications","globalTypes","perProjectTypes","globalNotifications","projectNotifications","defer","Alert","variant","DeferredSpinner","withNotifications","submitting","stopSubmitting","handleCloseClick","currentTarget","blur","handleFormSubmit","submit","handleSubmitClick","result","children","modalProps","contentLabel","onRequestClose","onSubmitClick","handleClick","id","right","thirdState","note","href","role","Boolean","defaultProps","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","baseAssignValue","createAggregator","hasOwnProperty","prototype","groupBy","call","ChevronDownIcon","fill","iconProps","d","style","OpenCloseIcon","partition","hoveringInner","data","onDetailEnter","onDetailLeave","renderHeader","onMouseEnter","onMouseLeave","notification","dispatcher","globalMessageKey","projectMessageKey","getDispatcherLabel","isEnabled","handleCheck","baseUniq","array","comparator","WrappedComponent","Wrapper","fetchNotifications","catch","throwGlobalError","response","addNotificationToState","added","areNotificationsEqual","removeNotificationFromState","a","b","displayName"],"mappings":"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","file":"js/311.m.1a852b5c.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Checkbox from '../../../components/controls/Checkbox';\nimport { translate } from '../../../helpers/l10n';\nimport { getCurrentUserSetting, Store } from '../../../store/rootReducer';\nimport { setCurrentUserSetting } from '../../../store/users';\n\ninterface Props {\n  notificationsOptOut?: boolean;\n  setCurrentUserSetting: (setting: T.CurrentUserSetting) => void;\n}\n\nexport class SonarCloudNotifications extends React.PureComponent<Props> {\n  handleCheckOptOut = (checked: boolean) => {\n    this.props.setCurrentUserSetting({\n      key: 'notifications.optOut',\n      value: checked ? 'false' : 'true'\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"boxed-group\">\n        <h2>{translate('my_profile.sonarcloud_feature_notifications.title')}</h2>\n        <div className=\"boxed-group-inner\">\n          <table className=\"data zebra\">\n            <thead>\n              <tr>\n                <th />\n                <th className=\"text-center\">\n                  <h4>{translate('activate')}</h4>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{translate('my_profile.sonarcloud_feature_notifications.description')}</td>\n                <td className=\"text-center\">\n                  <Checkbox\n                    checked={!this.props.notificationsOptOut}\n                    onCheck={this.handleCheckOptOut}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => {\n  const notificationsOptOut = getCurrentUserSetting(state, 'notifications.optOut') === 'true';\n\n  return {\n    notificationsOptOut\n  };\n};\n\nconst mapDispatchToProps = {\n  setCurrentUserSetting\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SonarCloudNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\nimport { isSonarCloud } from '../../../helpers/system';\nimport NotificationsList from './NotificationsList';\nimport SonarCloudNotifications from './SonarCloudNotifications';\n\ninterface Props {\n  addNotification: (n: T.Notification) => void;\n  channels: string[];\n  notifications: T.Notification[];\n  removeNotification: (n: T.Notification) => void;\n  types: string[];\n}\n\nexport default function GlobalNotifications(props: Props) {\n  return (\n    <>\n      <section className=\"boxed-group\">\n        <h2>{translate('my_profile.overall_notifications.title')}</h2>\n\n        <div className=\"boxed-group-inner\">\n          <table className=\"data zebra\">\n            <thead>\n              <tr>\n                <th />\n                {props.channels.map(channel => (\n                  <th className=\"text-center\" key={channel}>\n                    <h4>{translate('notification.channel', channel)}</h4>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n\n            <NotificationsList\n              channels={props.channels}\n              checkboxId={getCheckboxId}\n              notifications={props.notifications}\n              onAdd={props.addNotification}\n              onRemove={props.removeNotification}\n              types={props.types}\n            />\n          </table>\n        </div>\n      </section>\n      {isSonarCloud() && <SonarCloudNotifications />}\n    </>\n  );\n}\n\nfunction getCheckboxId(type: string, channel: string) {\n  return `global-notification-${type}-${channel}`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { getSuggestions } from '../../../api/components';\nimport { ResetButtonLink, SubmitButton } from '../../../components/controls/buttons';\nimport { DropdownOverlay } from '../../../components/controls/Dropdown';\nimport SearchBox from '../../../components/controls/SearchBox';\nimport SimpleModal from '../../../components/controls/SimpleModal';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  addedProjects: T.NotificationProject[];\n  closeModal: VoidFunction;\n  onSubmit: (project: T.NotificationProject) => void;\n}\n\ninterface State {\n  highlighted?: T.NotificationProject;\n  loading?: boolean;\n  query?: string;\n  open?: boolean;\n  selectedProject?: T.NotificationProject;\n  suggestions?: T.NotificationProject[];\n}\n\nexport default class ProjectModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n    this.handleSearch = debounce(this.handleSearch, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case 13:\n        event.preventDefault();\n        this.handleSelectHighlighted();\n        break;\n      case 38:\n        event.preventDefault();\n        this.handleHighlightPrevious();\n        break;\n      case 40:\n        event.preventDefault();\n        this.handleHighlightNext();\n        break;\n    }\n  };\n\n  getCurrentIndex = () => {\n    const { highlighted, suggestions } = this.state;\n    return highlighted && suggestions\n      ? suggestions.findIndex(suggestion => suggestion.project === highlighted.project)\n      : -1;\n  };\n\n  highlightIndex = (index: number) => {\n    const { suggestions } = this.state;\n    if (suggestions && suggestions.length > 0) {\n      if (index < 0) {\n        index = suggestions.length - 1;\n      } else if (index >= suggestions.length) {\n        index = 0;\n      }\n      this.setState({\n        highlighted: suggestions[index]\n      });\n    }\n  };\n\n  handleHighlightPrevious = () => {\n    this.highlightIndex(this.getCurrentIndex() - 1);\n  };\n\n  handleHighlightNext = () => {\n    this.highlightIndex(this.getCurrentIndex() + 1);\n  };\n\n  handleSelectHighlighted = () => {\n    const { highlighted, selectedProject } = this.state;\n    if (highlighted !== undefined) {\n      if (selectedProject !== undefined && highlighted.project === selectedProject.project) {\n        this.handleSubmit();\n      } else {\n        this.handleSelect(highlighted);\n      }\n    }\n  };\n\n  handleSearch = (query: string) => {\n    const { addedProjects } = this.props;\n\n    if (query.length < 2) {\n      this.setState({ open: false, query });\n      return Promise.resolve([]);\n    }\n\n    this.setState({ loading: true, query });\n    return getSuggestions(query).then(\n      r => {\n        if (this.mounted) {\n          let suggestions = undefined;\n          const projects = r.results.find(domain => domain.q === 'TRK');\n          if (projects && projects.items.length > 0) {\n            suggestions = projects.items\n              .filter(item => !addedProjects.find(p => p.project === item.key))\n              .map(item => ({\n                project: item.key,\n                projectName: item.name\n              }));\n          }\n          this.setState({ loading: false, open: true, suggestions });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false, open: false });\n        }\n      }\n    );\n  };\n\n  handleSelect = (selectedProject: T.NotificationProject) => {\n    this.setState({\n      open: false,\n      query: selectedProject.projectName,\n      selectedProject\n    });\n  };\n\n  handleSubmit = () => {\n    const { selectedProject } = this.state;\n    if (selectedProject) {\n      this.props.onSubmit(selectedProject);\n    }\n  };\n\n  render() {\n    const { closeModal } = this.props;\n    const { highlighted, loading, query, open, selectedProject, suggestions } = this.state;\n    const header = translate('my_account.set_notifications_for.title');\n    return (\n      <SimpleModal header={header} onClose={closeModal} onSubmit={this.handleSubmit}>\n        {({ onCloseClick, onFormSubmit }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n            <div className=\"modal-body\">\n              <div className=\"modal-field abs-width-400\">\n                <label>{translate('my_account.set_notifications_for')}</label>\n                <SearchBox\n                  autoFocus={true}\n                  onChange={this.handleSearch}\n                  onKeyDown={this.handleKeyDown}\n                  placeholder={translate('search.placeholder')}\n                  value={query}\n                />\n\n                {loading && <i className=\"spinner spacer-left\" />}\n\n                {!loading && open && (\n                  <div className=\"position-relative\">\n                    <DropdownOverlay className=\"abs-width-400\" noPadding={true}>\n                      {suggestions && suggestions.length > 0 ? (\n                        <ul className=\"notifications-add-project-search-results\">\n                          {suggestions.map(suggestion => (\n                            <li\n                              className={classNames({\n                                active: highlighted && highlighted.project === suggestion.project\n                              })}\n                              key={suggestion.project}\n                              onClick={() => this.handleSelect(suggestion)}>\n                              {suggestion.projectName}\n                            </li>\n                          ))}\n                        </ul>\n                      ) : (\n                        <div className=\"notifications-add-project-no-search-results\">\n                          {translate('no_results')}\n                        </div>\n                      )}\n                    </DropdownOverlay>\n                  </div>\n                )}\n              </div>\n            </div>\n            <footer className=\"modal-foot\">\n              <div>\n                <SubmitButton disabled={selectedProject === undefined}>\n                  {translate('add_verb')}\n                </SubmitButton>\n                <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n              </div>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedGroupAccordion from '../../../components/controls/BoxedGroupAccordion';\nimport { translate } from '../../../helpers/l10n';\nimport NotificationsList from './NotificationsList';\n\ninterface Props {\n  addNotification: (n: T.Notification) => void;\n  channels: string[];\n  collapsed: boolean;\n  notifications: T.Notification[];\n  project: T.NotificationProject;\n  removeNotification: (n: T.Notification) => void;\n  types: string[];\n}\n\nexport default function ProjectNotifications(props: Props) {\n  const { collapsed, project, channels } = props;\n  const [isCollapsed, setCollapsed] = React.useState<boolean>(collapsed);\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${props.project.project}-${type}-${channel}`;\n  };\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ ...props.project, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      ...props.project,\n      channel,\n      type\n    });\n  };\n\n  const toggleExpanded = () => setCollapsed(!isCollapsed);\n\n  return (\n    <BoxedGroupAccordion\n      onClick={toggleExpanded}\n      open={!isCollapsed}\n      title={<h4 className=\"display-inline-block\">{project.projectName}</h4>}>\n      <table className=\"data zebra notifications-table\" key={project.project}>\n        <thead>\n          <tr>\n            <th aria-label={translate('project')} />\n            {channels.map(channel => (\n              <th className=\"text-center\" key={channel}>\n                <h4>{translate('notification.channel', channel)}</h4>\n              </th>\n            ))}\n          </tr>\n        </thead>\n\n        <NotificationsList\n          channels={props.channels}\n          checkboxId={getCheckboxId}\n          notifications={props.notifications}\n          onAdd={handleAddNotification}\n          onRemove={handleRemoveNotification}\n          project={true}\n          types={props.types}\n        />\n      </table>\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, sortBy, uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { Button } from '../../../components/controls/buttons';\nimport SearchBox from '../../../components/controls/SearchBox';\nimport { translate } from '../../../helpers/l10n';\nimport ProjectModal from './ProjectModal';\nimport ProjectNotifications from './ProjectNotifications';\n\nexport interface Props {\n  addNotification: (n: T.Notification) => void;\n  channels: string[];\n  notifications: T.Notification[];\n  removeNotification: (n: T.Notification) => void;\n  types: string[];\n}\n\nconst THRESHOLD_COLLAPSED = 3;\n\ninterface State {\n  addedProjects: T.NotificationProject[];\n  search: string;\n  showModal: boolean;\n}\n\nfunction isNotificationProject(project: {\n  project?: string;\n  projectName?: string;\n}): project is T.NotificationProject {\n  return project.project !== undefined && project.projectName !== undefined;\n}\n\nexport default class Projects extends React.PureComponent<Props, State> {\n  state: State = {\n    addedProjects: [],\n    search: '',\n    showModal: false\n  };\n\n  filterSearch = (project: T.NotificationProject, search: string) => {\n    return project.projectName && project.projectName.toLowerCase().includes(search);\n  };\n\n  handleAddProject = (project: T.NotificationProject) => {\n    this.setState(state => {\n      return {\n        addedProjects: [...state.addedProjects, project]\n      };\n    });\n  };\n\n  handleSearch = (search = '') => {\n    this.setState({ search: search.toLowerCase() });\n  };\n\n  handleSubmit = (selectedProject: T.NotificationProject) => {\n    if (selectedProject) {\n      this.handleAddProject(selectedProject);\n    }\n\n    this.closeModal();\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  openModal = () => {\n    this.setState({ showModal: true });\n  };\n\n  removeNotification = (removed: T.Notification, allProjects: T.NotificationProject[]) => {\n    const projectToRemove = allProjects.find(p => p.project === removed.project);\n    if (projectToRemove) {\n      this.handleAddProject(projectToRemove);\n    }\n\n    this.props.removeNotification(removed);\n  };\n\n  render() {\n    const { notifications } = this.props;\n    const { addedProjects, search } = this.state;\n\n    const projects = uniqBy(notifications, project => project.project).filter(\n      isNotificationProject\n    ) as T.NotificationProject[];\n    const notificationsByProject = groupBy(notifications, n => n.project);\n    const allProjects = uniqBy([...addedProjects, ...projects], project => project.project);\n    const filteredProjects = sortBy(allProjects, 'projectName').filter(p =>\n      this.filterSearch(p, search)\n    );\n    const shouldBeCollapsed = Object.keys(notificationsByProject).length > THRESHOLD_COLLAPSED;\n\n    return (\n      <section className=\"boxed-group\" data-test=\"account__project-notifications\">\n        <div className=\"boxed-group-inner\">\n          <div className=\"page-actions\">\n            <Button onClick={this.openModal}>\n              <span data-test=\"account__add-project-notification\">\n                {translate('my_profile.per_project_notifications.add')}\n              </span>\n            </Button>\n          </div>\n\n          <h2>{translate('my_profile.per_project_notifications.title')}</h2>\n        </div>\n\n        {this.state.showModal && (\n          <ProjectModal\n            addedProjects={allProjects}\n            closeModal={this.closeModal}\n            onSubmit={this.handleSubmit}\n          />\n        )}\n\n        <div className=\"boxed-group-inner\">\n          {allProjects.length === 0 && (\n            <div className=\"note\">{translate('my_account.no_project_notifications')}</div>\n          )}\n\n          {allProjects.length > 0 && (\n            <div className=\"big-spacer-bottom\">\n              <SearchBox\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_projects')}\n              />\n            </div>\n          )}\n\n          {filteredProjects.map(project => {\n            const collapsed = addedProjects.find(p => p.project === project.project)\n              ? false\n              : shouldBeCollapsed;\n            return (\n              <ProjectNotifications\n                addNotification={this.props.addNotification}\n                channels={this.props.channels}\n                collapsed={collapsed}\n                key={project.project}\n                notifications={notificationsByProject[project.project] || []}\n                project={project}\n                removeNotification={n => this.removeNotification(n, allProjects)}\n                types={this.props.types}\n              />\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  withNotifications,\n  WithNotificationsProps\n} from '../../../components/hoc/withNotifications';\nimport { Alert } from '../../../components/ui/Alert';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport GlobalNotifications from './GlobalNotifications';\nimport Projects from './Projects';\n\nexport function Notifications(props: WithNotificationsProps) {\n  const {\n    addNotification,\n    channels,\n    globalTypes,\n    loading,\n    notifications,\n    perProjectTypes,\n    removeNotification\n  } = props;\n\n  const [globalNotifications, projectNotifications] = partition(notifications, n => !n.project);\n\n  return (\n    <div className=\"account-body account-container\">\n      <Helmet defer={false} title={translate('my_account.notifications')} />\n      <Alert variant=\"info\">{translate('notification.dispatcher.information')}</Alert>\n      <DeferredSpinner loading={loading}>\n        {notifications && (\n          <>\n            <GlobalNotifications\n              addNotification={addNotification}\n              channels={channels}\n              notifications={globalNotifications}\n              removeNotification={removeNotification}\n              types={globalTypes}\n            />\n            <Projects\n              addNotification={addNotification}\n              channels={channels}\n              notifications={projectNotifications}\n              removeNotification={removeNotification}\n              types={perProjectTypes}\n            />\n          </>\n        )}\n      </DeferredSpinner>\n    </div>\n  );\n}\n\nexport default withNotifications(Notifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void | Response>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport DeferredSpinner from '../ui/DeferredSpinner';\nimport './Checkbox.css';\n\ninterface Props {\n  checked: boolean;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  id?: string;\n  loading?: boolean;\n  onCheck: (checked: boolean, id?: string) => void;\n  right?: boolean;\n  thirdState?: boolean;\n  title?: string;\n}\n\nexport default class Checkbox extends React.PureComponent<Props> {\n  static defaultProps = {\n    thirdState: false\n  };\n\n  handleClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    if (!this.props.disabled) {\n      this.props.onCheck(!this.props.checked, this.props.id);\n    }\n  };\n\n  render() {\n    const { checked, children, disabled, id, loading, right, thirdState, title } = this.props;\n    const className = classNames('icon-checkbox', {\n      'icon-checkbox-checked': checked,\n      'icon-checkbox-single': thirdState,\n      'icon-checkbox-disabled': disabled\n    });\n\n    if (children) {\n      return (\n        <a\n          aria-checked={checked}\n          className={classNames('link-checkbox', this.props.className, {\n            note: disabled,\n            disabled\n          })}\n          href=\"#\"\n          id={id}\n          onClick={this.handleClick}\n          role=\"checkbox\"\n          title={title}>\n          {right && children}\n          <DeferredSpinner loading={Boolean(loading)}>\n            <i className={className} />\n          </DeferredSpinner>\n          {!right && children}\n        </a>\n      );\n    }\n\n    if (loading) {\n      return <DeferredSpinner />;\n    }\n\n    return (\n      <a\n        aria-checked={checked}\n        className={classNames(className, this.props.className)}\n        href=\"#\"\n        id={id}\n        onClick={this.handleClick}\n        role=\"checkbox\"\n        title={title}\n      />\n    );\n  }\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./Checkbox.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".icon-checkbox{display:inline-block;line-height:1;vertical-align:top;padding:1px 2px;box-sizing:border-box}a.icon-checkbox{border-bottom:none}.icon-checkbox:focus{outline:none}.icon-checkbox:before{content:\\\" \\\";display:inline-block;width:10px;height:10px;border:1px solid #236a97;border-radius:2px;transition:border-color .2s ease,background-color .2s ease,background-image .2s ease,box-shadow .4s ease}.icon-checkbox:not(.icon-checkbox-disabled):focus:before,.link-checkbox:not(.disabled):focus:focus .icon-checkbox:before{box-shadow:0 0 0 3px rgba(35,106,151,.25)}.icon-checkbox-checked:before{background-color:#4b9fd5;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 14 14' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='1.414'%3E%3Cpath d='M12 4.665c0 .172-.06.318-.18.438l-5.55 5.55c-.12.12-.266.18-.438.18s-.318-.06-.438-.18L2.18 7.438C2.06 7.317 2 7.17 2 7s.06-.318.18-.44l.878-.876c.12-.12.267-.18.44-.18.17 0 .317.06.437.18l1.897 1.903 4.233-4.24c.12-.12.266-.18.438-.18s.32.06.44.18l.876.88c.12.12.18.265.18.438z' fill='%23fff' fill-rule='nonzero'/%3E%3C/svg%3E\\\");border-color:#4b9fd5}.icon-checkbox-checked.icon-checkbox-single:before{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 14 14' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='1.414'%3E%3Cpath d='M10 4.698A.697.697 0 0 0 9.302 4H4.698A.697.697 0 0 0 4 4.698v4.604c0 .386.312.698.698.698h4.604A.697.697 0 0 0 10 9.302V4.698z' fill='%23fff'/%3E%3C/svg%3E\\\")}.icon-checkbox-disabled:before{border:1px solid #bbb;cursor:not-allowed}.icon-checkbox-disabled.icon-checkbox-checked:before{background-color:#bbb}.icon-checkbox-invisible{visibility:hidden}.link-checkbox{color:inherit;border-bottom:none}.link-checkbox.disabled,.link-checkbox.disabled:hover,.link-checkbox.disabled label{color:#666;cursor:not-allowed}.link-checkbox:active,.link-checkbox:focus,.link-checkbox:hover{color:inherit}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ fill = 'currentColor', ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightIcon';\nimport { IconProps } from './Icon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...iconProps }: Props) {\n  return open ? <ChevronDownIcon {...iconProps} /> : <ChevronRightIcon {...iconProps} />;\n}\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport OpenCloseIcon from '../icons/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from '../../../components/controls/Checkbox';\nimport { hasMessage, translate } from '../../../helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","var baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n}\n\nmodule.exports = uniqWith;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniqWith } from 'lodash';\nimport * as React from 'react';\nimport { addNotification, getNotifications, removeNotification } from '../../api/notifications';\nimport { getWrappedDisplayName } from './utils';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport interface WithNotificationsProps {\n  addNotification: (added: T.Notification) => void;\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n  removeNotification: (removed: T.Notification) => void;\n}\n\nexport function withNotifications<P>(\n  WrappedComponent: React.ComponentType<P & WithNotificationsProps>\n) {\n  class Wrapper extends React.Component<P, State> {\n    mounted = false;\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withNotifications');\n\n    state: State = {\n      channels: [],\n      globalTypes: [],\n      loading: true,\n      notifications: [],\n      perProjectTypes: []\n    };\n\n    componentDidMount() {\n      this.mounted = true;\n      this.fetchNotifications();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n\n    fetchNotifications = () => {\n      getNotifications().then(\n        response => {\n          if (this.mounted) {\n            this.setState({\n              channels: response.channels,\n              globalTypes: response.globalTypes,\n              loading: false,\n              notifications: response.notifications,\n              perProjectTypes: response.perProjectTypes\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    };\n\n    addNotificationToState = (added: T.Notification) => {\n      this.setState(state => {\n        const notifications = uniqWith([...state.notifications, added], this.areNotificationsEqual);\n        return { notifications };\n      });\n    };\n\n    removeNotificationFromState = (removed: T.Notification) => {\n      this.setState(state => {\n        const notifications = state.notifications.filter(\n          notification => !this.areNotificationsEqual(notification, removed)\n        );\n        return { notifications };\n      });\n    };\n\n    addNotification = (added: T.Notification) => {\n      // optimistic update\n      this.addNotificationToState(added);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: added.channel, project: added.project, type: added.type };\n      addNotification(data).catch(() => {\n        this.removeNotificationFromState(added);\n      });\n    };\n\n    removeNotification = (removed: T.Notification) => {\n      // optimistic update\n      this.removeNotificationFromState(removed);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: removed.channel, project: removed.project, type: removed.type };\n      removeNotification(data).catch(() => {\n        this.addNotificationToState(removed);\n      });\n    };\n\n    areNotificationsEqual = (a: T.Notification, b: T.Notification) => {\n      return a.channel === b.channel && a.type === b.type && a.project === b.project;\n    };\n\n    render() {\n      const { channels, globalTypes, loading, notifications, perProjectTypes } = this.state;\n      return (\n        <WrappedComponent\n          {...this.props}\n          addNotification={this.addNotification}\n          channels={channels}\n          globalTypes={globalTypes}\n          loading={loading}\n          notifications={notifications}\n          perProjectTypes={perProjectTypes}\n          removeNotification={this.removeNotification}\n        />\n      );\n    }\n  }\n\n  return Wrapper;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { getJSON, post } from '../helpers/request';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}