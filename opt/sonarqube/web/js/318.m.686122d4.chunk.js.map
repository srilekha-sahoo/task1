{"version":3,"sources":["webpack:///./src/main/js/apps/users/components/UserScmAccountInput.tsx","webpack:///./src/main/js/apps/users/components/UserForm.tsx","webpack:///./src/main/js/apps/users/Header.tsx","webpack:///./src/main/js/apps/users/Search.tsx","webpack:///./src/main/js/apps/users/components/TokensFormModal.tsx","webpack:///./src/main/js/apps/users/components/DeactivateForm.tsx","webpack:///./src/main/js/apps/users/components/PasswordForm.tsx","webpack:///./src/main/js/apps/users/components/UserActions.tsx","webpack:///./src/main/js/apps/users/components/GroupsForm.tsx","webpack:///./src/main/js/apps/users/components/UserGroups.tsx","webpack:///./src/main/js/apps/users/components/UserListItemIdentity.tsx","webpack:///./src/main/js/apps/users/components/UserScmAccounts.tsx","webpack:///./src/main/js/apps/users/components/UserListItem.tsx","webpack:///./src/main/js/apps/users/UsersList.tsx","webpack:///./src/main/js/apps/users/utils.ts","webpack:///./src/main/js/apps/users/UsersApp.tsx","webpack:///./src/main/js/components/intl/DateTimeFormatter.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/intl/DateFromNow.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/api/user-tokens.ts","webpack:///./src/main/js/apps/users/components/TokensFormItem.tsx","webpack:///./src/main/js/apps/users/components/TokensFormNewToken.tsx","webpack:///./src/main/js/apps/users/components/TokensForm.tsx"],"names":["handleChange","event","this","props","onChange","idx","currentTarget","value","handleRemove","onRemove","className","maxLength","type","scmAccount","onClick","super","mounted","handleError","response","includes","status","then","errorMsg","setState","error","throwGlobalError","handleEmailChange","email","handleLoginChange","login","handleNameChange","name","handlePasswordChange","password","handleCreateUser","state","undefined","scmAccounts","onUpdateUsers","onClose","handleUpdateUser","user","local","handleAddScmAccount","concat","handleUpdateScmAccount","oldScmAccounts","slice","handleRemoveScmAccount","header","SimpleModal","onSubmit","size","onCloseClick","onFormSubmit","submitting","autoComplete","id","Alert","variant","MandatoryFieldsExplanation","htmlFor","MandatoryFieldMarker","autoFocus","minLength","required","disabled","map","scm","key","openUserForm","handleOpenUserForm","handleCloseUserForm","DeferredSpinner","loading","handleSearch","search","updateQuery","query","SearchBox","placeholder","TokensFormModal","Modal","contentLabel","onRequestClose","defaultMessage","values","TokensForm","deleteConfirmation","updateTokensCount","handleDeactivate","preventDefault","confirmPassword","newPassword","oldPassword","handleConfirmPasswordChange","handleNewPasswordChange","handleOldPasswordChange","handleChangePassword","length","previousPassword","addGlobalSuccessMessage","isCurrentUser","handleOpenDeactivateForm","openForm","handleOpenPasswordForm","handleOpenUpdateForm","handleCloseForm","renderActions","ActionsDropdown","destructive","fetchUsers","searchParams","p","page","ps","pageSize","q","selected","filter","data","prevState","more","groups","newSeletedGroups","gp","selectedGroups","lastSearchParams","needToReload","groupsTotalCount","paging","total","handleSelect","handleUnselect","handleCloseClick","handleClose","renderElement","group","description","SelectList","elements","elementsTotalCount","All","onSearch","onSelect","onUnselect","selectedElements","withPaging","href","showMore","handleOpenForm","toggleShowMore","evt","limit","GROUPS_LIMIT","tooltip","BulletListIcon","UserListItemIdentity","identityProvider","externalProvider","ExternalProvider","style","backgroundColor","color","secondFontColor","alt","height","src","iconPath","width","externalIdentity","SCM_LIMIT","openTokenForm","handleOpenTokensForm","handleCloseTokensForm","Avatar","hash","avatar","DateFromNow","date","lastConnectionDate","hourPrecision","tokensCount","UsersList","currentUser","identityProviders","users","find","provider","isLoggedIn","parseQuery","urlQuery","serializeQuery","finishLoading","fetchIdentityProviders","location","fetchMoreUsers","pageIndex","newQuery","router","push","nextProps","Suggestions","suggestions","defer","title","ListFooter","count","loadMore","ready","withRouter","withCurrentUser","formatterOption","year","month","day","hour","minute","DateTimeFormatter","children","ConfirmModal","handleSubmit","result","onConfirm","confirmData","renderModalContent","confirmButtonText","confirmDisable","headerDescription","isDestructive","cancelButtonText","noBackdrop","modalProps","originalChildren","f","Date","now","parsedDate","formattedDate","longFormatterOption","DateFormatter","long","ConfirmButton","renderConfirmModal","modalBody","modalHeader","modalHeaderDescription","confirmModalProps","modal","ModalButton","handleButtonClick","handleFormSubmit","handleCloseModal","message","dispatch","getTokens","r","userTokens","generateToken","catch","revokeToken","showConfirmation","handleClick","handleRevoke","token","onRevokeToken","Tooltip","overlay","createdAt","TokensFormNewToken","copyValue","generating","newTokenName","tokens","fetchTokens","handleGenerateToken","newToken","handleRevokeToken","revokedToken","handleNewTokenChange","colSpan","customSpinner","renderItems"],"mappings":"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","file":"js/318.m.686122d4.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from '../../../components/controls/buttons';\n\nexport interface Props {\n  idx: number;\n  scmAccount: string;\n  onChange: (idx: number, scmAccount: string) => void;\n  onRemove: (idx: number) => void;\n}\n\nexport default class UserScmAccountInput extends React.PureComponent<Props> {\n  handleChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.props.onChange(this.props.idx, event.currentTarget.value);\n\n  handleRemove = () => this.props.onRemove(this.props.idx);\n\n  render() {\n    return (\n      <div className=\"js-scm-account display-flex-row spacer-bottom\">\n        <input\n          maxLength={255}\n          onChange={this.handleChange}\n          type=\"text\"\n          value={this.props.scmAccount}\n        />\n        <DeleteButton onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq } from 'lodash';\nimport * as React from 'react';\nimport { createUser, updateUser } from '../../../api/users';\nimport throwGlobalError from '../../../app/utils/throwGlobalError';\nimport { Button, ResetButtonLink, SubmitButton } from '../../../components/controls/buttons';\nimport SimpleModal from '../../../components/controls/SimpleModal';\nimport { Alert } from '../../../components/ui/Alert';\nimport MandatoryFieldMarker from '../../../components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from '../../../components/ui/MandatoryFieldsExplanation';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { parseError } from '../../../helpers/request';\nimport UserScmAccountInput from './UserScmAccountInput';\n\nexport interface Props {\n  onClose: () => void;\n  onUpdateUsers: () => void;\n  user?: T.User;\n}\n\ninterface State {\n  email: string;\n  error?: string;\n  login: string;\n  name: string;\n  password: string;\n  scmAccounts: string[];\n}\n\nexport default class UserForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const { user } = props;\n    if (user) {\n      this.state = {\n        email: user.email || '',\n        login: user.login,\n        name: user.name || '',\n        password: '',\n        scmAccounts: user.scmAccounts || []\n      };\n    } else {\n      this.state = {\n        email: '',\n        login: '',\n        name: '',\n        password: '',\n        scmAccounts: []\n      };\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    if (!this.mounted || ![400, 500].includes(response.status)) {\n      return throwGlobalError(response);\n    } else {\n      return parseError(response).then(\n        errorMsg => this.setState({ error: errorMsg }),\n        throwGlobalError\n      );\n    }\n  };\n\n  handleEmailChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ email: event.currentTarget.value });\n\n  handleLoginChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ login: event.currentTarget.value });\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ name: event.currentTarget.value });\n\n  handlePasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ password: event.currentTarget.value });\n\n  handleCreateUser = () => {\n    return createUser({\n      email: this.state.email || undefined,\n      login: this.state.login,\n      name: this.state.name,\n      password: this.state.password,\n      scmAccount: uniq(this.state.scmAccounts)\n    }).then(() => {\n      this.props.onUpdateUsers();\n      this.props.onClose();\n    }, this.handleError);\n  };\n\n  handleUpdateUser = () => {\n    const { user } = this.props;\n    return updateUser({\n      email: user!.local ? this.state.email : undefined,\n      login: this.state.login,\n      name: user!.local ? this.state.name : undefined,\n      scmAccount: uniq(this.state.scmAccounts)\n    }).then(() => {\n      this.props.onUpdateUsers();\n      this.props.onClose();\n    }, this.handleError);\n  };\n\n  handleAddScmAccount = () => {\n    this.setState(({ scmAccounts }) => ({ scmAccounts: scmAccounts.concat('') }));\n  };\n\n  handleUpdateScmAccount = (idx: number, scmAccount: string) =>\n    this.setState(({ scmAccounts: oldScmAccounts }) => {\n      const scmAccounts = oldScmAccounts.slice();\n      scmAccounts[idx] = scmAccount;\n      return { scmAccounts };\n    });\n\n  handleRemoveScmAccount = (idx: number) =>\n    this.setState(({ scmAccounts }) => ({\n      scmAccounts: scmAccounts.slice(0, idx).concat(scmAccounts.slice(idx + 1))\n    }));\n\n  render() {\n    const { user } = this.props;\n    const { error } = this.state;\n\n    const header = user ? translate('users.update_user') : translate('users.create_user');\n    return (\n      <SimpleModal\n        header={header}\n        onClose={this.props.onClose}\n        onSubmit={user ? this.handleUpdateUser : this.handleCreateUser}\n        size=\"small\">\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form autoComplete=\"off\" id=\"user-form\" onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n\n            <div className=\"modal-body modal-container\">\n              {error && <Alert variant=\"error\">{error}</Alert>}\n\n              {!error && user && !user.local && (\n                <Alert variant=\"warning\">{translate('users.cannot_update_delegated_user')}</Alert>\n              )}\n\n              <MandatoryFieldsExplanation className=\"modal-field\" />\n\n              {!user && (\n                <div className=\"modal-field\">\n                  <label htmlFor=\"create-user-login\">\n                    {translate('login')}\n                    <MandatoryFieldMarker />\n                  </label>\n                  {/* keep this fake field to hack browser autofill */}\n                  <input className=\"hidden\" name=\"login-fake\" type=\"text\" />\n                  <input\n                    autoFocus={true}\n                    id=\"create-user-login\"\n                    maxLength={255}\n                    minLength={3}\n                    name=\"login\"\n                    onChange={this.handleLoginChange}\n                    required={true}\n                    type=\"text\"\n                    value={this.state.login}\n                  />\n                  <p className=\"note\">{translateWithParameters('users.minimum_x_characters', 3)}</p>\n                </div>\n              )}\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-user-name\">\n                  {translate('name')}\n                  <MandatoryFieldMarker />\n                </label>\n                {/* keep this fake field to hack browser autofill */}\n                <input className=\"hidden\" name=\"name-fake\" type=\"text\" />\n                <input\n                  autoFocus={!!user}\n                  disabled={user && !user.local}\n                  id=\"create-user-name\"\n                  maxLength={200}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-user-email\">{translate('users.email')}</label>\n                {/* keep this fake field to hack browser autofill */}\n                <input className=\"hidden\" name=\"email-fake\" type=\"email\" />\n                <input\n                  disabled={user && !user.local}\n                  id=\"create-user-email\"\n                  maxLength={100}\n                  name=\"email\"\n                  onChange={this.handleEmailChange}\n                  type=\"email\"\n                  value={this.state.email}\n                />\n              </div>\n              {!user && (\n                <div className=\"modal-field\">\n                  <label htmlFor=\"create-user-password\">\n                    {translate('password')}\n                    <MandatoryFieldMarker />\n                  </label>\n                  {/* keep this fake field to hack browser autofill */}\n                  <input className=\"hidden\" name=\"password-fake\" type=\"password\" />\n                  <input\n                    id=\"create-user-password\"\n                    name=\"password\"\n                    onChange={this.handlePasswordChange}\n                    required={true}\n                    type=\"password\"\n                    value={this.state.password}\n                  />\n                </div>\n              )}\n              <div className=\"modal-field\">\n                <label>{translate('my_profile.scm_accounts')}</label>\n                {this.state.scmAccounts.map((scm, idx) => (\n                  <UserScmAccountInput\n                    idx={idx}\n                    key={idx}\n                    onChange={this.handleUpdateScmAccount}\n                    onRemove={this.handleRemoveScmAccount}\n                    scmAccount={scm}\n                  />\n                ))}\n                <div className=\"spacer-bottom\">\n                  <Button className=\"js-scm-account-add\" onClick={this.handleAddScmAccount}>\n                    {translate('add_verb')}\n                  </Button>\n                </div>\n                <p className=\"note\">{translate('user.login_or_email_used_as_scm_account')}</p>\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              {submitting && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={submitting}>\n                {user ? translate('update_verb') : translate('create')}\n              </SubmitButton>\n              <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from '../../components/controls/buttons';\nimport DeferredSpinner from '../../components/ui/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport UserForm from './components/UserForm';\n\ninterface Props {\n  loading: boolean;\n  onUpdateUsers: () => void;\n}\n\ninterface State {\n  openUserForm: boolean;\n}\n\nexport default class Header extends React.PureComponent<Props, State> {\n  state: State = { openUserForm: false };\n\n  handleOpenUserForm = () => {\n    this.setState({ openUserForm: true });\n  };\n\n  handleCloseUserForm = () => {\n    this.setState({ openUserForm: false });\n  };\n\n  render() {\n    return (\n      <header className=\"page-header\" id=\"users-header\">\n        <h1 className=\"page-title\">{translate('users.page')}</h1>\n        <DeferredSpinner loading={this.props.loading} />\n\n        <div className=\"page-actions\">\n          <Button id=\"users-create\" onClick={this.handleOpenUserForm}>\n            {translate('users.create_user')}\n          </Button>\n        </div>\n\n        <p className=\"page-description\">{translate('users.page.description')}</p>\n        {this.state.openUserForm && (\n          <UserForm onClose={this.handleCloseUserForm} onUpdateUsers={this.props.onUpdateUsers} />\n        )}\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SearchBox from '../../components/controls/SearchBox';\nimport { translate } from '../../helpers/l10n';\nimport { Query } from './utils';\n\ninterface Props {\n  query: Query;\n  updateQuery: (newQuery: Partial<Query>) => void;\n}\n\nexport default class Search extends React.PureComponent<Props> {\n  handleSearch = (search: string) => {\n    this.props.updateQuery({ search });\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className=\"panel panel-vertical bordered-bottom spacer-bottom\" id=\"users-search\">\n        <SearchBox\n          minLength={2}\n          onChange={this.handleSearch}\n          placeholder={translate('search.search_by_login_or_name')}\n          value={query.search}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ResetButtonLink } from '../../../components/controls/buttons';\nimport Modal from '../../../components/controls/Modal';\nimport { translate } from '../../../helpers/l10n';\nimport TokensForm from './TokensForm';\n\ninterface Props {\n  user: T.User;\n  onClose: () => void;\n  updateTokensCount: (login: string, tokensCount: number) => void;\n}\n\nexport default function TokensFormModal(props: Props) {\n  return (\n    <Modal contentLabel={translate('users.tokens')} onRequestClose={props.onClose}>\n      <header className=\"modal-head\">\n        <h2>\n          <FormattedMessage\n            defaultMessage={translate('users.user_X_tokens')}\n            id=\"users.user_X_tokens\"\n            values={{ user: <em>{props.user.name}</em> }}\n          />\n        </h2>\n      </header>\n      <div className=\"modal-body modal-container\">\n        <TokensForm\n          deleteConfirmation=\"inline\"\n          login={props.user.login}\n          updateTokensCount={props.updateTokensCount}\n        />\n      </div>\n      <footer className=\"modal-foot\">\n        <ResetButtonLink onClick={props.onClose}>{translate('Done')}</ResetButtonLink>\n      </footer>\n    </Modal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { deactivateUser } from '../../../api/users';\nimport { ResetButtonLink, SubmitButton } from '../../../components/controls/buttons';\nimport Modal from '../../../components/controls/Modal';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\nexport interface Props {\n  onClose: () => void;\n  onUpdateUsers: () => void;\n  user: T.UserActive;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class DeactivateForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeactivate = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    deactivateUser({ login: this.props.user.login }).then(\n      () => {\n        this.props.onUpdateUsers();\n        this.props.onClose();\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ submitting: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { user } = this.props;\n    const { submitting } = this.state;\n\n    const header = translate('users.deactivate_user');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form autoComplete=\"off\" id=\"deactivate-user-form\" onSubmit={this.handleDeactivate}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n          <div className=\"modal-body\">\n            {translateWithParameters('users.deactivate_user.confirmation', user.name, user.login)}\n          </div>\n          <footer className=\"modal-foot\">\n            {submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton className=\"js-confirm button-red\" disabled={submitting}>\n              {translate('users.deactivate')}\n            </SubmitButton>\n            <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { changePassword } from '../../../api/users';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\nimport throwGlobalError from '../../../app/utils/throwGlobalError';\nimport { ResetButtonLink, SubmitButton } from '../../../components/controls/buttons';\nimport Modal from '../../../components/controls/Modal';\nimport { Alert } from '../../../components/ui/Alert';\nimport MandatoryFieldMarker from '../../../components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from '../../../components/ui/MandatoryFieldsExplanation';\nimport { translate } from '../../../helpers/l10n';\nimport { parseError } from '../../../helpers/request';\n\ninterface Props {\n  isCurrentUser: boolean;\n  onClose: () => void;\n  user: T.User;\n}\n\ninterface State {\n  confirmPassword: string;\n  error?: string;\n  newPassword: string;\n  oldPassword: string;\n  submitting: boolean;\n}\n\nexport default class PasswordForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    confirmPassword: '',\n    newPassword: '',\n    oldPassword: '',\n    submitting: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    if (!this.mounted || response.status !== 400) {\n      return throwGlobalError(response);\n    } else {\n      return parseError(response).then(\n        errorMsg => this.setState({ error: errorMsg, submitting: false }),\n        throwGlobalError\n      );\n    }\n  };\n\n  handleConfirmPasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ confirmPassword: event.currentTarget.value });\n\n  handleNewPasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ newPassword: event.currentTarget.value });\n\n  handleOldPasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ oldPassword: event.currentTarget.value });\n\n  handleChangePassword = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (\n      this.state.newPassword.length > 0 &&\n      this.state.newPassword === this.state.confirmPassword\n    ) {\n      this.setState({ submitting: true });\n      changePassword({\n        login: this.props.user.login,\n        password: this.state.newPassword,\n        previousPassword: this.state.oldPassword\n      }).then(() => {\n        addGlobalSuccessMessage(translate('my_profile.password.changed'));\n        this.props.onClose();\n      }, this.handleError);\n    }\n  };\n\n  render() {\n    const { error, submitting, newPassword, confirmPassword } = this.state;\n\n    const header = translate('my_profile.password.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose} size=\"small\">\n        <form autoComplete=\"off\" id=\"user-password-form\" onSubmit={this.handleChangePassword}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n          <div className=\"modal-body\">\n            {error && <Alert variant=\"error\">{error}</Alert>}\n\n            <MandatoryFieldsExplanation className=\"modal-field\" />\n\n            {this.props.isCurrentUser && (\n              <div className=\"modal-field\">\n                <label htmlFor=\"old-user-password\">\n                  {translate('my_profile.password.old')}\n                  <MandatoryFieldMarker />\n                </label>\n                {/* keep this fake field to hack browser autofill */}\n                <input className=\"hidden\" name=\"old-password-fake\" type=\"password\" />\n                <input\n                  id=\"old-user-password\"\n                  name=\"old-password\"\n                  onChange={this.handleOldPasswordChange}\n                  required={true}\n                  type=\"password\"\n                  value={this.state.oldPassword}\n                />\n              </div>\n            )}\n            <div className=\"modal-field\">\n              <label htmlFor=\"user-password\">\n                {translate('my_profile.password.new')}\n                <MandatoryFieldMarker />\n              </label>\n              {/* keep this fake field to hack browser autofill */}\n              <input className=\"hidden\" name=\"password-fake\" type=\"password\" />\n              <input\n                id=\"user-password\"\n                name=\"password\"\n                onChange={this.handleNewPasswordChange}\n                required={true}\n                type=\"password\"\n                value={this.state.newPassword}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"confirm-user-password\">\n                {translate('my_profile.password.confirm')}\n                <MandatoryFieldMarker />\n              </label>\n              {/* keep this fake field to hack browser autofill */}\n              <input className=\"hidden\" name=\"confirm-password-fake\" type=\"password\" />\n              <input\n                id=\"confirm-user-password\"\n                name=\"confirm-password\"\n                onChange={this.handleConfirmPasswordChange}\n                required={true}\n                type=\"password\"\n                value={this.state.confirmPassword}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            {submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitting || !newPassword || newPassword !== confirmPassword}>\n              {translate('change_verb')}\n            </SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from '../../../components/controls/ActionsDropdown';\nimport { translate } from '../../../helpers/l10n';\nimport { isUserActive } from '../../../helpers/users';\nimport DeactivateForm from './DeactivateForm';\nimport PasswordForm from './PasswordForm';\nimport UserForm from './UserForm';\n\ninterface Props {\n  isCurrentUser: boolean;\n  onUpdateUsers: () => void;\n  user: T.User;\n}\n\ninterface State {\n  openForm?: string;\n}\n\nexport default class UserActions extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  handleOpenDeactivateForm = () => {\n    this.setState({ openForm: 'deactivate' });\n  };\n\n  handleOpenPasswordForm = () => {\n    this.setState({ openForm: 'password' });\n  };\n\n  handleOpenUpdateForm = () => {\n    this.setState({ openForm: 'update' });\n  };\n\n  handleCloseForm = () => {\n    this.setState({ openForm: undefined });\n  };\n\n  renderActions = () => {\n    const { user } = this.props;\n    return (\n      <ActionsDropdown>\n        <ActionsDropdownItem className=\"js-user-update\" onClick={this.handleOpenUpdateForm}>\n          {translate('update_details')}\n        </ActionsDropdownItem>\n        {user.local && (\n          <ActionsDropdownItem\n            className=\"js-user-change-password\"\n            onClick={this.handleOpenPasswordForm}>\n            {translate('my_profile.password.title')}\n          </ActionsDropdownItem>\n        )}\n        <ActionsDropdownDivider />\n        {isUserActive(user) && (\n          <ActionsDropdownItem\n            className=\"js-user-deactivate\"\n            destructive={true}\n            onClick={this.handleOpenDeactivateForm}>\n            {translate('users.deactivate')}\n          </ActionsDropdownItem>\n        )}\n      </ActionsDropdown>\n    );\n  };\n\n  render() {\n    const { openForm } = this.state;\n    const { isCurrentUser, onUpdateUsers, user } = this.props;\n\n    return (\n      <>\n        {this.renderActions()}\n        {openForm === 'deactivate' && isUserActive(user) && (\n          <DeactivateForm\n            onClose={this.handleCloseForm}\n            onUpdateUsers={onUpdateUsers}\n            user={user}\n          />\n        )}\n        {openForm === 'password' && (\n          <PasswordForm isCurrentUser={isCurrentUser} onClose={this.handleCloseForm} user={user} />\n        )}\n        {openForm === 'update' && (\n          <UserForm onClose={this.handleCloseForm} onUpdateUsers={onUpdateUsers} user={user} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport { getUserGroups, UserGroup } from '../../../api/users';\nimport { addUserToGroup, removeUserFromGroup } from '../../../api/user_groups';\nimport Modal from '../../../components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from '../../../components/controls/SelectList';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  onUpdateUsers: () => void;\n  user: T.User;\n}\n\ninterface State {\n  needToReload: boolean;\n  lastSearchParams?: SelectListSearchParams;\n  groups: UserGroup[];\n  groupsTotalCount?: number;\n  selectedGroups: string[];\n}\n\nexport default class GroupsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      groups: [],\n      selectedGroups: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsers = (searchParams: SelectListSearchParams) =>\n    getUserGroups({\n      login: this.props.user.login,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const groups = more ? [...prevState.groups, ...data.groups] : data.groups;\n          const newSeletedGroups = data.groups.filter(gp => gp.selected).map(gp => gp.name);\n          const selectedGroups = more\n            ? [...prevState.selectedGroups, ...newSeletedGroups]\n            : newSeletedGroups;\n\n          return {\n            lastSearchParams: searchParams,\n            needToReload: false,\n            groups,\n            groupsTotalCount: data.paging.total,\n            selectedGroups\n          };\n        });\n      }\n    });\n\n  handleSelect = (name: string) =>\n    addUserToGroup({\n      name,\n      login: this.props.user.login\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedGroups: [...state.selectedGroups, name]\n        }));\n      }\n    });\n\n  handleUnselect = (name: string) =>\n    removeUserFromGroup({\n      name,\n      login: this.props.user.login\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedGroups: without(state.selectedGroups, name)\n        }));\n      }\n    });\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    this.handleClose();\n  };\n\n  handleClose = () => {\n    this.props.onUpdateUsers();\n    this.props.onClose();\n  };\n\n  renderElement = (name: string): React.ReactNode => {\n    const group = find(this.state.groups, { name });\n    return (\n      <div className=\"select-list-list-item\">\n        {group === undefined ? (\n          name\n        ) : (\n          <>\n            {group.name}\n            <br />\n            <span className=\"note\">{group.description}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const header = translate('users.update_groups');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          <SelectList\n            elements={this.state.groups.map(group => group.name)}\n            elementsTotalCount={this.state.groupsTotalCount}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchUsers}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedGroups}\n            withPaging={true}\n          />\n        </div>\n\n        <footer className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('Done')}\n          </a>\n        </footer>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon } from '../../../components/controls/buttons';\nimport BulletListIcon from '../../../components/icons/BulletListIcon';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport GroupsForm from './GroupsForm';\n\ninterface Props {\n  groups: string[];\n  onUpdateUsers: () => void;\n  user: T.User;\n}\n\ninterface State {\n  openForm: boolean;\n  showMore: boolean;\n}\n\nconst GROUPS_LIMIT = 3;\n\nexport default class UserGroups extends React.PureComponent<Props, State> {\n  state: State = { openForm: false, showMore: false };\n\n  handleOpenForm = () => this.setState({ openForm: true });\n  handleCloseForm = () => this.setState({ openForm: false });\n\n  toggleShowMore = (evt: React.SyntheticEvent<HTMLAnchorElement>) => {\n    evt.preventDefault();\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { groups } = this.props;\n    const limit = groups.length > GROUPS_LIMIT ? GROUPS_LIMIT - 1 : GROUPS_LIMIT;\n    return (\n      <ul>\n        {groups.slice(0, limit).map(group => (\n          <li className=\"little-spacer-bottom\" key={group}>\n            {group}\n          </li>\n        ))}\n        {groups.length > GROUPS_LIMIT &&\n          this.state.showMore &&\n          groups.slice(limit).map(group => (\n            <li className=\"little-spacer-bottom\" key={group}>\n              {group}\n            </li>\n          ))}\n        <li className=\"little-spacer-bottom\">\n          {groups.length > GROUPS_LIMIT && !this.state.showMore && (\n            <a className=\"js-user-more-groups spacer-right\" href=\"#\" onClick={this.toggleShowMore}>\n              {translateWithParameters('more_x', groups.length - limit)}\n            </a>\n          )}\n          <ButtonIcon\n            className=\"js-user-groups button-small\"\n            onClick={this.handleOpenForm}\n            tooltip={translate('users.update_groups')}>\n            <BulletListIcon />\n          </ButtonIcon>\n        </li>\n        {this.state.openForm && (\n          <GroupsForm\n            onClose={this.handleCloseForm}\n            onUpdateUsers={this.props.onUpdateUsers}\n            user={this.props.user}\n          />\n        )}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { colors } from '../../../app/theme';\nimport { getTextColor } from '../../../helpers/colors';\nimport { getBaseUrl } from '../../../helpers/system';\n\nexport interface Props {\n  identityProvider?: T.IdentityProvider;\n  user: T.User;\n}\n\nexport default function UserListItemIdentity({ identityProvider, user }: Props) {\n  return (\n    <td className=\"text-middle\">\n      <div>\n        <strong className=\"js-user-name\">{user.name}</strong>\n        <span className=\"js-user-login note little-spacer-left\">{user.login}</span>\n      </div>\n      {user.email && <div className=\"js-user-email little-spacer-top\">{user.email}</div>}\n      {!user.local && user.externalProvider !== 'sonarqube' && (\n        <ExternalProvider identityProvider={identityProvider} user={user} />\n      )}\n    </td>\n  );\n}\n\nexport function ExternalProvider({ identityProvider, user }: Props) {\n  if (!identityProvider) {\n    return (\n      <div className=\"js-user-identity-provider little-spacer-top\">\n        <span>\n          {user.externalProvider}: {user.externalIdentity}\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"js-user-identity-provider little-spacer-top\">\n      <div\n        className=\"identity-provider\"\n        style={{\n          backgroundColor: identityProvider.backgroundColor,\n          color: getTextColor(identityProvider.backgroundColor, colors.secondFontColor)\n        }}>\n        <img\n          alt={identityProvider.name}\n          className=\"little-spacer-right\"\n          height=\"14\"\n          src={getBaseUrl() + identityProvider.iconPath}\n          width=\"14\"\n        />\n        {user.externalIdentity}\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  scmAccounts: string[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nconst SCM_LIMIT = 3;\n\nexport default class UserScmAccounts extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleShowMore = (evt: React.SyntheticEvent<HTMLAnchorElement>) => {\n    evt.preventDefault();\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { scmAccounts } = this.props;\n    const limit = scmAccounts.length > SCM_LIMIT ? SCM_LIMIT - 1 : SCM_LIMIT;\n    return (\n      <ul className=\"js-scm-accounts\">\n        {scmAccounts.slice(0, limit).map((scmAccount, idx) => (\n          <li className=\"little-spacer-bottom\" key={idx}>\n            {scmAccount}\n          </li>\n        ))}\n        {scmAccounts.length > SCM_LIMIT &&\n          (this.state.showMore ? (\n            scmAccounts.slice(limit).map((scmAccount, idx) => (\n              <li className=\"little-spacer-bottom\" key={idx + limit}>\n                {scmAccount}\n              </li>\n            ))\n          ) : (\n            <li className=\"little-spacer-bottom\">\n              <a className=\"js-user-more-scm\" href=\"#\" onClick={this.toggleShowMore}>\n                {translateWithParameters('more_x', scmAccounts.length - limit)}\n              </a>\n            </li>\n          ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon } from '../../../components/controls/buttons';\nimport BulletListIcon from '../../../components/icons/BulletListIcon';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport Avatar from '../../../components/ui/Avatar';\nimport { translate } from '../../../helpers/l10n';\nimport TokensFormModal from './TokensFormModal';\nimport UserActions from './UserActions';\nimport UserGroups from './UserGroups';\nimport UserListItemIdentity from './UserListItemIdentity';\nimport UserScmAccounts from './UserScmAccounts';\n\ninterface Props {\n  identityProvider?: T.IdentityProvider;\n  isCurrentUser: boolean;\n  onUpdateUsers: () => void;\n  updateTokensCount: (login: string, tokensCount: number) => void;\n  user: T.User;\n}\n\ninterface State {\n  openTokenForm: boolean;\n}\n\nexport default class UserListItem extends React.PureComponent<Props, State> {\n  state: State = { openTokenForm: false };\n\n  handleOpenTokensForm = () => this.setState({ openTokenForm: true });\n  handleCloseTokensForm = () => this.setState({ openTokenForm: false });\n\n  render() {\n    const { identityProvider, onUpdateUsers, user } = this.props;\n\n    return (\n      <tr>\n        <td className=\"thin nowrap text-middle\">\n          <Avatar hash={user.avatar} name={user.name} size={36} />\n        </td>\n        <UserListItemIdentity identityProvider={identityProvider} user={user} />\n        <td className=\"thin nowrap text-middle\">\n          <UserScmAccounts scmAccounts={user.scmAccounts || []} />\n        </td>\n        <td className=\"thin nowrap text-middle\">\n          <DateFromNow date={user.lastConnectionDate} hourPrecision={true} />\n        </td>\n        <td className=\"thin nowrap text-middle\">\n          <UserGroups groups={user.groups || []} onUpdateUsers={onUpdateUsers} user={user} />\n        </td>\n        <td className=\"thin nowrap text-middle\">\n          {user.tokensCount}\n          <ButtonIcon\n            className=\"js-user-tokens spacer-left button-small\"\n            onClick={this.handleOpenTokensForm}\n            tooltip={translate('users.update_tokens')}>\n            <BulletListIcon />\n          </ButtonIcon>\n        </td>\n        <td className=\"thin nowrap text-right text-middle\">\n          <UserActions\n            isCurrentUser={this.props.isCurrentUser}\n            onUpdateUsers={onUpdateUsers}\n            user={user}\n          />\n        </td>\n        {this.state.openTokenForm && (\n          <TokensFormModal\n            onClose={this.handleCloseTokensForm}\n            updateTokensCount={this.props.updateTokensCount}\n            user={user}\n          />\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\nimport UserListItem from './components/UserListItem';\n\ninterface Props {\n  currentUser: { isLoggedIn: boolean; login?: string };\n  identityProviders: T.IdentityProvider[];\n  onUpdateUsers: () => void;\n  updateTokensCount: (login: string, tokensCount: number) => void;\n  users: T.User[];\n}\n\nexport default function UsersList({\n  currentUser,\n  identityProviders,\n  onUpdateUsers,\n  updateTokensCount,\n  users\n}: Props) {\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className=\"data zebra\" id=\"users-list\">\n        <thead>\n          <tr>\n            <th />\n            <th className=\"nowrap\" />\n            <th className=\"nowrap\">{translate('my_profile.scm_accounts')}</th>\n            <th className=\"nowrap\">{translate('users.last_connection')}</th>\n            <th className=\"nowrap\">{translate('my_profile.groups')}</th>\n            <th className=\"nowrap\">{translate('users.tokens')}</th>\n            <th className=\"nowrap\">&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <UserListItem\n              identityProvider={identityProviders.find(\n                provider => user.externalProvider === provider.key\n              )}\n              isCurrentUser={currentUser.isLoggedIn && currentUser.login === user.login}\n              key={user.login}\n              onUpdateUsers={onUpdateUsers}\n              updateTokensCount={updateTokensCount}\n              user={user}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { cleanQuery, parseAsString, serializeString } from '../../helpers/query';\n\nexport interface Query {\n  search: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery): Query => ({\n    search: parseAsString(urlQuery['search'])\n  })\n);\n\nexport const serializeQuery = memoize(\n  (query: Query): T.RawQuery =>\n    cleanQuery({\n      search: query.search ? serializeString(query.search) : undefined\n    })\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { getIdentityProviders, searchUsers } from '../../api/users';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport ListFooter from '../../components/controls/ListFooter';\nimport { withCurrentUser } from '../../components/hoc/withCurrentUser';\nimport { Location, Router, withRouter } from '../../components/hoc/withRouter';\nimport { translate } from '../../helpers/l10n';\nimport Header from './Header';\nimport Search from './Search';\nimport UsersList from './UsersList';\nimport { parseQuery, Query, serializeQuery } from './utils';\n\ninterface Props {\n  currentUser: { isLoggedIn: boolean; login?: string };\n  location: Pick<Location, 'query'>;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  identityProviders: T.IdentityProvider[];\n  loading: boolean;\n  paging?: T.Paging;\n  users: T.User[];\n}\n\nexport class UsersApp extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { identityProviders: [], loading: true, users: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIdentityProviders();\n    this.fetchUsers();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.location.query.search !== this.props.location.query.search) {\n      this.fetchUsers(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  finishLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchIdentityProviders = () =>\n    getIdentityProviders().then(({ identityProviders }) => {\n      if (this.mounted) {\n        this.setState({ identityProviders });\n      }\n    });\n\n  fetchUsers = ({ location } = this.props) => {\n    this.setState({ loading: true });\n    searchUsers({ q: parseQuery(location.query).search }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ loading: false, paging, users });\n      }\n    }, this.finishLoading);\n  };\n\n  fetchMoreUsers = () => {\n    const { paging } = this.state;\n    if (paging) {\n      this.setState({ loading: true });\n      searchUsers({\n        p: paging.pageIndex + 1,\n        q: parseQuery(this.props.location.query).search\n      }).then(({ paging, users }) => {\n        if (this.mounted) {\n          this.setState(state => ({ loading: false, users: [...state.users, ...users], paging }));\n        }\n      }, this.finishLoading);\n    }\n  };\n\n  updateQuery = (newQuery: Partial<Query>) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.props.router.push({ ...this.props.location, query });\n  };\n\n  updateTokensCount = (login: string, tokensCount: number) => {\n    this.setState(state => ({\n      users: state.users.map(user => (user.login === login ? { ...user, tokensCount } : user))\n    }));\n  };\n\n  render() {\n    const query = parseQuery(this.props.location.query);\n    const { loading, paging, users } = this.state;\n    return (\n      <div className=\"page page-limited\" id=\"users-page\">\n        <Suggestions suggestions=\"users\" />\n        <Helmet defer={false} title={translate('users.page')} />\n        <Header loading={loading} onUpdateUsers={this.fetchUsers} />\n        <Search query={query} updateQuery={this.updateQuery} />\n        <UsersList\n          currentUser={this.props.currentUser}\n          identityProviders={this.state.identityProviders}\n          onUpdateUsers={this.fetchUsers}\n          updateTokensCount={this.updateTokensCount}\n          users={users}\n        />\n        {paging !== undefined && (\n          <ListFooter\n            count={users.length}\n            loadMore={this.fetchMoreUsers}\n            ready={!loading}\n            total={paging.total}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withCurrentUser(UsersApp));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport const formatterOption = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric'\n};\n\nexport default function DateTimeFormatter({ children, date }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...formatterOption}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\nimport DeferredSpinner from '../ui/DeferredSpinner';\nimport { ResetButtonLink, SubmitButton } from './buttons';\nimport ClickEventBoundary from './ClickEventBoundary';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {\n        /* noop */\n      });\n    }\n    this.props.onClose();\n    return undefined;\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <ClickEventBoundary>\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n            {headerDescription}\n          </header>\n          <div className=\"modal-body\">{children}</div>\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton\n              autoFocus={true}\n              className={isDestructive ? 'button-red' : undefined}\n              disabled={submitting || confirmDisable}>\n              {confirmButtonText}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {cancelButtonText}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      </ClickEventBoundary>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { differenceInHours } from 'date-fns';\nimport * as React from 'react';\nimport { DateSource, FormattedRelative } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\nimport { translate } from '../../helpers/l10n';\nimport DateTimeFormatter from './DateTimeFormatter';\n\nexport interface DateFromNowProps {\n  children?: (formattedDate: string) => React.ReactNode;\n  date?: DateSource;\n  hourPrecision?: boolean;\n}\n\nexport default function DateFromNow(props: DateFromNowProps) {\n  const { children: originalChildren = (f: string) => f, date, hourPrecision } = props;\n  let children = originalChildren;\n\n  if (!date) {\n    /*\n     * We return a JSX.Element to bypass typescript issue with functional components return type\n     * (https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544)\n     */\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{originalChildren(translate('never'))}</>;\n  }\n\n  if (date && hourPrecision && differenceInHours(Date.now(), date) < 1) {\n    children = () => originalChildren(translate('less_than_1_hour_ago'));\n  }\n\n  const parsedDate = parseDate(date);\n\n  return (\n    <DateTimeFormatter date={parsedDate}>\n      {formattedDate => (\n        <span title={formattedDate}>\n          <FormattedRelative value={parsedDate}>{children}</FormattedRelative>\n        </span>\n      )}\n    </DateTimeFormatter>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\nexport interface DateFormatterProps {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: DateFormatterProps) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { getJSON, post, postJSON } from '../helpers/request';\n\n/** List tokens for given user login */\nexport function getTokens(login: string): Promise<T.UserToken[]> {\n  return getJSON('/api/user_tokens/search', { login }).then(r => r.userTokens, throwGlobalError);\n}\n\nexport function generateToken(data: { name: string; login?: string }): Promise<T.NewUserToken> {\n  return postJSON('/api/user_tokens/generate', data).catch(throwGlobalError);\n}\n\nexport function revokeToken(data: { name: string; login?: string }) {\n  return post('/api/user_tokens/revoke', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { revokeToken } from '../../../api/user-tokens';\nimport { Button } from '../../../components/controls/buttons';\nimport ConfirmButton from '../../../components/controls/ConfirmButton';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport { limitComponentName } from '../../../helpers/path';\n\nexport type TokenDeleteConfirmation = 'inline' | 'modal';\n\ninterface Props {\n  deleteConfirmation: TokenDeleteConfirmation;\n  login: string;\n  onRevokeToken: (token: T.UserToken) => void;\n  token: T.UserToken;\n}\n\ninterface State {\n  loading: boolean;\n  showConfirmation: boolean;\n}\n\nconst MAX_TOKEN_NAME_FIELD = 20;\n\nexport default class TokensFormItem extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false, showConfirmation: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClick = () => {\n    if (this.state.showConfirmation) {\n      this.handleRevoke().then(() => {\n        if (this.mounted) {\n          this.setState({ showConfirmation: false });\n        }\n      });\n    } else {\n      this.setState({ showConfirmation: true });\n    }\n  };\n\n  handleRevoke = () => {\n    this.setState({ loading: true });\n    return revokeToken({ login: this.props.login, name: this.props.token.name }).then(\n      () => this.props.onRevokeToken(this.props.token),\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { deleteConfirmation, token } = this.props;\n    const { loading, showConfirmation } = this.state;\n    return (\n      <tr>\n        <td>\n          <Tooltip overlay={token.name}>\n            <span>{limitComponentName(token.name, MAX_TOKEN_NAME_FIELD)}</span>\n          </Tooltip>\n        </td>\n        <td className=\"nowrap\">\n          <DateFromNow date={token.lastConnectionDate} hourPrecision={true} />\n        </td>\n        <td className=\"thin nowrap text-right\">\n          <DateFormatter date={token.createdAt} long={true} />\n        </td>\n        <td className=\"thin nowrap text-right\">\n          <DeferredSpinner loading={loading}>\n            <i className=\"deferred-spinner-placeholder\" />\n          </DeferredSpinner>\n          {deleteConfirmation === 'modal' ? (\n            <ConfirmButton\n              confirmButtonText={translate('users.tokens.revoke_token')}\n              isDestructive={true}\n              modalBody={\n                <FormattedMessage\n                  defaultMessage={translate('users.tokens.sure_X')}\n                  id=\"users.tokens.sure_X\"\n                  values={{ token: <strong>{token.name}</strong> }}\n                />\n              }\n              modalHeader={translate('users.tokens.revoke_token')}\n              onConfirm={this.handleRevoke}>\n              {({ onClick }) => (\n                <Button\n                  className=\"spacer-left button-red input-small\"\n                  disabled={loading}\n                  onClick={onClick}\n                  title={translate('users.tokens.revoke_token')}>\n                  {translate('users.tokens.revoke')}\n                </Button>\n              )}\n            </ConfirmButton>\n          ) : (\n            <Button\n              className=\"button-red input-small spacer-left\"\n              disabled={loading}\n              onClick={this.handleClick}>\n              {showConfirmation ? translate('users.tokens.sure') : translate('users.tokens.revoke')}\n            </Button>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClipboardButton } from '../../../components/controls/clipboard';\nimport { Alert } from '../../../components/ui/Alert';\nimport { translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  token: { name: string; token: string };\n}\n\nexport default function TokensFormNewToken({ token }: Props) {\n  return (\n    <div className=\"panel panel-white big-spacer-top\">\n      <Alert variant=\"warning\">\n        {translateWithParameters('users.tokens.new_token_created', token.name)}\n      </Alert>\n      <ClipboardButton copyValue={token.token} />\n      <code className=\"big-spacer-left text-success\">{token.token}</code>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { generateToken, getTokens } from '../../../api/user-tokens';\nimport { SubmitButton } from '../../../components/controls/buttons';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport TokensFormItem, { TokenDeleteConfirmation } from './TokensFormItem';\nimport TokensFormNewToken from './TokensFormNewToken';\n\ninterface Props {\n  deleteConfirmation: TokenDeleteConfirmation;\n  login: string;\n  updateTokensCount?: (login: string, tokensCount: number) => void;\n}\n\ninterface State {\n  generating: boolean;\n  loading: boolean;\n  newToken?: { name: string; token: string };\n  newTokenName: string;\n  tokens: T.UserToken[];\n}\n\nexport default class TokensForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    generating: false,\n    loading: true,\n    newTokenName: '',\n    tokens: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchTokens();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchTokens = () => {\n    this.setState({ loading: true });\n    getTokens(this.props.login).then(\n      tokens => {\n        if (this.mounted) {\n          this.setState({ loading: false, tokens });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  updateTokensCount = () => {\n    if (this.props.updateTokensCount) {\n      this.props.updateTokensCount(this.props.login, this.state.tokens.length);\n    }\n  };\n\n  handleGenerateToken = (evt: React.SyntheticEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    if (this.state.newTokenName.length > 0) {\n      this.setState({ generating: true });\n      generateToken({ name: this.state.newTokenName, login: this.props.login }).then(\n        newToken => {\n          if (this.mounted) {\n            this.setState(state => {\n              const tokens = [\n                ...state.tokens,\n                { name: newToken.name, createdAt: newToken.createdAt }\n              ];\n              return { generating: false, newToken, newTokenName: '', tokens };\n            }, this.updateTokensCount);\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ generating: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleRevokeToken = (revokedToken: T.UserToken) => {\n    this.setState(\n      state => ({\n        tokens: state.tokens.filter(token => token.name !== revokedToken.name)\n      }),\n      this.updateTokensCount\n    );\n  };\n\n  handleNewTokenChange = (evt: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ newTokenName: evt.currentTarget.value });\n\n  renderItems() {\n    const { tokens } = this.state;\n    if (tokens.length <= 0) {\n      return (\n        <tr>\n          <td className=\"note\" colSpan={3}>\n            {translate('users.no_tokens')}\n          </td>\n        </tr>\n      );\n    }\n    return tokens.map(token => (\n      <TokensFormItem\n        deleteConfirmation={this.props.deleteConfirmation}\n        key={token.name}\n        login={this.props.login}\n        onRevokeToken={this.handleRevokeToken}\n        token={token}\n      />\n    ));\n  }\n\n  render() {\n    const { generating, loading, newToken, newTokenName, tokens } = this.state;\n    const customSpinner = (\n      <tr>\n        <td>\n          <i className=\"spinner\" />\n        </td>\n      </tr>\n    );\n    return (\n      <>\n        <h3 className=\"spacer-bottom\">{translate('users.generate_tokens')}</h3>\n        <form\n          autoComplete=\"off\"\n          className=\"display-flex-center\"\n          id=\"generate-token-form\"\n          onSubmit={this.handleGenerateToken}>\n          <input\n            className=\"input-large spacer-right\"\n            maxLength={100}\n            onChange={this.handleNewTokenChange}\n            placeholder={translate('users.enter_token_name')}\n            required={true}\n            type=\"text\"\n            value={newTokenName}\n          />\n          <SubmitButton\n            className=\"js-generate-token\"\n            disabled={generating || newTokenName.length <= 0}>\n            {translate('users.generate')}\n          </SubmitButton>\n        </form>\n\n        {newToken && <TokensFormNewToken token={newToken} />}\n\n        <table className=\"data zebra big-spacer-top\">\n          <thead>\n            <tr>\n              <th>{translate('name')}</th>\n              <th>{translate('my_account.tokens_last_usage')}</th>\n              <th className=\"text-right\">{translate('created')}</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <DeferredSpinner customSpinner={customSpinner} loading={loading && tokens.length <= 0}>\n              {this.renderItems()}\n            </DeferredSpinner>\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}