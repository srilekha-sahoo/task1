{"version":3,"sources":["webpack:///./src/main/js/apps/groups/components/DeleteForm.tsx","webpack:///./src/main/js/apps/groups/components/Form.tsx","webpack:///./src/main/js/apps/groups/components/Header.tsx","webpack:///./src/main/js/apps/groups/components/EditMembersModal.tsx","webpack:///./src/main/js/apps/groups/components/EditMembers.tsx","webpack:///./src/main/js/apps/groups/components/ListItem.tsx","webpack:///./src/main/js/apps/groups/components/List.tsx","webpack:///./src/main/js/apps/groups/components/App.tsx"],"names":["DeleteForm","group","onClose","onSubmit","header","SimpleModal","onCloseClick","onFormSubmit","submitting","className","name","DeferredSpinner","loading","disabled","onClick","props","super","handleSubmit","this","description","state","then","handleDescriptionChange","event","setState","currentTarget","value","handleNameChange","size","MandatoryFieldsExplanation","htmlFor","MandatoryFieldMarker","autoFocus","id","maxLength","onChange","required","type","confirmButtonText","mounted","createModal","handleCreateClick","handleClose","data","onCreate","fetchUsers","searchParams","p","page","ps","pageSize","q","query","undefined","selected","filter","prevState","more","users","newSelectedUsers","user","map","login","selectedUsers","needToReload","lastSearchParams","usersTotalCount","total","handleSelect","handleUnselect","renderElement","modalHeader","Modal","contentLabel","onRequestClose","SelectList","elements","elementsTotalCount","All","onSearch","onSelect","onUnselect","selectedElements","withPaging","modal","handleMembersClick","handleModalClose","onEdit","title","BulletListIcon","ListItem","default","membersCount","onEditMembers","ActionsDropdown","destructive","onDelete","List","colSpan","showAnyone","key","groups","toLowerCase","makeFetchGroupsRequest","stopLoading","fetchGroups","async","paging","fetchMoreGroups","currentPaging","pageIndex","existingGroups","search","refresh","closeDeleteForm","groupToBeDeleted","closeEditForm","editedGroup","openDeleteForm","openEditForm","handleCreate","handleDelete","handleEdit","includes","Suggestions","suggestions","defer","SearchBox","minLength","placeholder","ListFooter","count","length","loadMore","ready"],"mappings":"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","file":"js/365.m.d0d2ba56.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from '../../../components/controls/buttons';\nimport SimpleModal from '../../../components/controls/SimpleModal';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  group: T.Group;\n  onClose: () => void;\n  onSubmit: () => Promise<void>;\n}\n\nexport default function DeleteForm({ group, onClose, onSubmit }: Props) {\n  const header = translate('groups.delete_group');\n\n  return (\n    <SimpleModal header={header} onClose={onClose} onSubmit={onSubmit}>\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n\n          <div className=\"modal-body\">\n            {translateWithParameters('groups.delete_group.confirmation', group.name)}\n          </div>\n\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton className=\"button-red\" disabled={submitting}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from '../../../components/controls/buttons';\nimport SimpleModal from '../../../components/controls/SimpleModal';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport MandatoryFieldMarker from '../../../components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from '../../../components/ui/MandatoryFieldsExplanation';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  confirmButtonText: string;\n  group?: T.Group;\n  header: string;\n  onClose: () => void;\n  onSubmit: (data: { description: string; name: string }) => Promise<void>;\n}\n\ninterface State {\n  description: string;\n  name: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      description: (props.group && props.group.description) || '',\n      name: (props.group && props.group.name) || ''\n    };\n  }\n\n  handleSubmit = () => {\n    return this.props\n      .onSubmit({ description: this.state.description, name: this.state.name })\n      .then(this.props.onClose);\n  };\n\n  handleDescriptionChange = (event: React.SyntheticEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <SimpleModal\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}\n        size=\"small\">\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{this.props.header}</h2>\n            </header>\n\n            <div className=\"modal-body\">\n              <MandatoryFieldsExplanation className=\"modal-field\" />\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-group-name\">\n                  {translate('name')}\n                  <MandatoryFieldMarker />\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"create-group-name\"\n                  maxLength={255}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  size={50}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-group-description\">{translate('description')}</label>\n                <textarea\n                  id=\"create-group-description\"\n                  name=\"description\"\n                  onChange={this.handleDescriptionChange}\n                  value={this.state.description}\n                />\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting}>{this.props.confirmButtonText}</SubmitButton>\n              <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from '../../../components/controls/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport Form from './Form';\n\ninterface Props {\n  onCreate: (data: { description: string; name: string }) => Promise<void>;\n}\n\ninterface State {\n  createModal: boolean;\n}\n\nexport default class Header extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { createModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCreateClick = () => {\n    this.setState({ createModal: true });\n  };\n\n  handleClose = () => {\n    if (this.mounted) {\n      this.setState({ createModal: false });\n    }\n  };\n\n  handleSubmit = (data: { name: string; description: string }) => {\n    return this.props.onCreate(data);\n  };\n\n  render() {\n    return (\n      <>\n        <header className=\"page-header\" id=\"groups-header\">\n          <h1 className=\"page-title\">{translate('user_groups.page')}</h1>\n\n          <div className=\"page-actions\">\n            <Button id=\"groups-create\" onClick={this.handleCreateClick}>\n              {translate('groups.create_group')}\n            </Button>\n          </div>\n\n          <p className=\"page-description\">{translate('user_groups.page.description')}</p>\n        </header>\n        {this.state.createModal && (\n          <Form\n            confirmButtonText={translate('create')}\n            header={translate('groups.create_group')}\n            onClose={this.handleClose}\n            onSubmit={this.handleSubmit}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport { addUserToGroup, getUsersInGroup, removeUserFromGroup } from '../../../api/user_groups';\nimport { ResetButtonLink } from '../../../components/controls/buttons';\nimport Modal from '../../../components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from '../../../components/controls/SelectList';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  group: T.Group;\n  onClose: () => void;\n}\n\ninterface State {\n  lastSearchParams?: SelectListSearchParams;\n  needToReload: boolean;\n  users: T.UserSelected[];\n  usersTotalCount?: number;\n  selectedUsers: string[];\n}\n\nexport default class EditMembersModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      users: [],\n      selectedUsers: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsers = (searchParams: SelectListSearchParams) =>\n    getUsersInGroup({\n      name: this.props.group.name,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const users = more ? [...prevState.users, ...data.users] : data.users;\n          const newSelectedUsers = data.users.filter(user => user.selected).map(user => user.login);\n          const selectedUsers = more\n            ? [...prevState.selectedUsers, ...newSelectedUsers]\n            : newSelectedUsers;\n\n          return {\n            needToReload: false,\n            lastSearchParams: searchParams,\n            loading: false,\n            users,\n            usersTotalCount: data.total,\n            selectedUsers\n          };\n        });\n      }\n    });\n\n  handleSelect = (login: string) =>\n    addUserToGroup({\n      name: this.props.group.name,\n      login\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedUsers: [...state.selectedUsers, login]\n        }));\n      }\n    });\n\n  handleUnselect = (login: string) =>\n    removeUserFromGroup({\n      name: this.props.group.name,\n      login\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedUsers: without(state.selectedUsers, login)\n        }));\n      }\n    });\n\n  renderElement = (login: string): React.ReactNode => {\n    const user = find(this.state.users, { login });\n    return (\n      <div className=\"select-list-list-item\">\n        {user === undefined ? (\n          login\n        ) : (\n          <>\n            {user.name}\n            <br />\n            <span className=\"note\">{user.login}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const modalHeader = translate('users.update');\n    return (\n      <Modal contentLabel={modalHeader} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{modalHeader}</h2>\n        </header>\n\n        <div className=\"modal-body modal-container\">\n          <SelectList\n            elements={this.state.users.map(user => user.login)}\n            elementsTotalCount={this.state.usersTotalCount}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchUsers}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedUsers}\n            withPaging={true}\n          />\n        </div>\n\n        <footer className=\"modal-foot\">\n          <ResetButtonLink onClick={this.props.onClose}>{translate('Done')}</ResetButtonLink>\n        </footer>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon } from '../../../components/controls/buttons';\nimport BulletListIcon from '../../../components/icons/BulletListIcon';\nimport { translate } from '../../../helpers/l10n';\nimport EditMembersModal from './EditMembersModal';\n\ninterface Props {\n  group: T.Group;\n  onEdit: () => void;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class EditMembers extends React.PureComponent<Props, State> {\n  container?: HTMLElement | null;\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleMembersClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleModalClose = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n      this.props.onEdit();\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ButtonIcon\n          aria-label={translate('groups.users.edit')}\n          className=\"button-small\"\n          onClick={this.handleMembersClick}\n          title={translate('groups.users.edit')}>\n          <BulletListIcon />\n        </ButtonIcon>\n        {this.state.modal && (\n          <EditMembersModal group={this.props.group} onClose={this.handleModalClose} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from '../../../components/controls/ActionsDropdown';\nimport { translate } from '../../../helpers/l10n';\nimport EditMembers from './EditMembers';\n\nexport interface ListItemProps {\n  group: T.Group;\n  onDelete: (group: T.Group) => void;\n  onEdit: (group: T.Group) => void;\n  onEditMembers: () => void;\n}\n\nexport default function ListItem(props: ListItemProps) {\n  const { group } = props;\n\n  return (\n    <tr data-id={group.name}>\n      <td className=\"width-20\">\n        <strong className=\"js-group-name\">{group.name}</strong>\n        {group.default && <span className=\"little-spacer-left\">({translate('default')})</span>}\n      </td>\n\n      <td className=\"thin text-middle text-right little-padded-right\">{group.membersCount}</td>\n      <td className=\"little-padded-left\">\n        {!group.default && <EditMembers group={group} onEdit={props.onEditMembers} />}\n      </td>\n\n      <td className=\"width-40\">\n        <span className=\"js-group-description\">{group.description}</span>\n      </td>\n\n      <td className=\"thin nowrap text-right\">\n        {!group.default && (\n          <ActionsDropdown>\n            <ActionsDropdownItem className=\"js-group-update\" onClick={() => props.onEdit(group)}>\n              {translate('update_details')}\n            </ActionsDropdownItem>\n            <ActionsDropdownDivider />\n            <ActionsDropdownItem\n              className=\"js-group-delete\"\n              destructive={true}\n              onClick={() => props.onDelete(group)}>\n              {translate('delete')}\n            </ActionsDropdownItem>\n          </ActionsDropdown>\n        )}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\nimport ListItem from './ListItem';\n\ninterface Props {\n  groups: T.Group[];\n  onDelete: (group: T.Group) => void;\n  onEdit: (group: T.Group) => void;\n  onEditMembers: () => void;\n  showAnyone: boolean;\n}\n\nexport default function List(props: Props) {\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className=\"data zebra zebra-hover\" id=\"groups-list\">\n        <thead>\n          <tr>\n            <th />\n            <th className=\"nowrap width-10\" colSpan={2}>\n              {translate('members')}\n            </th>\n            <th className=\"nowrap\">{translate('description')}</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {props.showAnyone && (\n            <tr className=\"js-anyone\" key=\"anyone\">\n              <td className=\"width-20\">\n                <strong className=\"js-group-name\">{translate('groups.anyone')}</strong>\n              </td>\n              <td className=\"width-10\" colSpan={2} />\n              <td className=\"width-40\" colSpan={2}>\n                <span className=\"js-group-description\">\n                  {translate('user_groups.anyone.description')}\n                </span>\n              </td>\n            </tr>\n          )}\n\n          {sortBy(props.groups, group => group.name.toLowerCase()).map(group => (\n            <ListItem\n              group={group}\n              key={group.name}\n              onDelete={props.onDelete}\n              onEdit={props.onEdit}\n              onEditMembers={props.onEditMembers}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { createGroup, deleteGroup, searchUsersGroups, updateGroup } from '../../../api/user_groups';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport SearchBox from '../../../components/controls/SearchBox';\nimport { translate } from '../../../helpers/l10n';\nimport { omitNil } from '../../../helpers/request';\nimport DeleteForm from './DeleteForm';\nimport Form from './Form';\nimport Header from './Header';\nimport List from './List';\n\ninterface State {\n  groups?: T.Group[];\n  editedGroup?: T.Group;\n  groupToBeDeleted?: T.Group;\n  loading: boolean;\n  paging?: T.Paging;\n  query: string;\n}\n\nexport default class App extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { loading: true, query: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchGroups();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  makeFetchGroupsRequest = (data?: { p?: number; q?: string }) => {\n    this.setState({ loading: true });\n    return searchUsersGroups({\n      q: this.state.query,\n      ...data\n    });\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchGroups = async (data?: { p?: number; q?: string }) => {\n    try {\n      const { groups, paging } = await this.makeFetchGroupsRequest(data);\n      if (this.mounted) {\n        this.setState({ groups, loading: false, paging });\n      }\n    } catch {\n      this.stopLoading();\n    }\n  };\n\n  fetchMoreGroups = async () => {\n    const { paging: currentPaging } = this.state;\n    if (currentPaging && currentPaging.total > currentPaging.pageIndex * currentPaging.pageSize) {\n      try {\n        const { groups, paging } = await this.makeFetchGroupsRequest({\n          p: currentPaging.pageIndex + 1\n        });\n        if (this.mounted) {\n          this.setState(({ groups: existingGroups = [] }) => ({\n            groups: [...existingGroups, ...groups],\n            loading: false,\n            paging\n          }));\n        }\n      } catch {\n        this.stopLoading();\n      }\n    }\n  };\n\n  search = (query: string) => {\n    this.fetchGroups({ q: query });\n    this.setState({ query });\n  };\n\n  refresh = async () => {\n    const { paging, query } = this.state;\n\n    await this.fetchGroups({ q: query });\n\n    // reload all pages in order\n    if (paging && paging.pageIndex > 1) {\n      for (let p = 1; p < paging.pageIndex; p++) {\n        // eslint-disable-next-line no-await-in-loop\n        await this.fetchMoreGroups(); // This is a intentional promise chain\n      }\n    }\n  };\n\n  closeDeleteForm = () => {\n    this.setState({ groupToBeDeleted: undefined });\n  };\n\n  closeEditForm = () => {\n    this.setState({ editedGroup: undefined });\n  };\n\n  openDeleteForm = (group: T.Group) => {\n    this.setState({ groupToBeDeleted: group });\n  };\n\n  openEditForm = (group: T.Group) => {\n    this.setState({ editedGroup: group });\n  };\n\n  handleCreate = async (data: { description: string; name: string }) => {\n    await createGroup({ ...data });\n\n    await this.refresh();\n  };\n\n  handleDelete = async () => {\n    const { groupToBeDeleted } = this.state;\n\n    if (!groupToBeDeleted) {\n      return;\n    }\n\n    await deleteGroup({ name: groupToBeDeleted.name });\n\n    await this.refresh();\n\n    if (this.mounted) {\n      this.setState({ groupToBeDeleted: undefined });\n    }\n  };\n\n  handleEdit = async ({ name, description }: { name?: string; description: string }) => {\n    const { editedGroup } = this.state;\n\n    if (!editedGroup) {\n      return;\n    }\n\n    const data = {\n      description,\n      id: editedGroup.id,\n      // pass `name` only if it has changed, otherwise the WS fails\n      ...omitNil({ name: name !== editedGroup.name ? name : undefined })\n    };\n\n    await updateGroup(data);\n\n    if (this.mounted) {\n      this.setState(({ groups = [] }: State) => ({\n        editedGroup: undefined,\n        groups: groups.map(group =>\n          group.name === editedGroup.name ? { ...group, ...data } : group\n        )\n      }));\n    }\n  };\n\n  render() {\n    const { editedGroup, groupToBeDeleted, groups, loading, paging, query } = this.state;\n\n    const showAnyone = 'anyone'.includes(query.toLowerCase());\n\n    return (\n      <>\n        <Suggestions suggestions=\"user_groups\" />\n        <Helmet defer={false} title={translate('user_groups.page')} />\n        <div className=\"page page-limited\" id=\"groups-page\">\n          <Header onCreate={this.handleCreate} />\n\n          <SearchBox\n            className=\"big-spacer-bottom\"\n            id=\"groups-search\"\n            minLength={2}\n            onChange={this.search}\n            placeholder={translate('search.search_by_name')}\n            value={query}\n          />\n\n          {groups !== undefined && (\n            <List\n              groups={groups}\n              onDelete={this.openDeleteForm}\n              onEdit={this.openEditForm}\n              onEditMembers={this.refresh}\n              showAnyone={showAnyone}\n            />\n          )}\n\n          {groups !== undefined && paging !== undefined && (\n            <div id=\"groups-list-footer\">\n              <ListFooter\n                count={showAnyone ? groups.length + 1 : groups.length}\n                loading={loading}\n                loadMore={this.fetchMoreGroups}\n                ready={!loading}\n                total={showAnyone ? paging.total + 1 : paging.total}\n              />\n            </div>\n          )}\n\n          {groupToBeDeleted && (\n            <DeleteForm\n              group={groupToBeDeleted}\n              onClose={this.closeDeleteForm}\n              onSubmit={this.handleDelete}\n            />\n          )}\n\n          {editedGroup && (\n            <Form\n              confirmButtonText={translate('update_verb')}\n              group={editedGroup}\n              header={translate('groups.update_group')}\n              onClose={this.closeEditForm}\n              onSubmit={this.handleEdit}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}