{"version":3,"sources":["webpack:///./src/main/js/apps/projectKey/UpdateForm.tsx","webpack:///./src/main/js/apps/projectKey/Key.tsx","webpack:///./src/main/js/components/controls/HelpTooltip.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/ui/MandatoryFieldMarker.tsx","webpack:///./src/main/js/components/ui/MandatoryFieldsExplanation.tsx","webpack:///./src/main/js/components/controls/HelpTooltip.css?96bd","webpack:///./src/main/js/components/controls/HelpTooltip.css","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ValidationInput.tsx","webpack:///./src/main/js/components/common/ProjectKeyInput.tsx","webpack:///./src/main/js/helpers/projects.ts"],"names":["UpdateForm","props","component","newKey","setNewKey","undefined","value","key","hasChanged","validationResult","error","Valid","ConfirmButton","confirmButtonText","confirmData","modalBody","name","className","modalHeader","onConfirm","onKeyChange","onFormSubmit","onSubmit","MandatoryFieldsExplanation","ProjectKeyInput","label","onProjectKeyChange","e","currentTarget","touched","placeholder","projectKey","autofocus","disabled","id","onClick","type","handleChangeKey","from","this","to","then","RecentHistory","remove","router","replace","pathname","query","defer","title","HelpTooltip","size","mouseLeaveDelay","onShow","overlay","placement","children","fill","gray71","SimpleModal","mounted","state","submitting","stopSubmitting","setState","handleCloseClick","event","preventDefault","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","header","modalProps","contentLabel","onRequestClose","onCloseClick","onSubmitClick","MandatoryFieldMarker","defaultMessage","values","star","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","ConfirmModal","handleSubmit","renderModalContent","confirmDisable","headerDescription","isDestructive","cancelButtonText","loading","autoFocus","noBackdrop","renderConfirmModal","modalHeaderDescription","confirmModalProps","modal","ModalButton","handleButtonClick","handleCloseModal","ValidationInput","hasError","isInvalid","htmlFor","required","help","isValid","description","validating","maxLength","minLength","onChange","PROJECT_KEY_REGEX","PROJECT_KEY_INVALID_CHARACTERS","validateProjectKey","length","Empty","TooLong","test","OnlyDigits","InvalidChar"],"mappings":"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","file":"js/312.m.b9a3ff23.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ProjectKeyInput from '../../components/common/ProjectKeyInput';\nimport { Button, SubmitButton } from '../../components/controls/buttons';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\nimport MandatoryFieldsExplanation from '../../components/ui/MandatoryFieldsExplanation';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport { validateProjectKey } from '../../helpers/projects';\nimport { ProjectKeyValidationResult } from '../../types/component';\n\nexport interface UpdateFormProps {\n  component: Pick<T.Component, 'key' | 'name'>;\n  onKeyChange: (newKey: string) => Promise<void>;\n}\n\nexport default function UpdateForm(props: UpdateFormProps) {\n  const { component } = props;\n  const [newKey, setNewKey] = React.useState<string | undefined>(undefined);\n  const value = newKey !== undefined ? newKey : component.key;\n  const hasChanged = value !== component.key;\n\n  const validationResult = validateProjectKey(value);\n  const error =\n    validationResult === ProjectKeyValidationResult.Valid\n      ? undefined\n      : translate('onboarding.create_project.project_key.error', validationResult);\n\n  return (\n    <ConfirmButton\n      confirmButtonText={translate('update_verb')}\n      confirmData={newKey}\n      modalBody={\n        <>\n          {translateWithParameters('update_key.are_you_sure_to_change_key', component.name)}\n          <div className=\"spacer-top\">\n            {translate('update_key.old_key')}\n            {': '}\n            <strong>{component.key}</strong>\n          </div>\n          <div className=\"spacer-top\">\n            {translate('update_key.new_key')}\n            {': '}\n            <strong>{newKey}</strong>\n          </div>\n        </>\n      }\n      modalHeader={translate('update_key.page')}\n      onConfirm={props.onKeyChange}>\n      {({ onFormSubmit }) => (\n        <form onSubmit={onFormSubmit}>\n          <MandatoryFieldsExplanation className=\"spacer-bottom\" />\n\n          <ProjectKeyInput\n            error={error}\n            label={translate('update_key.new_key')}\n            onProjectKeyChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setNewKey(e.currentTarget.value);\n            }}\n            touched={hasChanged}\n            placeholder={translate('update_key.new_key')}\n            projectKey={value}\n            autofocus={true}\n          />\n\n          <div className=\"spacer-top\">\n            <SubmitButton disabled={!hasChanged || error !== undefined} id=\"update-key-submit\">\n              {translate('update_verb')}\n            </SubmitButton>\n\n            <Button\n              className=\"spacer-left\"\n              disabled={!hasChanged}\n              id=\"update-key-reset\"\n              onClick={() => {\n                setNewKey(undefined);\n              }}\n              type=\"reset\">\n              {translate('reset_verb')}\n            </Button>\n          </div>\n        </form>\n      )}\n    </ConfirmButton>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { changeKey } from '../../api/components';\nimport RecentHistory from '../../app/components/RecentHistory';\nimport { translate } from '../../helpers/l10n';\nimport UpdateForm from './UpdateForm';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name'>;\n}\n\nexport class Key extends React.PureComponent<Props & WithRouterProps> {\n  handleChangeKey = (newKey: string) => {\n    return changeKey({ from: this.props.component.key, to: newKey }).then(() => {\n      RecentHistory.remove(this.props.component.key);\n      this.props.router.replace({ pathname: '/project/key', query: { id: newKey } });\n    });\n  };\n\n  render() {\n    const { component } = this.props;\n    return (\n      <div className=\"page page-limited\" id=\"project-key\">\n        <Helmet defer={false} title={translate('update_key.page')} />\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{translate('update_key.page')}</h1>\n          <div className=\"page-description\">{translate('update_key.page.description')}</div>\n        </header>\n        <UpdateForm component={component} onKeyChange={this.handleChangeKey} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Key);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { colors } from '../../app/theme';\nimport HelpIcon from '../icons/HelpIcon';\nimport { IconProps } from '../icons/Icon';\nimport './HelpTooltip.css';\nimport Tooltip, { Placement } from './Tooltip';\n\ninterface Props extends Pick<IconProps, 'size'> {\n  className?: string;\n  children?: React.ReactNode;\n  onShow?: () => void;\n  overlay: React.ReactNode;\n  placement?: Placement;\n}\n\nexport default function HelpTooltip({ size = 12, ...props }: Props) {\n  return (\n    <div className={classNames('help-tooltip', props.className)}>\n      <Tooltip\n        mouseLeaveDelay={0.25}\n        onShow={props.onShow}\n        overlay={props.overlay}\n        placement={props.placement}>\n        <span className=\"display-inline-flex-center\">\n          {props.children || <HelpIcon fill={colors.gray71} size={size} />}\n        </span>\n      </Tooltip>\n    </div>\n  );\n}\n\nexport function DarkHelpTooltip({ size = 12, ...props }: Omit<Props, 'children'>) {\n  return (\n    <HelpTooltip {...props}>\n      <HelpIcon fill={colors.transparentBlack} fillInner={colors.white} size={size} />\n    </HelpTooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void | Response>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\n\nexport interface MandatoryFieldMarkerProps {\n  className?: string;\n}\n\nexport default function MandatoryFieldMarker({ className }: MandatoryFieldMarkerProps) {\n  return (\n    <em\n      aria-label={translate('field_required')}\n      className={classNames('mandatory little-spacer-left', className)}>\n      *\n    </em>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from '../../helpers/l10n';\n\nexport interface MandatoryFieldsExplanationProps {\n  className?: string;\n}\n\nexport default function MandatoryFieldsExplanation({ className }: MandatoryFieldsExplanationProps) {\n  return (\n    <div aria-hidden={true} className={classNames('text-muted', className)}>\n      <FormattedMessage\n        id=\"fields_marked_with_x_required\"\n        defaultMessage={translate('fields_marked_with_x_required')}\n        values={{ star: <em className=\"mandatory\">*</em> }}\n      />\n    </div>\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./HelpTooltip.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".help-tooltip{display:inline-flex;align-items:center;vertical-align:middle}.help-toolip-link{display:block;width:12px;height:12px;border:none}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\nimport DeferredSpinner from '../ui/DeferredSpinner';\nimport { ResetButtonLink, SubmitButton } from './buttons';\nimport ClickEventBoundary from './ClickEventBoundary';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {\n        /* noop */\n      });\n    }\n    this.props.onClose();\n    return undefined;\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <ClickEventBoundary>\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n            {headerDescription}\n          </header>\n          <div className=\"modal-body\">{children}</div>\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton\n              autoFocus={true}\n              className={isDestructive ? 'button-red' : undefined}\n              disabled={submitting || confirmDisable}>\n              {confirmButtonText}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {cancelButtonText}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      </ClickEventBoundary>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport AlertErrorIcon from '../icons/AlertErrorIcon';\nimport AlertSuccessIcon from '../icons/AlertSuccessIcon';\nimport MandatoryFieldMarker from '../ui/MandatoryFieldMarker';\nimport HelpTooltip from './HelpTooltip';\n\ninterface Props {\n  description?: React.ReactNode;\n  children: React.ReactNode;\n  className?: string;\n  error: string | undefined;\n  help?: string;\n  id: string;\n  isInvalid: boolean;\n  isValid: boolean;\n  label: React.ReactNode;\n  required?: boolean;\n}\n\nexport default function ValidationInput(props: Props) {\n  const hasError = props.isInvalid && props.error !== undefined;\n  return (\n    <div className={props.className}>\n      <label htmlFor={props.id}>\n        <span className=\"text-middle\">\n          <strong>{props.label}</strong>\n          {props.required && <MandatoryFieldMarker />}\n        </span>\n        {props.help && <HelpTooltip className=\"spacer-left\" overlay={props.help} />}\n      </label>\n      <div className=\"little-spacer-top spacer-bottom\">\n        {props.children}\n        {props.isInvalid && <AlertErrorIcon className=\"spacer-left text-middle\" />}\n        {hasError && (\n          <span className=\"little-spacer-left text-danger text-middle\">{props.error}</span>\n        )}\n        {props.isValid && <AlertSuccessIcon className=\"spacer-left text-middle\" />}\n      </div>\n      {props.description && <div className=\"note abs-width-400\">{props.description}</div>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ValidationInput from '../../components/controls/ValidationInput';\nimport { PROJECT_KEY_MAX_LEN } from '../../helpers/constants';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ProjectKeyInputProps {\n  error?: string;\n  help?: string;\n  label?: string;\n  onProjectKeyChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  projectKey?: string;\n  touched: boolean;\n  validating?: boolean;\n  autofocus?: boolean;\n}\n\nexport default function ProjectKeyInput(props: ProjectKeyInputProps) {\n  const {\n    error,\n    help,\n    label,\n    placeholder,\n    projectKey,\n    touched,\n    validating,\n    autofocus = false\n  } = props;\n\n  const isInvalid = touched && error !== undefined;\n  const isValid = touched && !validating && error === undefined;\n\n  return (\n    <ValidationInput\n      className=\"form-field\"\n      description={translate('onboarding.create_project.project_key.description')}\n      error={error}\n      help={help}\n      id=\"project-key\"\n      isInvalid={isInvalid}\n      isValid={isValid}\n      label={label}\n      required={label !== undefined}>\n      <input\n        autoFocus={autofocus}\n        className={classNames('input-super-large', {\n          'is-invalid': isInvalid,\n          'is-valid': isValid\n        })}\n        id=\"project-key\"\n        maxLength={PROJECT_KEY_MAX_LEN}\n        minLength={1}\n        onChange={props.onProjectKeyChange}\n        placeholder={placeholder}\n        type=\"text\"\n        value={projectKey}\n      />\n    </ValidationInput>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { ProjectKeyValidationResult } from '../types/component';\nimport { PROJECT_KEY_MAX_LEN } from './constants';\n\n// This is the regex used on the backend:\n//   [\\p{Alnum}\\-_.:]*[\\p{Alpha}\\-_.:]+[\\p{Alnum}\\-_.:]*\n// See sonar-core/src/main/java/org/sonar/core/component/ComponentKeys.java\nexport const PROJECT_KEY_REGEX = /^[\\w\\-.:]*[a-z\\-_.:]+[\\w\\-.:]*$/i;\nexport const PROJECT_KEY_INVALID_CHARACTERS = /[^\\w\\-:.]+/gi;\n\nexport function validateProjectKey(projectKey: string): ProjectKeyValidationResult {\n  if (projectKey.length === 0) {\n    return ProjectKeyValidationResult.Empty;\n  } else if (projectKey.length > PROJECT_KEY_MAX_LEN) {\n    return ProjectKeyValidationResult.TooLong;\n  } else if (PROJECT_KEY_REGEX.test(projectKey)) {\n    return ProjectKeyValidationResult.Valid;\n  } else if (/^[0-9]+$/.test(projectKey)) {\n    return ProjectKeyValidationResult.OnlyDigits;\n  }\n  return ProjectKeyValidationResult.InvalidChar;\n}\n"],"sourceRoot":""}