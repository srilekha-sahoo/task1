{"version":3,"sources":["webpack:///./src/main/js/apps/projectDeletion/Form.tsx","webpack:///./src/main/js/apps/projectDeletion/Header.tsx","webpack:///./src/main/js/apps/projectDeletion/App.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/api/application.ts"],"names":["handleDelete","async","component","this","props","deleteMethod","redirectTo","qualifier","key","addGlobalSuccessMessage","name","router","replace","ConfirmButton","confirmButtonText","isDestructive","modalBody","modalHeader","onConfirm","onClick","className","id","withRouter","Header","description","includes","App","defer","title","SimpleModal","mounted","state","submitting","stopSubmitting","setState","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","then","children","header","modalProps","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","ConfirmModal","handleSubmit","confirmData","renderModalContent","confirmDisable","headerDescription","cancelButtonText","loading","autoFocus","undefined","disabled","noBackdrop","size","renderConfirmModal","modalHeaderDescription","confirmModalProps","modal","ModalButton","handleButtonClick","handleCloseModal","message","dispatch","getApplicationLeak","application","branch","r","leaks","getApplicationDetails","addApplicationBranch","data","catch","updateApplicationBranch","deleteApplicationBranch","getApplicationProjects","addProjectToApplication","project","removeProjectFromApplication","refreshApplication","createApplication","visibility","deleteApplication","editApplication"],"mappings":"wOAkCO,MAAM,UAAa,gBAA1B,c,oBACE,KAAAA,aAAeC,UACb,MAAM,UAAEC,GAAcC,KAAKC,MAC3B,IAAIC,EAAe,IACfC,EAAa,IACb,YAAgBJ,EAAUK,YAC5BF,EAAe,IACfC,EAAa,eACJ,YAAcJ,EAAUK,aACjCF,EAAe,WAGXA,EAAaH,EAAUM,KAE7B,OAAAC,EAAA,GACE,YAAwB,oCAAqCP,EAAUQ,OAEzEP,KAAKC,MAAMO,OAAOC,QAAQN,IAG5B,SACE,MAAM,UAAEJ,GAAcC,KAAKC,MAC3B,OACE,gBAACS,EAAA,EAAa,CACZC,kBAAmB,YAAU,UAC7BC,eAAe,EACfC,UAAW,YACT,gDACAd,EAAUQ,MAEZO,YAAa,YAAU,mBAAoBf,EAAUK,WACrDW,UAAWf,KAAKH,cACf,EAAGmB,aACF,gBAAC,IAAM,CAACC,UAAU,aAAaC,GAAG,iBAAiBF,QAASA,GACzD,YAAU,aAQR,aAAAG,EAAA,GAAW,GClDX,SAASC,EAAOnB,GAC7B,MAAM,UAAEG,GAAcH,EAAMF,UAC5B,IAAIsB,EASJ,OAPEA,EADE,CAAC,KAAM,OAAOC,SAASlB,GACX,YAAU,uCACD,QAAdA,EACK,YAAU,yCAEV,YAAU,qCAIxB,0BAAQa,UAAU,eAChB,sBAAIA,UAAU,cAAc,YAAU,kBACtC,uBAAKA,UAAU,oBAAoBI,ICX1B,SAASE,EAAItB,GAC1B,OACE,uBAAKgB,UAAU,qBACb,gBAAC,IAAM,CAACO,OAAO,EAAOC,MAAO,YAAU,mBACvC,gBAACL,EAAM,CAACrB,UAAWE,EAAMF,YACzB,gBAAC,EAAI,CAACA,UAAWE,EAAMF,e,6cCMd,MAAM2B,UAAoB,YAAzC,c,oBACE,KAAAC,SAAU,EACV,KAAAC,MAAe,CAAEC,YAAY,GAU7B,KAAAC,eAAiB,KACX9B,KAAK2B,SACP3B,KAAK+B,SAAS,CAAEF,YAAY,KAIhC,KAAAG,iBAAoBC,IACdA,IACFA,EAAMC,iBACND,EAAME,cAAcC,QAEtBpC,KAAKC,MAAMoC,WAGb,KAAAC,iBAAoBL,IAClBA,EAAMC,iBACNlC,KAAKuC,UAGP,KAAAC,kBAAqBP,IACfA,IACFA,EAAMC,iBACND,EAAME,cAAcC,QAEtBpC,KAAKuC,UAGP,KAAAA,OAAS,KACP,MAAME,EAASzC,KAAKC,MAAMyC,WACtBD,IACFzC,KAAK+B,SAAS,CAAEF,YAAY,IAC5BY,EAAOE,KAAK3C,KAAK8B,eAAgB9B,KAAK8B,kBAvC1C,oBACE9B,KAAK2B,SAAU,EAGjB,uBACE3B,KAAK2B,SAAU,EAsCjB,SACE,MAAM,EAAyD3B,KAAKC,OAA9D,SAAE2C,EAAF,OAAYC,EAAZ,QAAoBR,EAApB,SAA6BK,GAAnC,EAAgDI,EAAhD,gDACA,OACE,gBAAC,IAAK,eAACC,aAAcF,EAAQG,eAAgBX,GAAaS,GACvDF,EAAS,CACRK,aAAcjD,KAAKgC,iBACnBkB,aAAclD,KAAKsC,iBACnBa,cAAenD,KAAKwC,kBACpBX,WAAY7B,KAAK4B,MAAMC,iB,iCC/FjC,0FA0Ce,MAAMuB,UAAiC,gBAAtD,c,oBACE,KAAAzB,SAAU,EAUV,KAAA0B,aAAe,KACb,MAAMZ,EAASzC,KAAKC,MAAMc,UAAUf,KAAKC,MAAMqD,aAC/C,GAAIb,EACF,OAAOA,EAAOE,KAAK3C,KAAKC,MAAMoC,QAAS,QAIzCrC,KAAKC,MAAMoC,WAIb,KAAAkB,mBAAqB,EAAGN,eAAcC,eAAcrB,iBAClD,MAAM,SACJe,EADI,kBAEJjC,EAFI,eAGJ6C,EAHI,OAIJX,EAJI,kBAKJY,EALI,cAMJ7C,EANI,iBAOJ8C,EAAmB,YAAU,WAC3B1D,KAAKC,MACT,OACE,gBAAC,IAAkB,KACjB,wBAAMyC,SAAUQ,GACd,0BAAQjC,UAAU,cAChB,0BAAK4B,GACJY,GAEH,uBAAKxC,UAAU,cAAc2B,GAC7B,0BAAQ3B,UAAU,cAChB,gBAAC,IAAe,CAACA,UAAU,eAAe0C,QAAS9B,IACnD,gBAAC,IAAY,CACX+B,WAAW,EACX3C,UAAWL,EAAgB,kBAAeiD,EAC1CC,SAAUjC,GAAc2B,GACvB7C,GAEH,gBAAC,IAAe,CAACmD,SAAUjC,EAAYb,QAASiC,GAC7CS,OA9Cb,oBACE1D,KAAK2B,SAAU,EAGjB,uBACE3B,KAAK2B,SAAU,EAiDjB,SACE,MAAM,OAAEkB,EAAF,QAAUR,EAAV,WAAmB0B,EAAnB,KAA+BC,GAAShE,KAAKC,MAC7C6C,EAAa,CAAED,SAAQR,UAAS0B,aAAYC,QAClD,OACE,gBAAC,IAAW,eAACtB,SAAU1C,KAAKqD,cAAkBP,GAC3C9C,KAAKuD,uB,sdCtEC,MAAM7C,UAAyB,gBAA9C,c,oBACE,KAAAuD,mBAAqB,EAAG5B,cACtB,MAAM,EAMFrC,KAAKC,OANH,SACJ2C,EADI,UAEJ/B,EAFI,YAGJC,EAHI,uBAIJoD,GAJF,EAKKC,EALL,qEAOA,OACE,gBAAC,IAAY,eACXtB,OAAQ/B,EACR2C,kBAAmBS,EACnB7B,QAASA,GACL8B,GACHtD,IAKP,SACE,OAAO,gBAAC,IAAW,CAACuD,MAAOpE,KAAKiE,oBAAqBjE,KAAKC,MAAM2C,a,iCCvDpE,+CAuCe,MAAMyB,UAAoB,gBAAzC,c,oBACE,KAAA1C,SAAU,EACV,KAAAC,MAAe,CAAEwC,OAAO,GAUxB,KAAAE,kBAAoB,KAClBtE,KAAK+B,SAAS,CAAEqC,OAAO,KAGzB,KAAA9B,iBAAoBL,IACdA,GACFA,EAAMC,iBAERlC,KAAK+B,SAAS,CAAEqC,OAAO,KAGzB,KAAAG,iBAAmB,KACbvE,KAAK2B,SACP3B,KAAK+B,SAAS,CAAEqC,OAAO,KArB3B,oBACEpE,KAAK2B,SAAU,EAGjB,uBACE3B,KAAK2B,SAAU,EAoBjB,SACE,OACE,gCACG3B,KAAKC,MAAM2C,SAAS,CACnB5B,QAAShB,KAAKsE,kBACdpB,aAAclD,KAAKsC,mBAEpBtC,KAAK4B,MAAMwC,OAASpE,KAAKC,MAAMmE,MAAM,CAAE/B,QAASrC,KAAKuE,uB,iCC3E9D,wDAsBe,SAASjE,EAAwBkE,GAChC,oBACRC,SAAS,IAAuCD,M,iCCxBxD,4aAwBO,SAASE,EACdC,EACAC,GAEA,OAAO,YAAQ,8BAA+B,CAAED,cAAaC,WAAUjC,KACrEkC,GAAKA,EAAEC,MACP,KAIG,SAASC,EAAsBJ,EAAqBC,GACzD,OAAO,YAAQ,yBAA0B,CAAED,cAAaC,WAAUjC,KAChEkC,GAAKA,EAAEF,YACP,KAIG,SAASK,EAAqBC,GAMnC,OAAO,YAAK,kCAAmCA,GAAMC,MAAM,KAGtD,SAASC,EAAwBF,GAOtC,OAAO,YAAK,kCAAmCA,GAAMC,MAAM,KAGtD,SAASE,EAAwBT,EAAqBC,GAC3D,OAAO,YAAK,kCAAmC,CAAED,cAAaC,WAAUM,MAAM,KAGzE,SAASG,EAAuBJ,GAOrC,OAAO,YAAQ,oCAAqCA,GAAMC,MAAM,KAG3D,SAASI,EAAwBX,EAAqBY,GAC3D,OAAO,YAAK,gCAAiC,CAAEZ,cAAaY,YAAWL,MAAM,KAGxE,SAASM,EAA6Bb,EAAqBY,GAChE,OAAO,YAAK,mCAAoC,CAAEZ,cAAaY,YAAWL,MAAM,KAG3E,SAASO,EAAmBpF,GACjC,OAAO,YAAK,4BAA6B,CAAEA,QAAO6E,MAAM,KAGnD,SAASQ,EACdnF,EACAc,EACAhB,EACAsF,GASA,OAAO,YAAS,2BAA4B,CAAEtE,cAAahB,MAAKE,OAAMoF,eAAcT,MAClF,KAIG,SAASU,EAAkBjB,GAChC,OAAO,YAAK,2BAA4B,CAAEA,gBAAeO,MAAM,KAG1D,SAASW,EAAgBlB,EAAqBpE,EAAcc,GACjE,OAAO,YAAK,2BAA4B,CAAEd,OAAMc,cAAasD,gBAAeO,MAC1E","file":"js/330.m.93f1d5d3.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { deleteApplication } from '../../api/application';\nimport { deletePortfolio, deleteProject } from '../../api/components';\nimport addGlobalSuccessMessage from '../../app/utils/addGlobalSuccessMessage';\nimport { Button } from '../../components/controls/buttons';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\nimport { Router, withRouter } from '../../components/hoc/withRouter';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport { isApplication, isPortfolioLike } from '../../types/component';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name' | 'qualifier'>;\n  router: Pick<Router, 'replace'>;\n}\n\nexport class Form extends React.PureComponent<Props> {\n  handleDelete = async () => {\n    const { component } = this.props;\n    let deleteMethod = deleteProject;\n    let redirectTo = '/';\n    if (isPortfolioLike(component.qualifier)) {\n      deleteMethod = deletePortfolio;\n      redirectTo = '/portfolios';\n    } else if (isApplication(component.qualifier)) {\n      deleteMethod = deleteApplication;\n    }\n\n    await deleteMethod(component.key);\n\n    addGlobalSuccessMessage(\n      translateWithParameters('project_deletion.resource_deleted', component.name)\n    );\n    this.props.router.replace(redirectTo);\n  };\n\n  render() {\n    const { component } = this.props;\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('delete')}\n        isDestructive={true}\n        modalBody={translateWithParameters(\n          'project_deletion.delete_resource_confirmation',\n          component.name\n        )}\n        modalHeader={translate('qualifier.delete', component.qualifier)}\n        onConfirm={this.handleDelete}>\n        {({ onClick }) => (\n          <Button className=\"button-red\" id=\"delete-project\" onClick={onClick}>\n            {translate('delete')}\n          </Button>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n\nexport default withRouter(Form);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<T.Component, 'qualifier'>;\n}\n\nexport default function Header(props: Props) {\n  const { qualifier } = props.component;\n  let description: string;\n  if (['VW', 'SVW'].includes(qualifier)) {\n    description = translate('portfolio_deletion.page.description');\n  } else if (qualifier === 'APP') {\n    description = translate('application_deletion.page.description');\n  } else {\n    description = translate('project_deletion.page.description');\n  }\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('deletion.page')}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { translate } from '../../helpers/l10n';\nimport Form from './Form';\nimport Header from './Header';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name' | 'qualifier'>;\n}\n\nexport default function App(props: Props) {\n  return (\n    <div className=\"page page-limited\">\n      <Helmet defer={false} title={translate('deletion.page')} />\n      <Header component={props.component} />\n      <Form component={props.component} />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void | Response>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\nimport DeferredSpinner from '../ui/DeferredSpinner';\nimport { ResetButtonLink, SubmitButton } from './buttons';\nimport ClickEventBoundary from './ClickEventBoundary';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {\n        /* noop */\n      });\n    }\n    this.props.onClose();\n    return undefined;\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <ClickEventBoundary>\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n            {headerDescription}\n          </header>\n          <div className=\"modal-body\">{children}</div>\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton\n              autoFocus={true}\n              className={isDestructive ? 'button-red' : undefined}\n              disabled={submitting || confirmDisable}>\n              {confirmButtonText}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {cancelButtonText}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      </ClickEventBoundary>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport { Application, ApplicationPeriod, ApplicationProject } from '../types/application';\nimport { Visibility } from '../types/component';\n\nexport function getApplicationLeak(\n  application: string,\n  branch?: string\n): Promise<ApplicationPeriod[]> {\n  return getJSON('/api/applications/show_leak', { application, branch }).then(\n    r => r.leaks,\n    throwGlobalError\n  );\n}\n\nexport function getApplicationDetails(application: string, branch?: string): Promise<Application> {\n  return getJSON('/api/applications/show', { application, branch }).then(\n    r => r.application,\n    throwGlobalError\n  );\n}\n\nexport function addApplicationBranch(data: {\n  application: string;\n  branch: string;\n  project: string[];\n  projectBranch: string[];\n}) {\n  return post('/api/applications/create_branch', data).catch(throwGlobalError);\n}\n\nexport function updateApplicationBranch(data: {\n  application: string;\n  branch: string;\n  name: string;\n  project: string[];\n  projectBranch: string[];\n}) {\n  return post('/api/applications/update_branch', data).catch(throwGlobalError);\n}\n\nexport function deleteApplicationBranch(application: string, branch: string) {\n  return post('/api/applications/delete_branch', { application, branch }).catch(throwGlobalError);\n}\n\nexport function getApplicationProjects(data: {\n  application: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected: string;\n}): Promise<{ paging: T.Paging; projects: ApplicationProject[] }> {\n  return getJSON('/api/applications/search_projects', data).catch(throwGlobalError);\n}\n\nexport function addProjectToApplication(application: string, project: string) {\n  return post('/api/applications/add_project', { application, project }).catch(throwGlobalError);\n}\n\nexport function removeProjectFromApplication(application: string, project: string) {\n  return post('/api/applications/remove_project', { application, project }).catch(throwGlobalError);\n}\n\nexport function refreshApplication(key: string) {\n  return post('/api/applications/refresh', { key }).catch(throwGlobalError);\n}\n\nexport function createApplication(\n  name: string,\n  description: string,\n  key: string | undefined,\n  visibility: string\n): Promise<{\n  application: {\n    description?: string;\n    key: string;\n    name: string;\n    visibility: Visibility;\n  };\n}> {\n  return postJSON('/api/applications/create', { description, key, name, visibility }).catch(\n    throwGlobalError\n  );\n}\n\nexport function deleteApplication(application: string) {\n  return post('/api/applications/delete', { application }).catch(throwGlobalError);\n}\n\nexport function editApplication(application: string, name: string, description: string) {\n  return post('/api/applications/update', { name, description, application }).catch(\n    throwGlobalError\n  );\n}\n"],"sourceRoot":""}