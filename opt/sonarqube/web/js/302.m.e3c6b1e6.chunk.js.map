{"version":3,"sources":["webpack:///./src/main/js/apps/system/styles.css?4b04","webpack:///./src/main/js/apps/system/styles.css","webpack:///./src/main/js/components/common/StatusIndicator.css?548e","webpack:///./src/main/js/components/common/StatusIndicator.css","webpack:///./src/main/js/apps/system/utils.ts","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCauseItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/SysInfoItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/Section.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCard.tsx","webpack:///./src/main/js/apps/system/components/ClusterSysInfos.tsx","webpack:///./src/main/js/apps/system/components/ChangeLogLevelForm.tsx","webpack:///./src/main/js/apps/system/components/PageActions.tsx","webpack:///./src/main/js/apps/system/components/PageHeader.tsx","webpack:///./src/main/js/apps/system/components/StandaloneSysInfos.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeIntermediate.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeItem.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeForm.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeNotif.tsx","webpack:///./src/main/js/apps/system/components/App.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/icons/CopyIcon.tsx","webpack:///./src/main/js/components/controls/clipboard.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/icons/ChevronDownIcon.tsx","webpack:///./src/main/js/components/icons/OpenCloseIcon.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./src/main/js/app/components/AdminContext.tsx","webpack:///./src/main/js/components/common/RestartButton.tsx"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","LOGS_LEVELS","DEFAULT_LOG_LEVEL","PLUGINS_FIELD","SETTINGS_FIELD","STATS_FIELD","SYSTEM_FIELD","ignoreInfoFields","sysInfoObject","getHealth","getHealthCauses","getLogsLevel","undefined","isLogInfoBlock","Boolean","hasLoggingInfo","logLevel","indexOf","getAppNodes","sysInfoData","getServerId","getVersion","getClusterVersion","appNodes","length","getSystemLogsLevel","logLevels","map","getNodeName","nodeInfo","getSystemData","statData","statistics","getClusterMainCardSection","getStandaloneMainSections","value","key","includes","startsWith","getFileNameSuffix","suffix","now","Date","getFullYear","getMonth","getDate","getHours","getMinutes","parseQuery","urlQuery","expandedCards","expand","serializeQuery","query","sortUpgrades","upgrades","upgrade","Number","version","split","groupUpgrades","groupedVersions","Object","keys","className","color","size","HealthCauseItem","health","healthCause","Alert","display","variant","HealthItem","biggerHealth","name","healthCauses","hasHealthCauses","statusIndicator","toLowerCase","cause","idx","Tooltip","overlay","SysInfoItem","Array","JSON","stringify","v","n","Section","items","id","style","wordBreak","HealthCard","onClick","open","mainSection","sections","item","groupSections","showFields","showSections","showLogLevelWarning","BoxedGroupAccordion","data","renderHeader","title","section","ClusterSysInfos","toggleCard","node","getSearchNodes","props","super","handleFormSubmit","event","preventDefault","newLevel","this","state","updating","setState","then","onChange","handleLevelChange","currentTarget","header","Modal","contentLabel","onRequestClose","onClose","onSubmit","level","checked","type","htmlFor","infoMsg","disabled","handleLogsLevelOpen","openLogsLevelForm","handleLogsLevelChange","onLogLevelChange","handleLogsLevelClose","removeElementFocus","blur","nextProps","infoUrl","logsUrl","canDownloadLogs","Dropdown","download","href","rel","target","DropdownIcon","serverId","canRestart","AdminContext","Consumer","fetchSystemStatus","systemStatus","RestartButton","cluster","store","productionDatabase","isCluster","loading","showActions","copyValue","StandAloneSysInfos","Web","_","getStandaloneSecondarySections","showMore","toggleIntermediatVersions","turned","releaseDate","DateFormatter","date","long","formattedDate","changeLogUrl","description","SystemUpgradeItem","edition","isLatestVersion","systemUpgrades","lastUpgrade","downloadUrl","community","defaultMessage","values","slice","upgrading","appState","withAppState","mounted","openSystemUpgradeForm","fetchSystemUpgrade","handleOpenSystemUpgradeForm","handleCloseSystemUpgradeForm","fetchSysInfo","toggleSysInfoCards","toggledCard","location","filter","card","concat","updateQuery","newQuery","router","replace","pathname","Suggestions","suggestions","defer","renderSysInfo","SimpleModal","submitting","stopSubmitting","handleCloseClick","submit","handleSubmitClick","result","children","modalProps","onCloseClick","onFormSubmit","onSubmitClick","CopyIcon","fill","iconProps","Icon","fillRule","d","copySuccess","setCopyButton","copyButton","handleSuccessCopy","setTimeout","clipboard","on","destroy","ClipboardButton","visible","innerRef","ClipboardIconButton","tooltip","tooltipProps","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","ConfirmModal","handleSubmit","onConfirm","confirmData","renderModalContent","confirmButtonText","confirmDisable","headerDescription","isDestructive","cancelButtonText","autoFocus","noBackdrop","formatterOption","year","month","day","longFormatterOption","ConfirmButton","renderConfirmModal","modalBody","modalHeader","modalHeaderDescription","confirmModalProps","modal","ModalButton","handleButtonClick","handleCloseModal","ChevronDownIcon","OpenCloseIcon","setLogLevel","catch","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","max","slowThreshold","status","hoveringInner","handleClick","onDetailEnter","onDetailLeave","role","onMouseEnter","onMouseLeave","defaultPendingPlugins","installing","removing","defaultSystemStatus","fetchPendingPlugins","pendingPlugins","handleConfirm"],"mappings":"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","file":"js/302.m.e3c6b1e6.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".system-info-health-title{margin-top:24px;margin-bottom:16px}.system-info-health-info{margin-top:-12px}.system-info-copy-paste-id-info{max-width:550px;padding:8px 16px;clear:both;line-height:1.8}.system-info-health-info .status-indicator{position:relative;top:8px}.system-info-health-info.no-margin .status-indicator{margin:0}.system-info-section~.system-info-section{margin-top:16px}.system-info-section-item-name{width:25vw;overflow:hidden;text-overflow:ellipsis}.system-upgrade-version{padding:8px}.system-upgrade-version~.system-upgrade-version{margin-top:10px;padding-top:18px;border-top:1px solid #e6e6e6}.system-upgrade-intermediate{padding:6px 10px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".status-indicator{display:inline-block;box-sizing:border-box;width:16px;height:16px;border-radius:16px;margin:4px}.status-indicator.small-status-indicator{width:8px;height:8px;border-radius:8px;margin:8px}.status-indicator.big-status-indicator{width:24px;height:24px;border-radius:24px;margin:0}.status-indicator.red{position:relative;z-index:2;background-color:#d4333f}.status-indicator.yellow{background-color:#eabe06}.status-indicator.green{background-color:#0a0}.status-indicator.orange{background-color:#ed7d20}.status-indicator.gray{background-color:#b4b4b4}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';\nimport { formatMeasure } from '../../helpers/measures';\nimport { cleanQuery, parseAsArray, parseAsString, serializeStringArray } from '../../helpers/query';\nimport { SystemUpgrade } from '../../types/system';\n\nexport interface Query {\n  expandedCards: string[];\n}\n\nexport const LOGS_LEVELS = ['INFO', 'DEBUG', 'TRACE'];\nconst DEFAULT_LOG_LEVEL = LOGS_LEVELS[0];\n\nexport const APP_NODES_FIELD = 'Application Nodes';\nexport const ALMS_FIELD = 'ALMs';\nexport const BUNDLED_FIELD = 'Bundled';\nexport const CE_FIELD_PREFIX = 'Compute Engine';\nexport const CE_LOGGING_FIELD = 'Compute Engine Logging';\nexport const HA_FIELD = 'High Availability';\nexport const HEALTH_CAUSES_FIELD = 'Health Causes';\nexport const HEALTH_FIELD = 'Health';\nexport const LOGS_LEVEL_FIELD = 'Logs Level';\nexport const NAME_FIELD = 'Name';\nexport const NCLOC_FIELD = 'ncloc';\nexport const PLUGINS_FIELD = 'Plugins';\nexport const SEARCH_NODES_FIELD = 'Search Nodes';\nexport const SEARCH_PREFIX = 'Search';\nexport const SERVER_ID_FIELD = 'Server ID';\nexport const SETTINGS_FIELD = 'Settings';\nexport const STATE_FIELD = 'State';\nexport const STATS_FIELD = 'Statistics';\nexport const SYSTEM_FIELD = 'System';\nexport const VERSION_FIELD = 'Version';\nexport const WEB_LOGGING_FIELD = 'Web Logging';\nexport const WEB_PREFIX = 'Web';\n\nexport function ignoreInfoFields(sysInfoObject: T.SysInfoValueObject) {\n  return omit(sysInfoObject, [\n    ALMS_FIELD,\n    BUNDLED_FIELD,\n    HEALTH_FIELD,\n    HEALTH_CAUSES_FIELD,\n    NAME_FIELD,\n    PLUGINS_FIELD,\n    SETTINGS_FIELD,\n    SERVER_ID_FIELD,\n    VERSION_FIELD\n  ]);\n}\n\nexport function getHealth(sysInfoObject: T.SysInfoBase) {\n  return sysInfoObject[HEALTH_FIELD];\n}\n\nexport function getHealthCauses(sysInfoObject: T.SysInfoBase) {\n  return sysInfoObject[HEALTH_CAUSES_FIELD];\n}\n\nexport function getLogsLevel(sysInfoObject?: T.SysInfoValueObject): string {\n  if (sysInfoObject !== undefined) {\n    if (isLogInfoBlock(sysInfoObject)) {\n      return sysInfoObject[LOGS_LEVEL_FIELD];\n    } else if (hasLoggingInfo(sysInfoObject)) {\n      return sortBy(\n        [\n          getLogsLevel(sysInfoObject[WEB_LOGGING_FIELD]),\n          getLogsLevel(sysInfoObject[CE_LOGGING_FIELD])\n        ],\n        logLevel => LOGS_LEVELS.indexOf(logLevel)\n      )[1];\n    }\n  }\n  return DEFAULT_LOG_LEVEL;\n}\n\nexport function getAppNodes(sysInfoData: T.SysInfoCluster): T.SysInfoAppNode[] {\n  return sysInfoData[APP_NODES_FIELD];\n}\n\nexport function getSearchNodes(sysInfoData: T.SysInfoCluster): T.SysInfoSearchNode[] {\n  return sysInfoData[SEARCH_NODES_FIELD];\n}\n\nexport function isCluster(\n  sysInfoData: T.SysInfoCluster | T.SysInfoStandalone\n): sysInfoData is T.SysInfoCluster {\n  return sysInfoData[SYSTEM_FIELD] && sysInfoData[SYSTEM_FIELD][HA_FIELD] === true;\n}\n\nexport function isLogInfoBlock(\n  sysInfoObject: T.SysInfoValueObject\n): sysInfoObject is T.SysInfoLogging {\n  return sysInfoObject[LOGS_LEVEL_FIELD] !== undefined;\n}\n\nexport function hasLoggingInfo(\n  sysInfoObject: T.SysInfoValueObject\n): sysInfoObject is T.SysInfoStandalone | T.SysInfoAppNode {\n  return Boolean(sysInfoObject[WEB_LOGGING_FIELD] || sysInfoObject[CE_LOGGING_FIELD]);\n}\n\nexport function getServerId(sysInfoData: T.SysInfoCluster | T.SysInfoStandalone): string {\n  return sysInfoData && sysInfoData[SYSTEM_FIELD][SERVER_ID_FIELD];\n}\n\nexport function getVersion(sysInfoData: T.SysInfoStandalone): string | undefined {\n  return sysInfoData && sysInfoData[SYSTEM_FIELD][VERSION_FIELD];\n}\n\nexport function getClusterVersion(sysInfoData: T.SysInfoCluster): string | undefined {\n  const appNodes = getAppNodes(sysInfoData);\n  return appNodes.length > 0 ? appNodes[0][SYSTEM_FIELD][VERSION_FIELD] : undefined;\n}\n\nexport function getSystemLogsLevel(sysInfoData: T.SysInfoCluster | T.SysInfoStandalone): string {\n  if (isCluster(sysInfoData)) {\n    const logLevels = sortBy(getAppNodes(sysInfoData).map(getLogsLevel), logLevel =>\n      LOGS_LEVELS.indexOf(logLevel)\n    );\n    return logLevels.length > 0 ? logLevels[logLevels.length - 1] : DEFAULT_LOG_LEVEL;\n  } else {\n    return getLogsLevel(sysInfoData);\n  }\n}\n\nexport function getNodeName(nodeInfo: T.SysInfoAppNode | T.SysInfoSearchNode): string {\n  return nodeInfo[NAME_FIELD];\n}\n\nfunction getSystemData(sysInfoData: T.SysInfoBase): T.SysInfoValueObject {\n  const statData: T.SysInfoValueObject = {};\n  const statistics = sysInfoData[STATS_FIELD] as T.SysInfoValueObject; // TODO\n  if (statistics) {\n    statData['Lines of Code'] = formatMeasure(statistics[NCLOC_FIELD] as number, 'INT');\n  }\n  return { ...sysInfoData[SYSTEM_FIELD], ...statData };\n}\n\nexport function getClusterMainCardSection(sysInfoData: T.SysInfoCluster): T.SysInfoValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...omit(sysInfoData, [\n      APP_NODES_FIELD,\n      PLUGINS_FIELD,\n      SEARCH_NODES_FIELD,\n      SETTINGS_FIELD,\n      STATS_FIELD,\n      SYSTEM_FIELD\n    ])\n  };\n}\n\nexport function getStandaloneMainSections(sysInfoData: T.SysInfoBase): T.SysInfoValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omitBy(\n      sysInfoData,\n      (value, key) =>\n        value == null ||\n        [PLUGINS_FIELD, SETTINGS_FIELD, STATS_FIELD, SYSTEM_FIELD].includes(key) ||\n        key.startsWith(CE_FIELD_PREFIX) ||\n        key.startsWith(SEARCH_PREFIX) ||\n        key.startsWith(WEB_PREFIX)\n    ) as T.SysInfoValueObject)\n  };\n}\n\nexport function getStandaloneSecondarySections(sysInfoData: T.SysInfoBase): T.SysInfoSection {\n  return {\n    Web: pickBy(sysInfoData, (_, key) => key.startsWith(WEB_PREFIX)) as T.SysInfoValueObject,\n    'Compute Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith(CE_FIELD_PREFIX)\n    ) as T.SysInfoValueObject,\n    'Search Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith(SEARCH_PREFIX)\n    ) as T.SysInfoValueObject\n  };\n}\n\nexport function getFileNameSuffix(suffix?: string) {\n  const now = new Date();\n  return (\n    `${suffix ? suffix + '-' : ''}` +\n    `${now.getFullYear()}-${now.getMonth() + 1}-` +\n    `${now.getDate()}-${now.getHours()}-${now.getMinutes()}`\n  );\n}\n\nexport function groupSections(sysInfoData: T.SysInfoValueObject) {\n  const mainSection: T.SysInfoValueObject = {};\n  const sections: T.SysInfoSection = {};\n  each(sysInfoData, (item, key) => {\n    if (typeof item !== 'object' || item instanceof Array) {\n      mainSection[key] = item;\n    } else {\n      sections[key] = item;\n    }\n  });\n  return { mainSection, sections };\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery): Query => ({\n    expandedCards: parseAsArray(urlQuery.expand, parseAsString)\n  })\n);\n\nexport const serializeQuery = memoize(\n  (query: Query): T.RawQuery =>\n    cleanQuery({\n      expand: serializeStringArray(query.expandedCards)\n    })\n);\n\nexport function sortUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[] {\n  return sortBy(upgrades, [\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[0]),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)\n  ]);\n}\n\nexport function groupUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[][] {\n  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);\n  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));\n  return sortedMajor.map(key => groupedVersions[key]);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\nimport './StatusIndicator.css';\n\nexport interface StatusIndicatorProps {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: StatusIndicatorProps) {\n  return (\n    <>\n      {color ? translate('system.current_health', color) : undefined}\n      <i\n        className={classNames(\n          'spacer-left',\n          'status-indicator',\n          color,\n          {\n            'small-status-indicator': size === 'small',\n            'big-status-indicator': size === 'big'\n          },\n          className\n        )}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  className?: string;\n  health: T.HealthType;\n  healthCause: string;\n}\n\nexport default function HealthCauseItem({ className, health, healthCause }: Props) {\n  return (\n    <Alert\n      className={classNames('boxed-group-accordion-alert', className)}\n      display=\"inline\"\n      variant={health === 'RED' ? 'error' : 'warning'}>\n      {healthCause}\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport StatusIndicator from '../../../../components/common/StatusIndicator';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport { translateWithParameters } from '../../../../helpers/l10n';\nimport HealthCauseItem from './HealthCauseItem';\n\ninterface Props {\n  biggerHealth?: boolean;\n  name?: string;\n  className?: string;\n  health: T.HealthType;\n  healthCauses?: string[];\n}\n\nexport default function HealthItem({ biggerHealth, className, name, health, healthCauses }: Props) {\n  const hasHealthCauses = healthCauses && healthCauses.length > 0 && health !== 'GREEN';\n  const statusIndicator = (\n    <StatusIndicator color={health.toLowerCase()} size={biggerHealth ? 'big' : undefined} />\n  );\n  return (\n    <div className={classNames('system-info-health-info', className)}>\n      {hasHealthCauses &&\n        healthCauses!.map((cause, idx) => (\n          <HealthCauseItem className=\"spacer-right\" health={health} healthCause={cause} key={idx} />\n        ))}\n      {name ? (\n        <Tooltip overlay={translateWithParameters('system.current_health_of_x', name)}>\n          <span>{statusIndicator}</span>\n        </Tooltip>\n      ) : (\n        statusIndicator\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport * as React from 'react';\nimport { translate } from '../../../../helpers/l10n';\nimport { HEALTH_FIELD, STATE_FIELD } from '../../utils';\nimport HealthItem from './HealthItem';\n\nexport interface Props {\n  name: string;\n  value: T.SysInfoValue;\n}\n\nexport default function SysInfoItem({ name, value }: Props) {\n  if (name === HEALTH_FIELD || name === STATE_FIELD) {\n    return <HealthItem className=\"no-margin\" health={value as T.HealthType} />;\n  }\n  if (value instanceof Array) {\n    return <code>{JSON.stringify(value)}</code>;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      return <>{translate(value ? 'yes' : 'no')}</>;\n    case 'object':\n      return (\n        <table className=\"data\">\n          <tbody>\n            {map(value, (v, n) => (\n              <tr key={n}>\n                <td className=\"thin nowrap\">{n}</td>\n                <td>\n                  <SysInfoItem name={n} value={v} />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    default:\n      return <code>{value}</code>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport * as React from 'react';\nimport SysInfoItem from './SysInfoItem';\n\ninterface Props {\n  name?: string;\n  items: T.SysInfoValueObject;\n}\n\nexport default function Section({ name, items }: Props) {\n  return (\n    <div className=\"system-info-section\">\n      {name && <h4 className=\"spacer-bottom\">{name}</h4>}\n      <table className=\"data zebra\" id={name}>\n        <tbody>\n          {map(items, (value, name) => {\n            return (\n              <tr key={name}>\n                <td className=\"thin\">\n                  <div className=\"system-info-section-item-name\">{name}</div>\n                </td>\n                <td style={{ wordBreak: 'break-all' }}>\n                  <SysInfoItem name={name} value={value} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport * as React from 'react';\nimport BoxedGroupAccordion from '../../../../components/controls/BoxedGroupAccordion';\nimport { Alert } from '../../../../components/ui/Alert';\nimport { translate } from '../../../../helpers/l10n';\nimport { getLogsLevel, groupSections, LOGS_LEVELS } from '../../utils';\nimport HealthItem from './HealthItem';\nimport Section from './Section';\n\ninterface Props {\n  biggerHealth?: boolean;\n  health?: T.HealthType;\n  healthCauses?: string[];\n  onClick: (toggledCard: string) => void;\n  open: boolean;\n  name: string;\n  sysInfoData: T.SysInfoValueObject;\n}\n\nexport default function HealthCard({\n  biggerHealth,\n  health,\n  healthCauses,\n  onClick,\n  open,\n  name,\n  sysInfoData\n}: Props) {\n  const { mainSection, sections } = groupSections(sysInfoData);\n  const showFields = open && mainSection && Object.keys(mainSection).length > 0;\n  const showSections = open && sections;\n  const logLevel = getLogsLevel(sysInfoData);\n  const showLogLevelWarning = logLevel && logLevel !== LOGS_LEVELS[0];\n  return (\n    <BoxedGroupAccordion\n      data={name}\n      onClick={onClick}\n      open={open}\n      renderHeader={() => (\n        <>\n          {showLogLevelWarning && (\n            <Alert\n              className=\"boxed-group-accordion-alert spacer-left\"\n              display=\"inline\"\n              variant=\"warning\">\n              {translate('system.log_level.warning.short')}\n            </Alert>\n          )}\n          {health && (\n            <HealthItem\n              biggerHealth={biggerHealth}\n              className=\"pull-right\"\n              health={health}\n              healthCauses={healthCauses}\n              name={name}\n            />\n          )}\n        </>\n      )}\n      title={name}>\n      {showFields && <Section items={mainSection} />}\n      {showSections &&\n        map(sections, (section, name) => <Section items={section} key={name} name={name} />)}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  getAppNodes,\n  getClusterMainCardSection,\n  getHealth,\n  getHealthCauses,\n  getNodeName,\n  getSearchNodes,\n  ignoreInfoFields\n} from '../utils';\nimport HealthCard from './info-items/HealthCard';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: T.SysInfoCluster;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function ClusterSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getClusterMainCardSection(sysInfoData))}\n      />\n      <li className=\"note system-info-health-title\">\n        {translate('system.application_nodes_title')}\n      </li>\n      {sortBy(getAppNodes(sysInfoData), getNodeName).map((node: T.SysInfoAppNode) => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n      <li className=\"note system-info-health-title\">{translate('system.search_nodes_title')}</li>\n      {sortBy(getSearchNodes(sysInfoData), getNodeName).map((node: T.SysInfoSearchNode) => (\n        <HealthCard\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { setLogLevel } from '../../../api/system';\nimport { ResetButtonLink, SubmitButton } from '../../../components/controls/buttons';\nimport Modal from '../../../components/controls/Modal';\nimport { Alert } from '../../../components/ui/Alert';\nimport { translate } from '../../../helpers/l10n';\nimport { LOGS_LEVELS } from '../utils';\n\ninterface Props {\n  infoMsg: string;\n  logLevel: string;\n  onChange: (level: string) => void;\n  onClose: () => void;\n}\n\ninterface State {\n  newLevel: string;\n  updating: boolean;\n}\n\nexport default class ChangeLogLevelForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { newLevel: props.logLevel, updating: false };\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newLevel } = this.state;\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n      setLogLevel(newLevel).then(\n        () => this.props.onChange(newLevel),\n        () => this.setState({ updating: false })\n      );\n    }\n  };\n\n  handleLevelChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    this.setState({ newLevel: event.currentTarget.value });\n\n  render() {\n    const { updating, newLevel } = this.state;\n    const header = translate('system.set_log_level');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"set-log-level-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            {LOGS_LEVELS.map(level => (\n              <p className=\"spacer-bottom\" key={level}>\n                <input\n                  checked={level === newLevel}\n                  className=\"spacer-right text-middle\"\n                  id={`loglevel-${level}`}\n                  name=\"system.log_levels\"\n                  onChange={this.handleLevelChange}\n                  type=\"radio\"\n                  value={level}\n                />\n                <label className=\"text-middle\" htmlFor={`loglevel-${level}`}>\n                  {level}\n                </label>\n              </p>\n            ))}\n            <Alert className=\"spacer-top\" variant=\"info\">\n              {this.props.infoMsg}\n            </Alert>\n            {newLevel !== 'INFO' && (\n              <Alert className=\"spacer-top\" variant=\"warning\">\n                {translate('system.log_level.warning')}\n              </Alert>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {updating && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={updating} id=\"set-log-level-submit\">\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink id=\"set-log-level-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport AdminContext from '../../../app/components/AdminContext';\nimport RestartButton from '../../../components/common/RestartButton';\nimport { Button, EditButton } from '../../../components/controls/buttons';\nimport Dropdown from '../../../components/controls/Dropdown';\nimport DropdownIcon from '../../../components/icons/DropdownIcon';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { getFileNameSuffix } from '../utils';\nimport ChangeLogLevelForm from './ChangeLogLevelForm';\n\ninterface Props {\n  canDownloadLogs: boolean;\n  canRestart: boolean;\n  cluster: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n}\n\ninterface State {\n  logLevel: string;\n  openLogsLevelForm: boolean;\n}\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logLevel: props.logLevel,\n      openLogsLevelForm: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.logLevel !== this.state.logLevel) {\n      this.setState({ logLevel: nextProps.logLevel });\n    }\n  }\n\n  handleLogsLevelOpen = () => {\n    this.setState({ openLogsLevelForm: true });\n  };\n\n  handleLogsLevelChange = (logLevel: string) => {\n    this.setState({ logLevel });\n    this.props.onLogLevelChange();\n    this.handleLogsLevelClose();\n  };\n\n  handleLogsLevelClose = () => {\n    this.setState({ openLogsLevelForm: false });\n  };\n\n  removeElementFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.currentTarget.blur();\n  };\n\n  render() {\n    const infoUrl = getBaseUrl() + '/api/system/info';\n    const logsUrl = getBaseUrl() + '/api/system/logs';\n    return (\n      <div className=\"page-actions\">\n        <span>\n          <span className=\"text-middle\">\n            {translate('system.logs_level')}\n            {':'}\n            <strong className=\"little-spacer-left\">{this.state.logLevel}</strong>\n          </span>\n          <EditButton\n            className=\"spacer-left button-small\"\n            id=\"edit-logs-level-button\"\n            onClick={this.handleLogsLevelOpen}\n          />\n        </span>\n        {this.props.canDownloadLogs && (\n          <Dropdown\n            className=\"display-inline-block spacer-left\"\n            overlay={\n              <ul className=\"menu\">\n                <li>\n                  <a\n                    download=\"sonarqube_app.log\"\n                    href={logsUrl + '?process=app'}\n                    id=\"logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Main Process\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_ce.log\"\n                    href={logsUrl + '?process=ce'}\n                    id=\"ce-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Compute Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_es.log\"\n                    href={logsUrl + '?process=es'}\n                    id=\"es-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Search Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_web.log\"\n                    href={logsUrl + '?process=web'}\n                    id=\"web-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Web Server\n                  </a>\n                </li>\n              </ul>\n            }>\n            <Button>\n              {translate('system.download_logs')}\n              <DropdownIcon className=\"little-spacer-left\" />\n            </Button>\n          </Dropdown>\n        )}\n        <a\n          className=\"button spacer-left\"\n          download={`sonarqube-support-info-${getFileNameSuffix(this.props.serverId)}.json`}\n          href={infoUrl}\n          id=\"download-link\"\n          onClick={this.removeElementFocus}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('system.download_system_info')}\n        </a>\n        {this.props.canRestart && (\n          <AdminContext.Consumer>\n            {({ fetchSystemStatus, systemStatus }) => (\n              <RestartButton\n                className=\"spacer-left\"\n                fetchSystemStatus={fetchSystemStatus}\n                systemStatus={systemStatus}\n              />\n            )}\n          </AdminContext.Consumer>\n        )}\n        {this.state.openLogsLevelForm && (\n          <ChangeLogLevelForm\n            infoMsg={translate(\n              this.props.cluster ? 'system.cluster_log_level.info' : 'system.log_level.info'\n            )}\n            logLevel={this.state.logLevel}\n            onChange={this.handleLogsLevelChange}\n            onClose={this.handleLogsLevelClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ClipboardButton } from '../../../components/controls/clipboard';\nimport { Alert } from '../../../components/ui/Alert';\nimport { toShortNotSoISOString } from '../../../helpers/dates';\nimport { translate } from '../../../helpers/l10n';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport PageActions from './PageActions';\n\nexport interface Props {\n  isCluster: boolean;\n  loading: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  productionDatabase: boolean;\n  serverId?: string;\n  showActions: boolean;\n  version?: string;\n}\n\nexport function PageHeader(props: Props) {\n  const {\n    isCluster,\n    loading,\n    logLevel,\n    serverId,\n    showActions,\n    version,\n    productionDatabase\n  } = props;\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('system_info.page')}</h1>\n      {showActions && (\n        <PageActions\n          canDownloadLogs={!isCluster}\n          canRestart={!isCluster}\n          cluster={isCluster}\n          logLevel={logLevel}\n          onLogLevelChange={props.onLogLevelChange}\n          serverId={serverId}\n        />\n      )}\n      {loading && (\n        <div className=\"page-actions\">\n          <i className=\"spinner\" />\n        </div>\n      )}\n      {serverId && version && (\n        <div className=\"system-info-copy-paste-id-info boxed-group \">\n          {!productionDatabase && (\n            <Alert className=\"width-100\" variant=\"warning\">\n              {translate('system.not_production_database_warning')}\n            </Alert>\n          )}\n          <div className=\"display-flex-center\">\n            <div className=\"flex-1\">\n              <table className=\"width-100\">\n                <tbody>\n                  <tr>\n                    <th>\n                      <strong>{translate('system.server_id')}</strong>\n                    </th>\n                    <td>\n                      <code>{serverId}</code>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th>\n                      <strong>{translate('system.version')}</strong>\n                    </th>\n                    <td>{version}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <ClipboardButton\n              className=\"flex-0\"\n              copyValue={`SonarQube ID information\nServer ID: ${serverId}\nVersion: ${version}\nDate: ${toShortNotSoISOString(Date.now())}\n`}>\n              {translate('system.copy_id_info')}\n            </ClipboardButton>\n          </div>\n        </div>\n      )}\n    </header>\n  );\n}\n\nconst mapStateToProps = (store: Store) => ({\n  productionDatabase: getAppState(store).productionDatabase\n});\n\nexport default connect(mapStateToProps)(PageHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport * as React from 'react';\nimport {\n  getHealth,\n  getHealthCauses,\n  getStandaloneMainSections,\n  getStandaloneSecondarySections,\n  ignoreInfoFields\n} from '../utils';\nimport HealthCard from './info-items/HealthCard';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: T.SysInfoStandalone;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function StandAloneSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getStandaloneMainSections(sysInfoData))}\n      />\n      {map(getStandaloneSecondarySections(sysInfoData), (section, name) => (\n        <HealthCard\n          key={name}\n          name={name}\n          onClick={toggleCard}\n          open={expandedCards.includes(name)}\n          sysInfoData={ignoreInfoFields(section)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from '../../../../components/controls/buttons';\nimport DropdownIcon from '../../../../components/icons/DropdownIcon';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { translate } from '../../../../helpers/l10n';\nimport { SystemUpgrade } from '../../../../types/system';\n\ninterface Props {\n  className?: string;\n  upgrades: SystemUpgrade[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class SystemUpgradeIntermediate extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleIntermediatVersions = () => {\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const { upgrades } = this.props;\n    if (upgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ButtonLink className=\"little-spacer-bottom\" onClick={this.toggleIntermediatVersions}>\n          {showMore\n            ? translate('system.hide_intermediate_versions')\n            : translate('system.show_intermediate_versions')}\n          <DropdownIcon className=\"little-spacer-left\" turned={showMore} />\n        </ButtonLink>\n        {showMore &&\n          upgrades.map(upgrade => (\n            <div className=\"note system-upgrade-intermediate\" key={upgrade.version}>\n              {upgrade.releaseDate && (\n                <DateFormatter date={upgrade.releaseDate} long={true}>\n                  {formattedDate => (\n                    <p>\n                      <b className=\"little-spacer-right\">SonarQube {upgrade.version}</b>\n                      {formattedDate}\n                      {upgrade.changeLogUrl && (\n                        <a\n                          className=\"spacer-left\"\n                          href={upgrade.changeLogUrl}\n                          rel=\"noopener noreferrer\"\n                          target=\"_blank\">\n                          {translate('system.release_notes')}\n                        </a>\n                      )}\n                    </p>\n                  )}\n                </DateFormatter>\n              )}\n              {upgrade.description && <p className=\"little-spacer-top\">{upgrade.description}</p>}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport {\n  getEdition,\n  getEditionDownloadFilename,\n  getEditionDownloadUrl\n} from '../../../../helpers/editions';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\nimport { EditionKey } from '../../../../types/editions';\nimport { SystemUpgrade } from '../../../../types/system';\nimport SystemUpgradeIntermediate from './SystemUpgradeIntermediate';\n\nexport interface SystemUpgradeItemProps {\n  edition: EditionKey | undefined;\n  isLatestVersion: boolean;\n  systemUpgrades: SystemUpgrade[];\n}\n\nexport default function SystemUpgradeItem(props: SystemUpgradeItemProps) {\n  const { edition, isLatestVersion, systemUpgrades } = props;\n  const lastUpgrade = systemUpgrades[0];\n  const downloadUrl = getEditionDownloadUrl(\n    getEdition(edition || EditionKey.community),\n    lastUpgrade\n  );\n\n  return (\n    <div className=\"system-upgrade-version\">\n      <h3 className=\"h1 spacer-bottom\">\n        <strong>\n          {isLatestVersion ? translate('system.latest_version') : translate('system.lts_version')}\n        </strong>\n        {isLatestVersion && (\n          <a\n            className=\"spacer-left medium\"\n            href=\"https://www.sonarqube.org/whats-new/?referrer=sonarqube\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.see_whats_new')}\n          </a>\n        )}\n      </h3>\n      <p>\n        <FormattedMessage\n          defaultMessage={translate('system.version_is_availble')}\n          id=\"system.version_is_availble\"\n          values={{ version: <b>SonarQube {lastUpgrade.version}</b> }}\n        />\n      </p>\n      <p className=\"spacer-top\">{lastUpgrade.description}</p>\n      <div className=\"big-spacer-top\">\n        {lastUpgrade.releaseDate && (\n          <DateFormatter date={lastUpgrade.releaseDate} long={true}>\n            {formattedDate => (\n              <span>{translateWithParameters('system.released_x', formattedDate)}</span>\n            )}\n          </DateFormatter>\n        )}\n        {lastUpgrade.changeLogUrl && (\n          <a\n            className=\"spacer-left\"\n            href={lastUpgrade.changeLogUrl}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.release_notes')}\n          </a>\n        )}\n      </div>\n      <SystemUpgradeIntermediate className=\"spacer-top\" upgrades={systemUpgrades.slice(1)} />\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"button\"\n          download={getEditionDownloadFilename(downloadUrl)}\n          href={downloadUrl}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translateWithParameters('system.download_x', lastUpgrade.version)}\n        </a>\n        <a\n          className=\"spacer-left\"\n          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('system.how_to_upgrade')}\n        </a>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink } from '../../../../components/controls/buttons';\nimport Modal from '../../../../components/controls/Modal';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { translate } from '../../../../helpers/l10n';\nimport { EditionKey } from '../../../../types/editions';\nimport { SystemUpgrade } from '../../../../types/system';\nimport SystemUpgradeItem from './SystemUpgradeItem';\n\ninterface Props {\n  appState: Pick<T.AppState, 'edition'>;\n  onClose: () => void;\n  systemUpgrades: SystemUpgrade[][];\n}\n\ninterface State {\n  upgrading: boolean;\n}\n\nexport class SystemUpgradeForm extends React.PureComponent<Props, State> {\n  state: State = { upgrading: false };\n\n  render() {\n    const { upgrading } = this.state;\n    const { appState, systemUpgrades } = this.props;\n    const header = translate('system.system_upgrade');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <div className=\"modal-body\">\n          {systemUpgrades.map((upgrades, idx) => (\n            <SystemUpgradeItem\n              edition={\n                appState.edition as EditionKey /* TODO: Fix once AppState is no longer ambiant. */\n              }\n              key={upgrades[upgrades.length - 1].version}\n              systemUpgrades={upgrades}\n              isLatestVersion={idx === 0}\n            />\n          ))}\n        </div>\n        <div className=\"modal-foot\">\n          {upgrading && <i className=\"spinner spacer-right\" />}\n          <a\n            className=\"pull-left\"\n            href=\"https://www.sonarqube.org/downloads/?referrer=sonarqube\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.see_sonarqube_downloads')}\n          </a>\n          <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default withAppState(SystemUpgradeForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getSystemUpgrades } from '../../../../api/system';\nimport { Button } from '../../../../components/controls/buttons';\nimport { Alert } from '../../../../components/ui/Alert';\nimport { translate } from '../../../../helpers/l10n';\nimport { SystemUpgrade } from '../../../../types/system';\nimport { groupUpgrades, sortUpgrades } from '../../utils';\nimport SystemUpgradeForm from './SystemUpgradeForm';\n\ninterface State {\n  systemUpgrades: SystemUpgrade[][];\n  openSystemUpgradeForm: boolean;\n}\n\nexport default class SystemUpgradeNotif extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { openSystemUpgradeForm: false, systemUpgrades: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSystemUpgrade();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSystemUpgrade = () =>\n    getSystemUpgrades().then(\n      ({ upgrades }) => {\n        if (this.mounted) {\n          this.setState({ systemUpgrades: groupUpgrades(sortUpgrades(upgrades)) });\n        }\n      },\n      () => {}\n    );\n\n  handleOpenSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: true });\n  };\n\n  handleCloseSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: false });\n  };\n\n  render() {\n    const { systemUpgrades } = this.state;\n\n    if (systemUpgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"page-notifs\">\n        <Alert variant=\"info\">\n          {translate('system.new_version_available')}\n          <Button className=\"spacer-left\" onClick={this.handleOpenSystemUpgradeForm}>\n            {translate('learn_more')}\n          </Button>\n        </Alert>\n        {this.state.openSystemUpgradeForm && (\n          <SystemUpgradeForm\n            onClose={this.handleCloseSystemUpgradeForm}\n            systemUpgrades={systemUpgrades}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { getSystemInfo } from '../../../api/system';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { translate } from '../../../helpers/l10n';\nimport '../styles.css';\nimport {\n  getClusterVersion,\n  getServerId,\n  getSystemLogsLevel,\n  getVersion,\n  isCluster,\n  parseQuery,\n  Query,\n  serializeQuery\n} from '../utils';\nimport ClusterSysInfos from './ClusterSysInfos';\nimport PageHeader from './PageHeader';\nimport StandaloneSysInfos from './StandaloneSysInfos';\nimport SystemUpgradeNotif from './system-upgrade/SystemUpgradeNotif';\n\ntype Props = WithRouterProps;\n\ninterface State {\n  loading: boolean;\n  sysInfoData?: T.SysInfoCluster | T.SysInfoStandalone;\n}\n\nexport class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSysInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSysInfo = () => {\n    this.setState({ loading: true });\n    getSystemInfo().then(\n      sysInfoData => {\n        if (this.mounted) {\n          this.setState({ loading: false, sysInfoData });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  toggleSysInfoCards = (toggledCard: string) => {\n    const query = parseQuery(this.props.location.query);\n    let expandedCards;\n    if (query.expandedCards.includes(toggledCard)) {\n      expandedCards = query.expandedCards.filter(card => card !== toggledCard);\n    } else {\n      expandedCards = query.expandedCards.concat(toggledCard);\n    }\n    this.updateQuery({ expandedCards });\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.props.router.replace({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSysInfo() {\n    const { sysInfoData } = this.state;\n    if (!sysInfoData) {\n      return null;\n    }\n\n    const query = parseQuery(this.props.location.query);\n    if (isCluster(sysInfoData)) {\n      return (\n        <ClusterSysInfos\n          expandedCards={query.expandedCards}\n          sysInfoData={sysInfoData}\n          toggleCard={this.toggleSysInfoCards}\n        />\n      );\n    }\n    return (\n      <StandaloneSysInfos\n        expandedCards={query.expandedCards}\n        sysInfoData={sysInfoData}\n        toggleCard={this.toggleSysInfoCards}\n      />\n    );\n  }\n\n  render() {\n    const { loading, sysInfoData } = this.state;\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"system_info\" />\n        <Helmet defer={false} title={translate('system_info.page')} />\n        <SystemUpgradeNotif />\n        {sysInfoData && (\n          <PageHeader\n            isCluster={isCluster(sysInfoData)}\n            loading={loading}\n            logLevel={getSystemLogsLevel(sysInfoData)}\n            onLogLevelChange={this.fetchSysInfo}\n            serverId={getServerId(sysInfoData)}\n            showActions={sysInfoData !== undefined}\n            version={\n              isCluster(sysInfoData) ? getClusterVersion(sysInfoData) : getVersion(sysInfoData)\n            }\n          />\n        )}\n        {this.renderSysInfo()}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void | Response>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function CopyIcon({ fill = 'currentColor', ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <g fill={fill} fillRule=\"nonzero\">\n        <path d=\"M2.931 15.005V3H2v13h9v-.995z\" />\n        <path d=\"M10 4.015h3V14H4V1h6v3.015zM9 8V6H8v2H6v1h2v2h1V9h2V8H9z\" />\n        <path d=\"M11 1v2h2a2.151 2.151 0 0 0-2-2z\" />\n      </g>\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as Clipboard from 'clipboard';\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\nimport CopyIcon from '../icons/CopyIcon';\nimport { Button, ButtonIcon } from './buttons';\nimport Tooltip from './Tooltip';\n\nexport interface State {\n  copySuccess: boolean;\n}\n\ninterface RenderProps {\n  setCopyButton: (node: HTMLElement | null) => void;\n  copySuccess: boolean;\n}\n\ninterface BaseProps {\n  children: (props: RenderProps) => React.ReactNode;\n}\n\nexport class ClipboardBase extends React.PureComponent<BaseProps, State> {\n  private clipboard?: Clipboard;\n  private copyButton?: HTMLElement | null;\n  mounted = false;\n  state: State = { copySuccess: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.handleSuccessCopy);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.handleSuccessCopy);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n  }\n\n  setCopyButton = (node: HTMLElement | null) => {\n    this.copyButton = node;\n  };\n\n  handleSuccessCopy = () => {\n    if (this.mounted) {\n      this.setState({ copySuccess: true });\n      setTimeout(() => {\n        if (this.mounted) {\n          this.setState({ copySuccess: false });\n        }\n      }, 1000);\n    }\n  };\n\n  render() {\n    return this.props.children({\n      setCopyButton: this.setCopyButton,\n      copySuccess: this.state.copySuccess\n    });\n  }\n}\n\ninterface ButtonProps {\n  className?: string;\n  copyValue: string;\n  children?: React.ReactNode;\n}\n\nexport function ClipboardButton({ className, children, copyValue }: ButtonProps) {\n  return (\n    <ClipboardBase>\n      {({ setCopyButton, copySuccess }) => (\n        <Tooltip overlay={translate('copied_action')} visible={copySuccess}>\n          <Button\n            className={classNames('no-select', className)}\n            data-clipboard-text={copyValue}\n            innerRef={setCopyButton}>\n            {children || (\n              <>\n                <CopyIcon className=\"little-spacer-right\" />\n                {translate('copy')}\n              </>\n            )}\n          </Button>\n        </Tooltip>\n      )}\n    </ClipboardBase>\n  );\n}\n\ninterface IconButtonProps {\n  'aria-label'?: string;\n  className?: string;\n  copyValue: string;\n}\n\nexport function ClipboardIconButton(props: IconButtonProps) {\n  const { className, copyValue } = props;\n  return (\n    <ClipboardBase>\n      {({ setCopyButton, copySuccess }) => {\n        return (\n          <ButtonIcon\n            aria-label={props['aria-label'] ?? translate('copy_to_clipboard')}\n            className={classNames('no-select', className)}\n            data-clipboard-text={copyValue}\n            innerRef={setCopyButton}\n            tooltip={translate(copySuccess ? 'copied_action' : 'copy_to_clipboard')}\n            tooltipProps={copySuccess ? { visible: copySuccess } : undefined}>\n            <CopyIcon />\n          </ButtonIcon>\n        );\n      }}\n    </ClipboardBase>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\nimport DeferredSpinner from '../ui/DeferredSpinner';\nimport { ResetButtonLink, SubmitButton } from './buttons';\nimport ClickEventBoundary from './ClickEventBoundary';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {\n        /* noop */\n      });\n    }\n    this.props.onClose();\n    return undefined;\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <ClickEventBoundary>\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n            {headerDescription}\n          </header>\n          <div className=\"modal-body\">{children}</div>\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton\n              autoFocus={true}\n              className={isDestructive ? 'button-red' : undefined}\n              disabled={submitting || confirmDisable}>\n              {confirmButtonText}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {cancelButtonText}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      </ClickEventBoundary>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\nexport interface DateFormatterProps {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: DateFormatterProps) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ fill = 'currentColor', ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightIcon';\nimport { IconProps } from './Icon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...iconProps }: Props) {\n  return open ? <ChevronDownIcon {...iconProps} /> : <ChevronRightIcon {...iconProps} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from '../helpers/request';\nimport { SystemUpgrade } from '../types/system';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport OpenCloseIcon from '../icons/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { PendingPluginResult } from '../../types/plugins';\n\nexport interface AdminContextInterface {\n  fetchSystemStatus: () => void;\n  fetchPendingPlugins: () => void;\n  pendingPlugins: PendingPluginResult;\n  systemStatus: T.SysStatus;\n}\n\nexport const defaultPendingPlugins = { installing: [], removing: [], updating: [] };\nexport const defaultSystemStatus = 'UP';\n\nconst AdminContext = React.createContext<AdminContextInterface>({\n  fetchSystemStatus: () => {},\n  fetchPendingPlugins: () => {},\n  pendingPlugins: defaultPendingPlugins,\n  systemStatus: defaultSystemStatus\n});\nexport default AdminContext;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { restart } from '../../api/system';\nimport { Button } from '../../components/controls/buttons';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  fetchSystemStatus: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class RestartButton extends React.PureComponent<Props> {\n  handleConfirm = () => {\n    return restart().then(this.props.fetchSystemStatus);\n  };\n\n  render() {\n    const { className, systemStatus } = this.props;\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('restart')}\n        modalBody={\n          <>\n            <p className=\"spacer-top spacer-bottom\">\n              {translate('system.are_you_sure_to_restart')}\n            </p>\n            <p>{translate('system.forcing_shutdown_not_recommended')}</p>\n          </>\n        }\n        modalHeader={translate('system.restart_server')}\n        onConfirm={this.handleConfirm}>\n        {({ onClick }) => (\n          <Button\n            className={classNames('button-red', className)}\n            disabled={systemStatus !== 'UP'}\n            onClick={onClick}>\n            {systemStatus === 'RESTARTING'\n              ? translate('system.restart_in_progress')\n              : translate('system.restart_server')}\n          </Button>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n"],"sourceRoot":""}