{"version":3,"sources":["webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?95f7","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css?00fe","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/api/alm-integrations.ts","webpack:///./src/main/js/apps/create/project/AzurePersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/types.ts","webpack:///./src/main/js/apps/create/project/AzureProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/AzureProjectsList.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageHeader.tsx","webpack:///./src/main/js/apps/create/project/WrongBindingCountAlert.tsx","webpack:///./src/main/js/apps/create/project/AzureProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/AzureProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/BitbucketCloudSearchForm.tsx","webpack:///./src/main/js/apps/create/project/PersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketCloudProjectCreateRender.tsx","webpack:///./src/main/js/apps/create/project/BitbucketCloudProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/BitbucketRepositories.tsx","webpack:///./src/main/js/apps/create/project/BitbucketSearchResults.tsx","webpack:///./src/main/js/apps/create/project/BitbucketImportRepositoryForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/constants.ts","webpack:///./src/main/js/apps/create/project/CreateProjectModeSelection.tsx","webpack:///./src/main/js/apps/create/project/GitHubProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/GitHubProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/GitlabProjectSelectionForm.tsx","webpack:///./src/main/js/apps/create/project/GitlabProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/GitlabProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/helpers/handleRequiredAuthentication.ts","webpack:///./src/main/js/components/icons/QualifierIcon.tsx","webpack:///./src/main/js/components/controls/ListFooter.tsx","webpack:///./node_modules/lodash/without.js","webpack:///./node_modules/lodash/isArrayLikeObject.js","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./node_modules/lodash/_baseDifference.js","webpack:///./src/main/js/components/icons/DetachIcon.tsx","webpack:///./src/main/js/components/controls/Radio.tsx","webpack:///./src/main/js/components/icons/ChevronDownIcon.tsx","webpack:///./src/main/js/components/icons/OpenCloseIcon.tsx","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/components/controls/SearchSelect.tsx","webpack:///./src/main/js/components/common/ProjectKeyInput.tsx","webpack:///./src/main/js/helpers/projects.ts","webpack:///./src/main/js/components/icons/ChevronsIcon.tsx"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","setAlmPersonalAccessToken","almSetting","pat","username","catch","throwGlobalError","checkPersonalAccessTokenIsValid","then","status","async","response","error","getAzurePatUrl","url","replace","AzurePersonalAccessTokenForm","props","alm","submitting","validationFailed","touched","setTouched","token","setToken","isInvalid","errorMessage","className","id","defaultMessage","values","link","href","rel","target","DetachIcon","scope","onSubmit","e","preventDefault","onPersonalAccessTokenCreate","ValidationInput","isValid","label","required","autoFocus","minLength","name","onChange","value","type","disabled","DeferredSpinner","loading","CreateProjectModes","highlight","text","term","underline","toLowerCase","includes","pre","found","post","split","RegExp","AzureProjectAccordion","importing","startsOpen","project","repositories","searchQuery","selectedRepository","open","setOpen","page","setPage","limitedRepositories","slice","isSelected","repo","projectName","BoxedGroupAccordion","onClick","onOpen","title","description","length","map","key","sqProjectKey","CheckIcon","fill","green","size","to","sqProjectName","Radio","checked","onCheck","onSelectRepository","ListFooter","count","total","loadMore","p","Alert","variant","pathname","query","mode","AzureDevOps","resetPat","AzureProjectsList","loadingRepositories","projects","searchResults","filteredProjects","filter","undefined","displayedProjects","keySuffix","Boolean","onOpenProject","CreateProjectPageHeader","additionalActions","WrongBindingCountAlert","canAdmin","AzureProjectCreateRenderer","searching","settings","showPersonalAccessTokenForm","submittingToken","tokenValidationFailed","settingIsValid","showCountError","showUrlError","onImportRepository","alt","height","src","Azure","SearchBox","onSearch","placeholder","super","mounted","fetchInitialData","this","setState","patIsValid","checkPersonalAccessToken","fetchAzureProjects","state","firstProjectName","repos","fetchAzureRepositories","Promise","resolve","getAzureRepositories","cleanUrl","location","router","handleOpenProject","projectKey","projectRepos","handleSearchRepositories","results","searchAzureRepositories","handleImportRepository","createdProject","repositoryName","onProjectCreate","handleSelectRepository","handlePersonalAccessTokenCreate","prevProps","loadingBindings","BitbucketCloudSearchForm","importingSlug","isLastPage","loadingMore","repository","uuid","Tooltip","overlay","slug","QualifierIcon","qualifier","Project","workspace","onImport","onLoadMore","BitbucketCloud","getPatUrl","BitbucketServer","GitLab","handleUsernameChange","event","handlePasswordChange","password","handleSubmit","checkingPat","onPersonalAccessTokenCreated","validationErrorMessage","suffixTranslationKey","canSubmit","submitButtonDiabled","display","perm","BitbucketCloudProjectCreateRenderer","handlePersonalAccessTokenCreated","fetchData","handleError","projectsPaging","pageIndex","pageSize","handleSearch","handleLoadMore","handleImport","repositorySlug","result","importBitbucketCloudRepository","more","ps","searchForBitbucketCloudRepositories","BitbucketProjectAccordion","disableRepositories","showingAllRepositories","repositoryCount","String","BitbucketRepositories","projectRepositories","openProjectKeys","setOpenProjectKeys","allAreExpanded","isOpen","allShown","handleClick","BitbucketSearchResults","some","r","filteredProjectKeys","filteredSearchResults","BitbucketImportRepositoryForm","BitbucketProjectCreateRenderer","bitbucketSetting","fetchBitbucketProjects","fetchBitbucketRepositories","all","filteredRepositories","reduce","acc","bitbucketSettings","renderAlmOption","last","almCounts","appState","hasBitbucketCloudConf","isBitbucketOption","hasConfig","hasTooManyConfig","onConfigMode","onSelectMode","style","lineHeight","withAppState","almTotalCount","Object","prev","cur","GitHub","Manual","ChevronsIcon","orgToOption","organizations","q","o","GitHubProjectCreateRenderer","loadingOrganizations","selectedOrganization","SearchSelect","defaultOptions","minimumQueryLength","onSelect","onSelectOrganization","repositoryPaging","isDisabled","stopPropagation","renderRepositoryList","triggerSearch","fetchRepositories","organizationKey","handleSelectOrganization","find","organization","repositoryKey","initialize","code","fetchOrganizations","redirectToGithub","clientId","queryParams","param","join","instanceRootUrl","window","getGithubOrganizations","params","data","getGithubRepositories","paging","_","GitlabProjectSelectionForm","importingGitlabProjectId","pathSlug","pathName","GitlabProjectCreateRenderer","fetchProjects","getGitlabProjects","doImport","gitlabProjectId","importGitlabProject","checkFreeKey","validatingProjectKey","component","alreadyExist","projectKeyError","handleFormSubmit","trim","handleProjectKeyChange","fromUI","validateKey","projectKeyTouched","handleProjectNameChange","projectNameError","validateName","projectNameTouched","sanitizedProjectKey","Valid","branchesEnabled","projectNameIsInvalid","projectNameIsValid","MandatoryFieldsExplanation","maxLength","currentTarget","ProjectKeyInput","onProjectKeyChange","validating","PROJECT_MODE_FOR_ALM_KEY","azureSettings","bitbucketCloudSettings","githubSettings","gitlabSettings","fetchAlmBindings","almSettings","s","handleModeSelect","handleModeConfig","creatingAlmDefinition","handleProjectCreate","handleOnCancelCreation","handleAfterSubmit","createdAlmDefinition","titleTemplate","A11ySkipTarget","anchor","renderProjectCreation","AlmBindingDefinitionForm","alreadyHaveInstanceConfigured","onCancel","afterSubmit","enforceValidation","whenLoggedIn","handleRequiredAuthentication","history","returnTo","search","hash","return_to","qualifierIcons","app","iconProps","d","blue","brc","dev","dir","DirectoryIcon","fil","svw","trk","ProjectIcon","uts","UnitTestIcon","vw","cla","dev_prj","lib","pac","FoundIcon","orange","needReload","ready","hasMore","button","reload","baseDifference","baseRest","isArrayLikeObject","without","array","isArrayLike","isObjectLike","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","weight","SetCache","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","iteratee","comparator","index","isCommon","valuesLength","outer","computed","valuesIndex","children","role","ChevronDownIcon","OpenCloseIcon","hoveringInner","onDetailEnter","onDetailLeave","renderHeader","onMouseEnter","onMouseLeave","WrappedComponent","Wrapper","currentUser","displayName","currentQuery","handleChange","option","Array","isArray","onMultiSelect","handleInputChange","handleFilterOption","autofocus","resetOnBlur","Component","canCreate","clearable","escapeClearsValue","filterOption","isLoading","multi","noResultsText","onBlurResetsInput","onInputChange","optionRenderer","renderOption","promptTextCreator","searchable","valueRenderer","help","PROJECT_KEY_REGEX","PROJECT_KEY_INVALID_CHARACTERS","validateProjectKey","Empty","TooLong","test","OnlyDigits","InvalidChar","fillRule"],"mappings":"gFAAA,IAAIA,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,wFAAyF,KAElHD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,mjCAAojC,KAE7kCD,EAAOK,QAAUA,G,2NC2BV,SAASG,EACdC,EACAC,EACAC,GAEA,OAAO,YAAK,gCAAiC,CAAEF,aAAYC,MAAKC,aAAYC,MAC1EC,EAAA,GAIG,SAASC,EACdL,GAEA,OAAO,YAAI,kCAAmC,CAAEA,eAC7CM,KAAK,MAASC,QAAQ,KACtBJ,MAAMK,UACL,GAAwB,MAApBC,EAASF,OAAgB,CAE3B,MAAO,CAAEA,QAAQ,EAAOG,YADJ,YAAWD,IAGjC,OAAO,OAAAL,EAAA,GAAiBK,K,qGCjB9B,SAASE,EAAeC,GACtB,MAAM,GAAN,OAAUA,EAAIC,QAAQ,MAAO,IAA7B,0BAGa,SAASC,EAA6BC,GACnD,MACEf,YAAY,IAAEgB,EAAF,IAAOJ,GADf,WAEJK,GAAa,EAFT,iBAGJC,GACEH,GAEGI,EAASC,GAAc,YAAe,GAC7C,YAAgB,KACdA,GAAW,IACV,CAACH,IAEJ,MAAOI,EAAOC,GAAY,WAAe,IAEnCC,EAAaL,IAAqBC,GAAaA,IAAYE,EAEjE,IAAIG,EAOJ,OANKH,EAEME,IACTC,EAAe,YAAU,0CAA2CR,IAFpEQ,EAAe,YAAU,mDAMzB,uBAAKC,UAAU,6BACb,uBAAKA,UAAU,qBACb,0BAAK,YAAU,2CAA4CT,IAE3D,uBAAKS,UAAU,oCACb,gBAAC,mBAAgB,CACfC,GAAG,kDACHC,eAAgB,YAAU,kDAAmDX,GAC7EY,OAAQ,CACNC,KAAMjB,EACJ,qBACEa,UAAU,iBACVK,KAAMnB,EAAeC,GACrBmB,IAAI,sBACJC,OAAO,UACP,gBAACC,EAAA,EAAU,CAACR,UAAU,wBACtB,4BACG,YAAU,uDAAwDT,KAIvE,YAAU,uDAAwDA,GAEpEkB,MACE,8BACE,sDAOV,wBACEC,SAAWC,IACTA,EAAEC,iBACFtB,EAAMuB,4BAA4BjB,KAEpC,gBAACkB,EAAA,EAAe,CACd7B,MAAOc,EACPE,GAAG,wBACHH,UAAWA,EACXiB,SAAS,EACTC,MAAO,YAAU,uCACjBC,UAAU,GACV,yBACEC,WAAW,EACXlB,UAAW,EAAW,iCAAkC,CACtD,aAAcF,IAEhBG,GAAG,wBACHkB,UAAW,EACXC,KAAK,wBACLC,SAAWV,IACTd,EAASc,EAAEJ,OAAOe,OAClB3B,GAAW,IAEb4B,KAAK,OACLD,MAAO1B,KAIX,gBAAC,IAAY,CAAC4B,SAAU1B,GAAaN,IAAeE,GACjD,YAAU,yDAEb,gBAAC+B,EAAA,EAAe,CAACzB,UAAU,cAAc0B,QAASlC,O,IC7GhDmC,E,8CAAZ,SAAYA,GACV,kBACA,sBACA,8BACA,kCACA,kBACA,kBANF,CAAYA,MAAkB,KC8B9B,SAASC,EAAUC,EAAcC,EAAeC,GAAY,GAC1D,IAAKD,IAASD,EAAKG,cAAcC,SAASH,EAAKE,eAC7C,OAAOH,EAKT,MAAOK,EAAKC,EAAOC,GAAQP,EAAKQ,MAAM,IAAIC,OAAJ,WAAeR,EAAf,SAA4B,MAClE,OACE,gCACGI,EACD,0BAAQlC,UAAW,EAAW,CAAE+B,eAAeI,GAC9CC,GAKQ,SAASG,EAAsBjD,GAC5C,MAAM,UACJkD,EADI,QAEJd,EAFI,WAGJe,EAHI,QAIJC,EAJI,aAKJC,EAAe,GALX,YAMJC,EANI,mBAOJC,GACEvD,GAEGwD,EAAMC,GAAW,WAAeN,IAQhCO,EAAMC,GAAW,WAAe,GACjCC,EAAsBP,EAAaQ,MAAM,EAvC/B,GAuCkCH,GAE5CI,EAAcC,IAClBR,aAAkB,EAAlBA,EAAoBS,eAAgBZ,EAAQtB,MAAQyB,EAAmBzB,OAASiC,EAAKjC,KAEvF,OACE,gBAACmC,EAAA,EAAmB,CAClBvD,UAAW,EAAW,oBAAqB,CACzC8C,SAEFU,QAlBgB,KACbV,GACHxD,EAAMmE,OAAOf,EAAQtB,MAEvB2B,GAASD,IAePA,KAAMA,EACNY,MAAO,sBAAIA,MAAOhB,EAAQiB,aAAc/B,EAAUc,EAAQtB,KAAMwB,GAAa,KAC5EE,GACC,gBAACrB,EAAA,EAAe,CAACC,QAASA,GAEtBA,GAAmC,IAAxBiB,EAAaiB,OAmBxB,gCACE,uBAAK5D,UAAU,qBACZkD,EAAoBW,IAAIR,GACvB,uBACErD,UAAU,yEACV8D,IAAKT,EAAKjC,MACTiC,EAAKU,aACJ,gCACE,gBAACC,EAAA,EAAS,CAAChE,UAAU,eAAeiE,KAAM,SAAOC,MAAOC,KAAM,KAC9D,uBAAKnE,UAAU,mBACb,uBAAKA,UAAU,sCACb,gBAAC,IAAI,CAACoE,GAAI,YAAcf,EAAKU,cAAeL,MAAOL,EAAKgB,eACrDzC,EAAUyB,EAAKgB,eAAiBhB,EAAKjC,KAAMwB,KAGhD,0BAAK,YAAU,oDAInB,gBAAC0B,EAAA,EAAK,CACJC,QAASnB,EAAWC,GACpBrD,UAAU,kBACVwB,SAAUgB,EACVgC,QAAS,IAAMlF,EAAMmF,mBAAmBpB,GACxC/B,MAAO+B,EAAKjC,MACZ,wBAAMpB,UAAU,gBAAgB0D,MAAOL,EAAKjC,MACzCQ,EAAUyB,EAAKjC,KAAMwB,QAOlC,gBAAC8B,EAAA,EAAU,CACTC,MAAOzB,EAAoBU,OAC3BgB,MAAOjC,EAAaiB,OACpBiB,SAAU,IAAM5B,EAAQ6B,GAAKA,EAAI,MAtDrC,gBAACC,EAAA,EAAK,CAACC,QAAQ,WACb,gBAAC,mBAAgB,CACf9E,eAAgB,YAAU,mDAC1BD,GAAG,kDACHE,OAAQ,CACNC,KACE,gBAAC,IAAI,CACHgE,GAAI,CACFa,SAAU,mBACVC,MAAO,CAAEC,KAAMxD,EAAmByD,YAAaC,SAAU,KAE1D,YAAU,sDCvElB,SAASC,EAAkBhG,GACxC,MAAM,UACJkD,EADI,oBAEJ+C,EAFI,SAGJC,EAAW,GAHP,aAIJ7C,EAJI,cAKJ8C,EALI,YAMJ7C,EANI,mBAOJC,GACEvD,GAEG0D,EAAMC,GAAW,WAAe,GAEjCyC,EAAmBD,EACrBD,EAASG,OAAOb,QAA+Bc,IAA1BH,EAAcX,EAAE1D,OACrCoE,EAEJ,GAAgC,IAA5BE,EAAiB9B,OACnB,OACE,gBAACmB,EAAA,EAAK,CAAC/E,UAAU,aAAagF,QAAQ,WACnCS,EACC,YAAU,8CAEV,gBAAC,mBAAgB,CACfvF,eAAgB,YAAU,+CAC1BD,GAAG,8CACHE,OAAQ,CACNC,KACE,gBAAC,IAAI,CACHgE,GAAI,CACFa,SAAU,mBACVC,MAAO,CAAEC,KAAMxD,EAAmByD,YAAaC,SAAU,KAE1D,YAAU,oDAU3B,MAAMQ,EAAoBH,EAAiBvC,MAAM,EA7CjC,GA6CoCH,GAI9C8C,EAAYL,EAAgB,YAAc,GAEhD,OACE,2BACGI,EAAkBhC,IAAI,CAACiB,EAAG/G,IACzB,gBAACwE,EAAqB,CACpBuB,IAAG,UAAKgB,EAAE1D,MAAP,OAAc0E,GACjBtD,UAAWA,EACXd,QAASqE,QAAQR,EAAoBT,EAAE1D,OACvCqC,OAAQnE,EAAM0G,cACdvB,mBAAoBnF,EAAMmF,mBAC1B/B,QAASoC,EACTnC,aAAc8C,EAAgBA,EAAcX,EAAE1D,MAAQuB,EAAamC,EAAE1D,MACrEyB,mBAAoBA,EACpBD,YAAaA,EACbH,gBAA8BmD,IAAlBH,GAAqC,IAAN1H,KAI/C,gBAAC2G,EAAA,EAAU,CACTC,MAAOkB,EAAkBjC,OACzBiB,SAAU,IAAM5B,EAAQ6B,GAAKA,EAAI,GACjCF,MAAOc,EAAiB9B,UCtFjB,SAASqC,EAAwB3G,GAC9C,MAAM,kBAAE4G,EAAF,MAAqBxC,GAAUpE,EAErC,OACE,0BAAQU,UAAU,sDAChB,sBAAIA,UAAU,oCAAoC0D,GAEjDwC,GCAQ,SAASC,EAAuB7G,GAC7C,MAAM,IAAEC,EAAF,SAAO6G,GAAa9G,EAE1B,OACE,gBAACyF,EAAA,EAAK,CAACC,QAAQ,SACZoB,EACC,gBAAC,mBAAgB,CACflG,eAAgB,YAAU,uDAC1BD,GAAG,sDACHE,OAAQ,CACNZ,IAAK,YAAU,iBAAkBA,GACjCJ,IACE,gBAAC,IAAI,CAACiF,GAAI,YAAqB,MAAmB,YAAU,qBAKlE,gBAAC,mBAAgB,CACflE,eAAgB,YAAU,iDAC1BD,GAAG,gDACHE,OAAQ,CACNZ,IAAK,YAAU,iBAAkBA,OCK9B,SAAS8G,EAA2B/G,GACjD,MAAM,SACJ8G,EADI,UAEJ5D,EAFI,QAGJd,EAHI,oBAIJ6D,EAJI,SAKJC,EALI,aAMJ7C,EANI,UAOJ2D,EAPI,cAQJb,EARI,YASJ7C,EATI,mBAUJC,EAVI,SAWJ0D,EAXI,4BAYJC,EAZI,gBAaJC,EAbI,sBAcJC,GACEpH,EAEEqH,EAAiBJ,GAAYA,EAASpH,IACtCyH,GAAkBlF,IAAY6E,EAC9BM,GAAgBnF,GAAW6E,IAAaA,EAASpH,IAEvD,OACE,gCACE,gBAAC8G,EAAuB,CACtBC,mBACGM,GACDG,GACE,uBAAK3G,UAAU,kCACb,gBAACyB,EAAA,EAAe,CAACzB,UAAU,eAAe0B,QAASc,IACnD,gBAAC,IAAM,CACLxC,UAAU,8BACVwB,UAAWqB,GAAsBL,EACjCgB,QAASlE,EAAMwH,oBACd,YAAU,oDAKnBpD,MACE,wBAAM1D,UAAU,eACd,uBACE+G,IAAI,GACJ/G,UAAU,eACVgH,OAAO,KACPC,IAAG,UAAK,uBAAL,2BAEJ,YAAU,4CAKhBvF,GAAW,qBAAG1B,UAAU,YAExB6G,GACC,gBAAC9B,EAAA,EAAK,CAACC,QAAQ,SACZoB,EACC,gBAAC,mBAAgB,CACflG,eAAgB,YAAU,gDAC1BD,GAAG,+CACHE,OAAQ,CACNZ,IAAK,YAAU,iBAAkB,IAAQ2H,OACzC/H,IACE,gBAAC,IAAI,CAACiF,GAAI,YAAqB,MAC5B,YAAU,qBAMnB,YAAU,2CAKfwC,GAAkB,gBAACT,EAAsB,CAAC5G,IAAK,IAAQ2H,MAAOd,WAAYA,KAEzE1E,GACA6E,GACAA,EAASpH,MACRqH,EACC,uBAAKxG,UAAU,+BACb,gBAACX,EAA4B,CAC3Bd,WAAYgI,EACZ1F,4BAA6BvB,EAAMuB,4BACnCrB,WAAYiH,EACZhH,iBAAkBiH,KAItB,gCACE,uBAAK1G,UAAU,sBACb,gBAACmH,EAAA,EAAS,CACR9F,SAAU/B,EAAM8H,SAChBC,YAAa,YAAU,6DAG3B,gBAAC5F,EAAA,EAAe,CAACC,QAASqE,QAAQO,IAChC,gBAAChB,EAAiB,CAChB9C,UAAWA,EACX+C,oBAAqBA,EACrBS,cAAe1G,EAAM0G,cACrBvB,mBAAoBnF,EAAMmF,mBAC1Be,SAAUA,EACV7C,aAAcA,EACd8C,cAAeA,EACf7C,YAAaA,EACbC,mBAAoBA,Q,urBC7GrB,MAAM,UAA2B,gBAG9C,YAAYvD,GACVgI,MAAMhI,GAHR,KAAAiI,SAAU,EAkCV,KAAAC,iBAAmBzI,UACjB0I,KAAKC,SAAS,CAAEhG,SAAS,IAEzB,MAAMiG,QAAmBF,KAAKG,2BAA2BlJ,MAAM,KAAM,GAErE,IAAI8G,EACAmC,IACFnC,QAAiBiC,KAAKI,sBAGxB,MAAM,aAAElF,GAAiB8E,KAAKK,MAE9B,IAAIC,EAEJ,GAAIvC,GAAYA,EAAS5B,OAAS,EAAG,CACnCmE,EAAmBvC,EAAS,GAAGpE,KAE/BqG,KAAKC,SAAS,EAAGnC,0BAAH,CACZA,oBAAoB,EAAD,GAAOA,EAAP,CAA4B,CAACwC,IAAmB,OAGrE,MAAMC,QAAcP,KAAKQ,uBAAuBF,GAChDpF,EAAaoF,GAAoBC,EAG/BP,KAAKF,SACPE,KAAKC,SAAS,EAAGnC,0BACXwC,IACFxC,EAAoBwC,IAAoB,GAGnC,CACLJ,aACAjG,SAAS,EACT6D,oBAAoB,EAAD,GAAOA,GAC1BC,WACA7C,mBAMR,KAAAkF,mBAAqB,KACnB,MAAM,SAAEtB,GAAakB,KAAKK,MAE1B,OAAKvB,GRhFwBhI,EQoFLgI,EAASzC,IRnF5B,YAAQ,4CAA6C,CAAEvF,eAAcG,MAC1EC,EAAA,IQkFsCE,KAAK,EAAG2G,cAAeA,GAHpD0C,QAAQC,aAAQvC,GRjFtB,IAA0BrH,GQuF/B,KAAA0J,uBAA0B3E,IACxB,MAAM,SAAEiD,GAAakB,KAAKK,MAE1B,OAAKvB,ERpFF,SACLhI,EACA+E,GAEA,OAAO,YAAQ,2CAA4C,CAAE/E,aAAY+E,gBAAe5E,MACtFC,EAAA,GQmFOyJ,CAAqB7B,EAASzC,IAAKR,GACvCzE,KAAK,EAAG8D,kBAAmBA,GAC3BjE,MAAM,IAAM,IALNwJ,QAAQC,QAAQ,KAQ3B,KAAAE,SAAW,KACT,MAAM,SAAEC,EAAF,OAAYC,GAAWd,KAAKnI,aAC3BgJ,EAASpD,MAAMG,SACtBkD,EAAOnJ,QAAQkJ,IAGjB,KAAAE,kBAAoBzJ,UAClB,GAAI0I,KAAKK,MAAMrC,cACb,OAGFgC,KAAKC,SAAS,EAAGnC,0BAAH,CACZA,oBAAoB,EAAD,GAAOA,EAAP,CAA4B,CAACkD,IAAa,OAG/D,MAAMC,QAAqBjB,KAAKQ,uBAAuBQ,GAEvDhB,KAAKC,SAAS,EAAGnC,sBAAqB5C,mBAAxB,CACZ4C,oBAAoB,EAAD,GAAOA,EAAP,CAA4B,CAACkD,IAAa,IAC7D9F,aAAa,EAAD,GAAOA,EAAP,CAAqB,CAAC8F,GAAaC,QAInD,KAAAC,yBAA2B5J,UACzB,MAAM,SAAEwH,GAAakB,KAAKK,MAE1B,IAAKvB,EACH,OAGF,GAA2B,IAAvB3D,EAAYgB,OAEd,YADA6D,KAAKC,SAAS,CAAEjC,mBAAeG,EAAWhD,iBAAagD,IAIzD6B,KAAKC,SAAS,CAAEpB,WAAW,IAE3B,MAAMsC,QRzHH,SACLrK,EACAqE,GAEA,OAAO,YAAQ,2CAA4C,CAAErE,aAAYqE,gBAAelE,MACtFC,EAAA,GQoHyCkK,CAAwBtC,EAASzC,IAAKlB,GAC5E/D,KAAK,EAAG8D,kBAAmBA,GAC3BjE,MAAM,IAAM,IAEX+I,KAAKF,SACPE,KAAKC,SAAS,CACZpB,WAAW,EACXb,cAAe,IAAQmD,EAAS,eAChChG,iBAKN,KAAAkG,uBAAyB/J,UACvB,MAAM,mBAAE8D,EAAF,SAAsB0D,GAAakB,KAAKK,MAE9C,IAAKvB,IAAa1D,EAChB,OAGF4E,KAAKC,SAAS,CAAElF,WAAW,IAE3B,MAAMuG,QRrIRxK,EQsIIgI,EAASzC,IRrIbR,EQsIIT,EAAmBS,YRrIvB0F,EQsIInG,EAAmBzB,KRpIhB,YAAS,6CAA8C,CAC5D7C,aACA+E,cACA0F,mBACCtK,MAAMC,EAAA,IQkIJE,KAAK,EAAG6D,aAAcA,GACtBhE,MAAM,QR5IN,IACLH,EACA+E,EACA0F,EQ2IMvB,KAAKF,UACPE,KAAKC,SAAS,CAAElF,WAAW,IACvBuG,GACFtB,KAAKnI,MAAM2J,gBAAgBF,EAAejF,OAKhD,KAAAoF,uBAA0BrG,IACxB4E,KAAKC,SAAS,CAAE7E,wBAGlB,KAAA+E,yBAA2B,KACzB,MAAM,SAAErB,GAAakB,KAAKK,MAE1B,OAAKvB,EAIE3H,EAAgC2H,EAASzC,KAAKjF,KAAK,EAAGC,YAAaA,GAHjEoJ,QAAQC,SAAQ,IAM3B,KAAAgB,gCAAkCpK,UAChC,MAAM,SAAEwH,GAAakB,KAAKK,MAE1B,GAAKvB,KAAY3G,EAAMgE,OAAS,GAAhC,CAIA6D,KAAKC,SAAS,CAAEjB,iBAAiB,EAAMC,uBAAuB,IAE9D,UACQpI,EAA0BiI,EAASzC,IAAKlE,GAC9C,MAAM+H,QAAmBF,KAAKG,2BAE1BH,KAAKF,UACPE,KAAKC,SAAS,CAAEjB,iBAAiB,EAAOkB,aAAYjB,uBAAwBiB,IAExEA,IACFF,KAAKY,WACLZ,KAAKD,qBAGT,MAAO7G,GACH8G,KAAKF,SACPE,KAAKC,SAAS,CAAEjB,iBAAiB,OA9MrCgB,KAAKK,MAAQ,CAGXvB,SAAUjH,EAAMiH,SAAS,GACzB/D,WAAW,EACXd,SAAS,EACT6D,oBAAqB,GACrB5C,aAAc,GACd+D,uBAAuB,GAI3B,oBACEe,KAAKF,SAAU,EACfE,KAAKD,mBAGP,mBAAmB4B,GACiB,IAA9BA,EAAU7C,SAAS3C,QAAgB6D,KAAKnI,MAAMiH,SAAS3C,OAAS,GAClE6D,KAAKC,SACH,CAAEnB,SAAyC,IAA/BkB,KAAKnI,MAAMiH,SAAS3C,OAAe6D,KAAKnI,MAAMiH,SAAS,QAAKX,GACxE,IAAM6B,KAAKD,oBAKjB,uBACEC,KAAKF,SAAU,EAwLjB,SACE,MAAM,SAAEnB,EAAF,gBAAYiD,EAAZ,SAA6Bf,GAAab,KAAKnI,OAC/C,UACJkD,EADI,QAEJd,EAFI,oBAGJ6D,EAHI,WAIJoC,EAJI,SAKJnC,EALI,aAMJ7C,EANI,UAOJ2D,EAPI,cAQJb,EARI,YASJ7C,EATI,mBAUJC,EAVI,SAWJ0D,EAXI,gBAYJE,EAZI,sBAaJC,GACEe,KAAKK,MAET,OACE,gBAAC,EAA0B,CACzB1B,SAAUA,EACV5D,UAAWA,EACXd,QAASA,GAAW2H,EACpB9D,oBAAqBA,EACrBuB,mBAAoBW,KAAKqB,uBACzB9C,cAAeyB,KAAKe,kBACpB3H,4BAA6B4G,KAAK0B,gCAClC/B,SAAUK,KAAKkB,yBACflE,mBAAoBgD,KAAKyB,uBACzB1D,SAAUA,EACV7C,aAAcA,EACd2D,UAAWA,EACXb,cAAeA,EACf7C,YAAaA,EACbC,mBAAoBA,EACpB0D,SAAUA,EACVC,6BAA8BmB,GAAc5B,QAAQuC,EAASpD,MAAMG,UACnEoB,gBAAiBA,EACjBC,sBAAuBA,K,wCClQhB,SAAS4C,EAAyBhK,GAC/C,MAAM,cACJiK,EADI,WAEJC,EAFI,YAGJC,EAHI,aAIJ9G,EAAe,GAJX,UAKJ2D,EALI,YAMJ1D,GACEtD,EAEJ,OAA4B,IAAxBqD,EAAaiB,QAAuC,IAAvBhB,EAAYgB,QAAiB0C,EAuB5D,uBAAKtG,UAAU,gDACb,gBAACmH,EAAA,EAAS,CACRnH,UAAU,SACV0B,QAAS4E,EACTnF,UAAW,EACXE,SAAU/B,EAAM8H,SAChBC,YAAa,YAAU,6CAGzB,2BAEyB,IAAxB1E,EAAaiB,OACZ,uBAAK5D,UAAU,UAAU,YAAU,eAEnC,yBAAOA,UAAU,0BACf,6BACG2C,EAAakB,IAAI6F,IAChB,6BAAI5F,IAAK4F,EAAWC,MAClB,0BACE,gBAACC,EAAA,EAAO,CAACC,QAASH,EAAWI,MAC3B,0BAAQ9J,UAAU,mDACf0J,EAAW3F,aACV,gBAAC,IAAI,CAACK,GAAI,YAAcsF,EAAW3F,eACjC,gBAACgG,EAAA,EAAa,CACZ/J,UAAU,eACVgK,UAAW,IAAmBC,UAE/BP,EAAWtI,MAGdsI,EAAWtI,OAIjB,2BACA,gBAACwI,EAAA,EAAO,CAACC,QAASH,EAAWjB,YAC3B,wBAAMzI,UAAU,8DACb0J,EAAWjB,cAIlB,0BACE,qBACEzI,UAAU,8CACVK,MAjFM6J,EAiFiBR,EAAWQ,UAjFTJ,EAiFoBJ,EAAWI,KAhFpE,yBAAN,OAAgCI,EAAhC,YAA6CJ,IAiF3BxJ,IAAI,sBACJC,OAAO,UACP,gBAACC,EAAA,EAAU,CAACR,UAAU,wBACrB,YAAU,mDAGd0J,EAAW3F,aACV,0BACE,wBAAM/D,UAAU,+DACd,gBAACgE,EAAA,EAAS,CAAChE,UAAU,sBAAsBmE,KAAM,KAChD,YAAU,mDAIf,sBAAInE,UAAU,cACZ,gBAAC,IAAM,CACLwB,SAAUuE,QAAQwD,GAClB/F,QAAS,KACPlE,EAAM6K,SAAST,EAAWI,QAE3B,YAAU,oCACVP,IAAkBG,EAAWI,MAC5B,gBAACrI,EAAA,EAAe,CAACzB,UAAU,mBAxGnD,IAA0BkK,EAAmBJ,MAkHvC,0BAAQ9J,UAAU,+BACfwJ,GACC,YACE,eACA,wBAAc7G,EAAaiB,OAAQ,MAAO,MAC1C,wBAAcjB,EAAaiB,OAAQ,MAAO,QAE5C4F,GACA,gBAAC,IAAM,CACLxJ,UAAU,cACVwB,SAAUiI,EAAW,YACX,YACVjG,QAASlE,EAAM8K,YACd,YAAU,cAGdX,GAAe,gBAAChI,EAAA,EAAe,CAACzB,UAAU,gDAlH7C,gBAAC+E,EAAA,EAAK,CAAC/E,UAAU,aAAagF,QAAQ,WACpC,gBAAC,mBAAgB,CACf9E,eAAgB,YAAU,wDAC1BD,GAAG,uDACHE,OAAQ,CACNC,KACE,gBAAC,IAAI,CACHgE,GAAI,CACFa,SAAU,mBACVC,MAAO,CAAEC,KAAMxD,EAAmB0I,eAAgBhF,SAAU,KAE7D,YAAU,oDC1B3B,SAASiF,EAAU/K,EAAcJ,EAAM,IACrC,OAAII,IAAQ,IAAQgL,gBACZ,GAAN,OAAUpL,EAAIC,QAAQ,MAAO,IAA7B,sCACSG,IAAQ,IAAQ8K,eAClB,2DACE9K,IAAQ,IAAQiL,OAClB,sEAGF,GAGM,MAAM,WAAgC,gBAGnD,YAAYlL,GACVgI,MAAMhI,GAHR,KAAAiI,SAAU,EAmDV,KAAAkD,qBAAwBC,IACtBjD,KAAKC,SAAS,CACZhI,SAAS,EACTjB,SAAUiM,EAAMnK,OAAOe,SAI3B,KAAAqJ,qBAAwBD,IACtBjD,KAAKC,SAAS,CACZhI,SAAS,EACTkL,SAAUF,EAAMnK,OAAOe,SAI3B,KAAAuJ,aAAe9L,UACb,MAAM,SAAE6L,EAAF,SAAYnM,GAAagJ,KAAKK,OAElCvJ,YAAY,IAAEuF,IACZ2D,KAAKnI,MAGT,GADAqB,EAAEC,iBACEgK,EAAU,CACZnD,KAAKC,SAAS,CAAElI,YAAY,UAEtBlB,EAA0BwF,EAAK8G,EAAUnM,GAAUC,MAAM,QAI/D,MAAM,OAAEI,EAAF,MAAUG,SAAgBL,EAAgCkF,GAC7DjF,KAAK,EAAGC,SAAQG,YAAX,CAA0BH,SAAQG,WACvCP,MAAM,MAASI,QAAQ,EAAOG,MAAO,YAAU,4BAE9CwI,KAAKF,SAAWzI,GAElB2I,KAAKC,SAAS,CACZoD,aAAa,EACbpL,SAAS,EACTkL,SAAU,GACVpL,YAAY,EACZf,SAAU,GACVgB,kBAAkB,IAEpBgI,KAAKnI,MAAMyL,gCACFtD,KAAKF,SACdE,KAAKC,SAAS,CACZlI,YAAY,EACZE,SAAS,EACTD,kBAAkB,EAClBuL,uBAAwB/L,MA9F9BwI,KAAKK,MAAQ,CACXgD,aAAa,EACbpL,SAAS,EACTkL,SAAU,GACVpL,YAAY,EACZC,kBAAkB,GAItB,0BACE,MACElB,YAAY,IAAEuF,GADV,SAEJuB,GACEoC,KAAKnI,MAIT,GAHAmI,KAAKF,SAAU,GAGVlC,EAAU,CACboC,KAAKC,SAAS,CAAEoD,aAAa,IAC7B,MAAM,WAAEnD,EAAF,MAAc1I,SAAgBL,EAAgCkF,GACjEjF,KAAK,EAAGC,SAAQG,YAAX,CAA0B0I,WAAY7I,EAAQG,WACnDP,MAAM,MAASiJ,WAAY7I,OAAQG,MAAO,YAAU,4BACnD0I,GACFF,KAAKnI,MAAMyL,+BAETtD,KAAKF,UAEHtI,IAAK,qCAAmC6E,EAAnC,gBACP2D,KAAKC,SAAS,CACZoD,aAAa,IAGfrD,KAAKC,SAAS,CACZoD,aAAa,EACbrL,kBAAkB,EAClBuL,uBAAwB/L,MAOlC,uBACEwI,KAAKF,SAAU,EAyDjB,SACE,MACEhJ,YAAY,IAAEgB,EAAF,IAAOJ,IACjBsI,KAAKnI,OACH,YACJwL,EADI,WAEJtL,EAFI,QAGJE,EAHI,SAIJkL,EAJI,SAKJnM,EALI,iBAMJgB,EANI,uBAOJuL,GACEvD,KAAKK,MAET,GAAIgD,EACF,OAAO,gBAACrJ,EAAA,EAAe,CAACzB,UAAU,cAAc0B,SAAS,IAG3D,MAAMuJ,EAAuB1L,IAAQ,IAAQ8K,eAAiB,kBAAoB,GAE5EvK,EAAYL,IAAqBC,EACjCwL,EAAYnF,QAAQ6E,KAAcrL,IAAQ,IAAQ8K,gBAAkBtE,QAAQtH,IAC5E0M,EAAsBrL,GAAaN,IAAe0L,EAElDnL,EACJiL,UAA0B,YAAU,0CAA2CzL,GAEjF,OACE,uBAAKS,UAAU,sBACb,wBAAMA,UAAU,WAAWU,SAAU+G,KAAKoD,cACxC,sBAAI7K,UAAU,OAAO,YAAU,2CAA4CT,IAC3E,qBAAGS,UAAU,oCACV,YAAU,0CAA2CT,IAGvDA,IAAQ,IAAQ8K,gBACf,gBAACvJ,EAAA,EAAe,CACd7B,WAAO2G,EACP3F,GAAG,4BACHH,WAAW,EACXiB,SAAS,EACTC,MAAO,YAAU,4CACjBC,UAAU,GACV,yBACEC,WAAW,EACXlB,UAAW,EAAW,oBAAqB,CACzC,aAAcF,IAEhBG,GAAG,WACHkB,UAAW,EACXC,KAAK,WACLE,MAAO7C,EACP4C,SAAUoG,KAAKgD,qBACflJ,KAAK,UAKX,gBAACT,EAAA,EAAe,CACd7B,MAAOc,EACPE,GAAG,mCACHH,WAAW,EACXiB,SAAS,EACTC,MAAO,YAAU,sCAAD,OAAuCiK,IACvDhK,UAAU,GACV,yBACEC,UAAW3B,IAAQ,IAAQ8K,eAC3BrK,UAAW,EAAW,oBAAqB,CACzC,aAAcF,IAEhBG,GAAG,wBACHkB,UAAW,EACXG,MAAOsJ,EACPvJ,SAAUoG,KAAKkD,qBACfpJ,KAAK,UAIT,gBAACT,EAAA,EAAe,CACd7B,MAAOc,EACPE,GAAG,+BACHH,UAAWA,EACXiB,SAAS,EACTC,MAAO,MACP,gBAAC,IAAY,CAACQ,SAAU2J,GAAsB,YAAU,SACxD,gBAAC1J,EAAA,EAAe,CAACzB,UAAU,cAAc0B,QAASlC,MAItD,gBAACuF,EAAA,EAAK,CAAC/E,UAAU,2BAA2BoL,QAAQ,QAAQpG,QAAQ,QACjEzF,IAAQ,IAAQ8K,gBACf,gCACE,0BACG,YACC,kFAGJ,qBAAGrK,UAAU,oCACV,YACC,4EAIJ,uBAAKA,UAAU,iCACb,uBACE+G,IAAI,GACJ/G,UAAU,eACVgH,OAAO,KACPC,IAAG,UAAK,uBAAL,uBAAgC,IAAQsD,gBAAxC,UAEL,qBACElK,KAAK,0CACLC,IAAI,sBACJC,OAAO,UACN,YACC,mFAOV,0BAAK,YAAU,qCAAD,OAAsC0K,EAAtC,YAEd,qBAAGjL,UAAU,oCACX,gBAAC,mBAAgB,CACfC,GAAG,kDACHC,eAAgB,YAAU,qCAAD,OACc+K,EADd,kBAGzB9K,OAAQ,CAAEZ,IAAK,YAAU,iBAAkBA,QAI7CJ,GAAOI,IAAQ,IAAQ8K,iBACvB,uBAAKrK,UAAU,eACb,uBACE+G,IAAI,GACJ/G,UAAU,eACVgH,OAAO,KACPC,IAAG,UAAK,uBAAL,uBACD1H,IAAQ,IAAQ8K,eAAiB,IAAQE,gBAAkBhL,EAD1D,UAIL,qBAAGc,KAAMiK,EAAU/K,EAAKJ,GAAMmB,IAAI,sBAAsBC,OAAO,UAC5D,YAAU,qCAAD,OAAsC0K,EAAtC,YAKhB,qBAAGjL,UAAU,oCACV,YAAU,mDAAoDT,IAGjE,0BACGA,IAAQ,IAAQgL,iBACf,0BACE,gBAAC,mBAAgB,CACfrK,eAAgB,YACd,8DAEFD,GAAG,6DACHE,OAAQ,CACNkL,KACE,8BACG,YAAU,4DAOrB9L,IAAQ,IAAQgL,iBAAmBhL,IAAQ,IAAQ8K,iBACnD,0BACE,gBAAC,mBAAgB,CACfnK,eAAgB,YACd,2DAEFD,GAAG,0DACHE,OAAQ,CACNkL,KACE,8BACG,YAAU,2DAQtB9L,IAAQ,IAAQiL,QACf,sBAAIxK,UAAU,iBACZ,8BACG,YAAU,uEC1Td,SAASsL,GACtBhM,GAEA,MAAM,cACJiK,EADI,WAEJC,EAFI,SAGJjD,EAHI,SAIJH,EAJI,QAKJ1E,EALI,YAMJ+H,EANI,aAOJ9G,EAPI,SAQJ0C,EARI,UASJiB,EATI,YAUJ1D,EAVI,4BAWJ4D,GACElH,EAEJ,OACE,gCACE,gBAAC2G,EAAuB,CACtBvC,MACE,wBAAM1D,UAAU,eACd,uBACE+G,IAAI,GACJ/G,UAAU,eACVgH,OAAO,KACPC,IAAG,UAAK,uBAAL,+BAEJ,YAAU,qDAIhBvF,GAAW,qBAAG1B,UAAU,aAEvB0B,IAAY6E,GACZ,gBAACJ,EAAsB,CAAC5G,IAAK,IAAQ8K,eAAgBjE,WAAYA,KAGjE1E,GACA6E,IACCC,EACC,gBAAC,GAAuB,CACtBjI,WAAYgI,EACZlB,SAAUA,EACV0F,6BAA8BzL,EAAMyL,+BAGtC,gBAACzB,EAAwB,CACvBC,cAAeA,EACfC,WAAYA,EACZC,YAAaA,EACb7G,YAAaA,EACb0D,UAAWA,EACX6D,SAAU7K,EAAM6K,SAChB/C,SAAU9H,EAAM8H,SAChBgD,WAAY9K,EAAM8K,WAClBzH,aAAcA,MCpDX,MAAM,WAAoC,gBAGvD,YAAYrD,GACVgI,MAAMhI,GAHR,KAAAiI,SAAU,EA6BV,KAAAgE,iCAAmCxM,UACjC0I,KAAKC,SAAS,CAAElB,6BAA6B,IAC7CiB,KAAKY,WACLZ,KAAKC,SAAS,CAAEhG,SAAS,UACnB+F,KAAK+D,YACX/D,KAAKC,SAAS,CAAEhG,SAAS,KAG3B,KAAA2G,SAAW,KACT,MAAM,SAAEC,EAAF,OAAYC,GAAWd,KAAKnI,aAC3BgJ,EAASpD,MAAMG,SACtBkD,EAAOnJ,QAAQkJ,IAiCjB,KAAAmD,YAAc,KACRhE,KAAKF,SACPE,KAAKC,SAAS,CACZgE,eAAgB,CAAEC,UAAW,EAAGC,SA9ES,IA+EzCjJ,aAAc,GACd0C,UAAU,EACVmB,6BAA6B,KAOnC,KAAAqF,aAAgBjJ,IACd6E,KAAKC,SACH,CACEpB,WAAW,EACXoF,eAAgB,CAAEC,UAAW,EAAGC,SA5FS,IA6FzChJ,eAEF7D,gBACQ0I,KAAK+D,YACP/D,KAAKF,SACPE,KAAKC,SAAS,CAAEpB,WAAW,OAMnC,KAAAwF,eAAiB,KACfrE,KAAKC,SACHI,IAAK,CACH2B,aAAa,EACbiC,eAAgB,CACdC,UAAW7D,EAAM4D,eAAeC,UAAY,EAC5CC,SAAU9D,EAAM4D,eAAeE,YAGnC7M,gBACQ0I,KAAK+D,WAAU,GACjB/D,KAAKF,SACPE,KAAKC,SAAS,CAAE+B,aAAa,OAMrC,KAAAsC,aAAehN,UACb,MAAM,SAAEwH,GAAakB,KAAKK,MAE1B,IAAKvB,EACH,OAGFkB,KAAKC,SAAS,CAAE6B,cAAeyC,IAE/B,MAAMC,QZvBH,SACL1N,EACAyN,GAEA,OAAO,YAAS,mDAAoD,CAClEzN,aACAyN,mBACCtN,MAAMC,EAAA,GYgBcuN,CAA+B3F,EAASzC,IAAKkI,GAAgBtN,MAChF,QAGE+I,KAAKF,UACPE,KAAKC,SAAS,CAAE6B,mBAAe3D,IAE3BqG,GACFxE,KAAKnI,MAAM2J,gBAAgBgD,EAAOvJ,QAAQoB,OArI9C2D,KAAKK,MAAQ,CAGXpG,SAAS,EACT+H,aAAa,EACbpE,UAAU,EACVqG,eAAgB,CAAEC,UAAW,EAAGC,SAZW,IAa3CjJ,aAAc,GACd2D,WAAW,EACX1D,YAAa,GACb2D,SAAUjH,EAAMiH,SAAS,GACzBC,6BAA6B,GAIjC,oBACEiB,KAAKF,SAAU,EAGjB,mBAAmB6B,GACiB,IAA9BA,EAAU7C,SAAS3C,QAAgB6D,KAAKnI,MAAMiH,SAAS3C,OAAS,GAClE6D,KAAKC,SAAS,CAAEnB,SAAUkB,KAAKnI,MAAMiH,SAAS,IAAM,IAAMkB,KAAK+D,aAkBnE,gBAAgBW,GAAO,GACrB,MAAM,SACJ5F,EADI,YAEJ3D,EACA8I,gBAAgB,UAAEC,EAAF,SAAaC,GAHzB,4BAIJpF,GACEiB,KAAKK,MACT,GAAIvB,IAAaC,EAA6B,CAC5C,MAAM,WAAEgD,EAAF,aAAc7G,SZkCnB,SACLpE,EACAyK,EACA4C,EACA5I,GAKA,OAAO,YAAQ,oDAAqD,CAClEzE,aACAyK,iBACAlE,EAAG9B,EACHoJ,GAAIR,IY/CyCS,CACzC9F,EAASzC,IACTlB,EACAgJ,EACAD,GACAjN,MAAM,KACN+I,KAAKgE,cACE,CAAEjC,gBAAY5D,EAAWjD,kBAAciD,KAE5C6B,KAAKF,cAA0B3B,IAAf4D,QAA6C5D,IAAjBjD,IAC1CwJ,EACF1E,KAAKC,SAASI,IAAK,CACjB0B,aACA7G,aAAc,IAAImF,EAAMnF,gBAAiBA,MAG3C8E,KAAKC,SAAS,CAAE8B,aAAY7G,mBA2EpC,SACE,MAAM,SAAEyD,EAAF,gBAAYiD,EAAZ,SAA6Bf,GAAab,KAAKnI,OAC/C,cACJiK,EADI,WAEJC,GAAa,EAFT,SAGJjD,EAHI,QAIJ7E,EAJI,YAKJ+H,EALI,aAMJ9G,EANI,4BAOJ6D,EAPI,SAQJnB,EARI,UASJiB,EATI,YAUJ1D,GACE6E,KAAKK,MACT,OACE,gBAACwD,GAAmC,CAClC/B,cAAeA,EACfC,WAAYA,EACZjD,SAAUA,EACVH,SAAUA,EACVqD,YAAaA,EACb/H,QAASA,GAAW2H,EACpBc,SAAU1C,KAAKsE,aACf3B,WAAY3C,KAAKqE,eACjBf,6BAA8BtD,KAAK8D,iCACnCnE,SAAUK,KAAKoE,aACflJ,aAAcA,EACd2D,UAAWA,EACX1D,YAAaA,EACbyC,SAAUA,GAAYU,QAAQuC,EAASpD,MAAMG,UAC7CmB,4BACEA,GAA+BT,QAAQuC,EAASpD,MAAMG,a,8CCrLjD,SAASiH,GAA0BhN,G,MAChD,MAAM,oBACJiN,EADI,KAEJzJ,EAFI,QAGJJ,EAHI,aAIJC,EAJI,mBAKJE,EALI,uBAMJ2J,GACElN,EAEEmN,EAAkB9J,EAAaiB,OAE/BF,EAAqB,QAAhB,EAAGhB,aAAO,EAAPA,EAAStB,YAAI,QAAI,YAAU,kBAEzC,OACE,gBAACmC,EAAA,EAAmB,CAClBvD,UAAW,EAAW,oBAAqB,CACzC8C,OACA,iBAAkBxD,EAAMkE,QACxB,YAAalE,EAAMkE,UAErBA,QACElE,EAAMkE,QACFlE,EAAMkE,QACN,OAINV,KAAMA,EACNY,MAAO,0BAAKA,IACXZ,GACC,gCACE,uBAAK9C,UAAU,qBACQ,IAApByM,GACC,gBAAC1H,EAAA,EAAK,CAACC,QAAQ,WACb,gBAAC,mBAAgB,CACf9E,eAAgB,YAAU,0CAC1BD,GAAG,yCACHE,OAAQ,CACNC,KACE,gBAAC,IAAI,CACHgE,GAAI,CACFa,SAAU,mBACVC,MAAO,CAAEC,KAAMxD,EAAmB4I,gBAAiBlF,SAAU,KAE9D,YAAU,oDAQtB1C,EAAakB,IAAIR,GAChBA,EAAKU,aACH,uBACE/D,UAAU,+EACV8D,IAAKT,EAAKpD,IACV,gBAAC+D,EAAA,EAAS,CAAChE,UAAU,eAAeiE,KAAM,SAAOC,MAAOC,KAAM,KAC9D,uBAAKnE,UAAU,mBACb,uBAAKA,UAAU,sCACb,0BAAQ0D,MAAOL,EAAKjC,MAClB,gBAAC,IAAI,CAACgD,GAAI,YAAcf,EAAKU,eAAgBV,EAAKjC,QAGtD,0BAAK,YAAU,oDAInB,gBAACkD,EAAA,EAAK,CACJC,SAAS1B,aAAkB,EAAlBA,EAAoB5C,MAAOoD,EAAKpD,GACzCD,UAAW,EACT,+FACA,CACEwB,SAAU+K,EACV,aAAcA,EACd,oBAAqBA,IAGzBzI,IAAKT,EAAKpD,GACVuE,QAAS,IAAMlF,EAAMmF,mBAAmBpB,GACxC/B,MAAOoL,OAAOrJ,EAAKpD,KACnB,0BAAQD,UAAU,gBAAgB0D,MAAOL,EAAKjC,MAC3CiC,EAAKjC,UAOdoL,GAA0BC,EAAkB,GAC5C,gBAAC1H,EAAA,EAAK,CAACC,QAAQ,WACZ,YACC,uDACAyH,MCpGD,SAASE,GAAsBrN,GAC5C,MAAM,oBAAEiN,EAAF,SAAuB/G,EAAvB,oBAAiCoH,EAAjC,mBAAsD/J,GAAuBvD,GAE5EuN,EAAiBC,GAAsB,WAC5CtH,EAAS5B,OAAS,EAAI,CAAC4B,EAAS,GAAG1B,KAAO,IAGtCiJ,EAAiBvH,EAAS5B,QAAUiJ,EAAgBjJ,OAQ1D,OACE,gCACE,uBAAK5D,UAAU,iCACb,gBAAC,IAAU,CACTA,UAAU,aACVwD,QAAS,IAAMsJ,EAAmBC,EAAiB,GAAKvH,EAAS3B,IAAIiB,GAAKA,EAAEhB,OAC3EiJ,EAAiB,YAAU,gBAAkB,YAAU,gBAI3DvH,EAAS3B,IAAInB,IACZ,MAAMsK,EAASH,EAAgB5K,SAASS,EAAQoB,MAC1C,SAAEmJ,EAAF,aAAYtK,EAAe,IAAOiK,EAAoBlK,EAAQoB,MAAQ,GAE5E,OACE,gBAACwI,GAAyB,CACxBC,oBAAqBA,EACrBzI,IAAKpB,EAAQoB,IACbN,QAAS,IAxBC,EAACwJ,EAAiBvE,KACpCqE,EACEE,EAAS,KAAQH,EAAiBpE,GAAc,KAAK,IAAIoE,EAAiBpE,MAsBrDyE,CAAYF,EAAQtK,EAAQoB,KAC3CW,mBAAoBnF,EAAMmF,mBAC1B3B,KAAMkK,EACNtK,QAASA,EACTC,aAAcA,EACdE,mBAAoBA,EACpB2J,uBAAwBS,OC1CrB,SAASE,GAAuB7N,GAC7C,MAAM,oBACJiN,EADI,SAEJ/G,EAFI,UAGJc,EAHI,cAIJb,EAAgB,GAJZ,mBAKJ5C,GACEvD,EAEJ,GAA6B,IAAzBmG,EAAc7B,SAAiB0C,EACjC,OACE,gBAACvB,EAAA,EAAK,CAAC/E,UAAU,iBAAiBgF,QAAQ,WACvC,YAAU,kDAKjB,MAAMU,EAAmBF,EAASG,OAAOb,GAAKW,EAAc2H,KAAKC,GAAKA,EAAE5E,aAAe3D,EAAEhB,MACnFwJ,EAAsB5H,EAAiB7B,IAAIiB,GAAKA,EAAEhB,KAClDyJ,EAAwB9H,EAAcE,OAC1C0H,IAAMC,EAAoBrL,SAASoL,EAAE5E,aAGvC,OACE,uBAAKzI,UAAU,kBACb,gBAACyB,EAAA,EAAe,CAACC,QAAS4E,GACvBiH,EAAsB3J,OAAS,GAC9B,gBAAC0I,GAAyB,CACxBC,oBAAqBA,EACrB9H,mBAAoBnF,EAAMmF,mBAC1B3B,MAAM,EACNH,aAAc4K,EACd1K,mBAAoBA,EACpB2J,wBAAwB,IAI3B9G,EAAiB7B,IAAInB,IACpB,MAAMC,EAAe8C,EAAcE,OAAO0H,GAAKA,EAAE5E,aAAe/F,EAAQoB,KAExE,OACE,gBAACwI,GAAyB,CACxBC,oBAAqBA,EACrBzI,IAAKpB,EAAQoB,IACbW,mBAAoBnF,EAAMmF,mBAC1B3B,MAAM,EACNJ,QAASA,EACTC,aAAcA,EACdE,mBAAoBA,EACpB2J,wBAAwB,QCvCvB,SAASgB,GAA8BlO,GACpD,MAAM,oBACJiN,EADI,SAEJ/G,EAAW,GAFP,oBAGJoH,EAAsB,GAHlB,cAIJnH,EAJI,UAKJa,EALI,mBAMJzD,GACEvD,EAEJ,OAAwB,IAApBkG,EAAS5B,OAET,gBAACmB,EAAA,EAAK,CAAC/E,UAAU,aAAagF,QAAQ,WACpC,gBAAC,mBAAgB,CACf9E,eAAgB,YAAU,6CAC1BD,GAAG,4CACHE,OAAQ,CACNC,KACE,gBAAC,IAAI,CACHgE,GAAI,CACFa,SAAU,mBACVC,MAAO,CAAEC,KAAMxD,EAAmB4I,gBAAiBlF,SAAU,KAE9D,YAAU,oDAUvB,uBAAKrF,UAAU,6BACb,gBAACmH,EAAA,EAAS,CACR9F,SAAU/B,EAAM8H,SAChBC,YAAa,YAAU,2DAGxBf,GAAab,EACZ,gBAAC0H,GAAsB,CACrBZ,oBAAqBA,EACrB9H,mBAAoBnF,EAAMmF,mBAC1Be,SAAUA,EACVC,cAAeA,EACfa,UAAWA,EACXzD,mBAAoBA,IAGtB,gBAAC8J,GAAqB,CACpBJ,oBAAqBA,EACrB9H,mBAAoBnF,EAAMmF,mBAC1BmI,oBAAqBA,EACrBpH,SAAUA,EACV3C,mBAAoBA,KC9Cf,SAAS4K,GAA+BnO,GACrD,MAAM,iBACJoO,EADI,SAEJtH,EAFI,UAGJ5D,EAHI,QAIJd,EAJI,SAKJ8D,EALI,oBAMJoH,EANI,mBAOJ/J,EAPI,UAQJyD,EARI,cASJb,EATI,4BAUJe,EAVI,SAWJnB,GACE/F,EAEJ,OACE,gCACE,gBAAC2G,EAAuB,CACtBC,mBACGM,GACC,uBAAKxG,UAAU,kCACb,gBAACyB,EAAA,EAAe,CAACzB,UAAU,eAAe0B,QAASc,IACnD,gBAAC,IAAM,CACLxC,UAAU,8BACVwB,UAAWqB,GAAsBL,EACjCgB,QAASlE,EAAMwH,oBACd,YAAU,oDAKnBpD,MACE,wBAAM1D,UAAU,eACd,uBACE+G,IAAI,GACJ/G,UAAU,eACVgH,OAAO,KACPC,IAAG,UAAK,uBAAL,+BAEJ,YAAU,yCAKhBvF,GAAW,qBAAG1B,UAAU,aAEvB0B,IAAYgM,GACZ,gBAACvH,EAAsB,CAAC5G,IAAK,IAAQgL,gBAAiBnE,WAAYA,KAGlE1E,GACAgM,IACClH,EACC,gBAAC,GAAuB,CACtBjI,WAAYmP,EACZ3C,6BAA8BzL,EAAMyL,6BACpC1F,SAAUA,IAGZ,gBAACmI,GAA6B,CAC5BjB,oBAAqB/J,EACrB4E,SAAU9H,EAAM8H,SAChB3C,mBAAoBnF,EAAMmF,mBAC1BmI,oBAAqBA,EACrBpH,SAAUA,EACVC,cAAeA,EACfa,UAAWA,EACXzD,mBAAoBA,M,wVCjEjB,MAAM,WAA+B,gBAGlD,YAAYvD,GACVgI,MAAMhI,GAHR,KAAAiI,SAAU,EA+BV,KAAAC,iBAAmBzI,UACjB,MAAM,4BAAEyH,GAAgCiB,KAAKK,MAE7C,IAAKtB,EAA6B,CAChCiB,KAAKC,SAAS,CAAEhG,SAAS,IACzB,MAAM8D,QAAiBiC,KAAKkG,yBAAyBjP,MAAM,QAE3D,IAAIkO,EACApH,GAAYA,EAAS5B,OAAS,IAChCgJ,QAA4BnF,KAAKmG,2BAA2BpI,GAAU9G,MACpE,SAIA+I,KAAKF,SACPE,KAAKC,SAAS,CACZlC,WACAoH,sBACAlL,SAAS,MAMjB,KAAAiM,uBAAyB,KACvB,MAAM,iBAAED,GAAqBjG,KAAKK,MAElC,OAAK4F,GlBpBPnP,EkBwBoCmP,EAAiB5J,IlBtB9C,YAAQ,sDAAuD,CAAEvF,gBkBsBdM,KAAK,EAAG2G,cAAeA,GAHtE0C,QAAQC,aAAQvC,GlBtBtB,IACLrH,GkB2BA,KAAAqP,2BACEpI,IAEA,MAAM,iBAAEkI,GAAqBjG,KAAKK,MAElC,OAAK4F,EAIExF,QAAQ2F,IACbrI,EAAS3B,IAAIiB,IACX,OlBhCNvG,EkBgC4CmP,EAAiB5J,IlB/B7DR,EkB+BkEwB,EAAE1D,KlB1B7D,YAAQ,qDAAsD,CACnE7C,aACA+E,iBkBwBwEzE,KAClE,EAAG2K,aAAY7G,mBAMb,MAAMmL,EAAuBnL,EAAagD,OAAO0H,GAAKA,EAAE5E,aAAe3D,EAAEhB,KAazE,MAAO,CACLnB,aAAcmL,EACdtE,WAJAA,GAAcsE,EAAqBlK,OCjIZ,GDsIvB6E,WAAY3D,EAAEhB,OlBxDrB,IACLvF,EACA+E,KkB2DIzE,KAAK+J,GACEA,EAAQmF,OACb,CAACC,GAAqCxE,aAAYf,aAAY9F,kB,kWACrD,IAAKqL,EAAZ,CAAiB,CAACvF,GAAa,CAAEwE,SAAUzD,EAAY7G,kBAEzD,KAtCKuF,QAAQC,aAAQvC,IA2C3B,KAAAyC,SAAW,KACT,MAAM,SAAEC,EAAF,OAAYC,GAAWd,KAAKnI,aAC3BgJ,EAASpD,MAAMG,SACtBkD,EAAOnJ,QAAQkJ,IAGjB,KAAAiD,iCAAmCxM,UACjC0I,KAAKC,SAAS,CAAElB,6BAA6B,IAC7CiB,KAAKY,iBACCZ,KAAKD,oBAGb,KAAAsB,uBAAyB,KACvB,MAAM,iBAAE4E,EAAF,mBAAoB7K,GAAuB4E,KAAKK,MlBvEnD,IACLvJ,EACAkK,EACAuD,EkBsEO0B,GAAqB7K,IAI1B4E,KAAKC,SAAS,CAAElF,WAAW,KlB5E7BjE,EkB8EImP,EAAiB5J,IlB7ErB2E,EkB8EI5F,EAAmB4F,WlB7EvBuD,EkB8EInJ,EAAmBiH,KlB5EhB,YAAS,uDAAwD,CACtEvL,aACAkK,aACAuD,mBACCtN,MAAMC,EAAA,IkB0EJE,KAAK,EAAG6D,SAAWoB,WACd2D,KAAKF,UACPE,KAAKC,SAAS,CAAElF,WAAW,IAC3BiF,KAAKnI,MAAM2J,gBAAgBnF,MAG9BpF,MAAM,KACD+I,KAAKF,SACPE,KAAKC,SAAS,CAAElF,WAAW,QAKnC,KAAAqJ,aAAgB3G,IACd,MAAM,iBAAEwI,GAAqBjG,KAAKK,MlBrF/B,IACLvJ,EACAyK,EkBqFO0E,IAIAxI,GAKLuC,KAAKC,SAAS,CAAEpB,WAAW,EAAMzD,wBAAoB+C,KlB/FvDrH,EkBgGuCmP,EAAiB5J,IlB/FxDkF,EkB+F6D9D,ElB1FtD,YAAQ,qDAAsD,CACnE3G,aACAyK,oBkByFGnK,KAAK,EAAG8D,mBACH8E,KAAKF,SACPE,KAAKC,SAAS,CAAEpB,WAAW,EAAOb,cAAe9C,MAGpDjE,MAAM,KACD+I,KAAKF,SACPE,KAAKC,SAAS,CAAEpB,WAAW,OAb/BmB,KAAKC,SAAS,CAAEpB,WAAW,EAAOb,mBAAeG,EAAW/C,wBAAoB+C,MAkBpF,KAAAsD,uBAA0BrG,IACxB4E,KAAKC,SAAS,CAAE7E,wBA/KhB4E,KAAKK,MAAQ,CAGX4F,iBAAkBpO,EAAM2O,kBAAkB,GAC1CzL,WAAW,EACXd,SAAS,EACT4E,WAAW,EACXE,6BAA6B,GAIjC,oBACEiB,KAAKF,SAAU,EAGjB,mBAAmB6B,GAC0B,IAAvCA,EAAU6E,kBAAkBrK,QAAgB6D,KAAKnI,MAAM2O,kBAAkBrK,OAAS,GACpF6D,KAAKC,SAAS,CAAEgG,iBAAkBjG,KAAKnI,MAAM2O,kBAAkB,IAAM,IACnExG,KAAKD,oBAKX,uBACEC,KAAKF,SAAU,EA0JjB,SACE,MAAM,SAAEnB,EAAF,gBAAYiD,EAAZ,SAA6Bf,GAAab,KAAKnI,OAC/C,iBACJoO,EADI,UAEJlL,EAFI,QAGJd,EAHI,oBAIJkL,EAJI,SAKJpH,EALI,UAMJc,EANI,cAOJb,EAPI,mBAQJ5C,EARI,4BASJ2D,GACEiB,KAAKK,MAET,OACE,gBAAC,GAA8B,CAC7B4F,iBAAkBA,EAClBtH,SAAUA,EACV5D,UAAWA,EACXd,QAASA,GAAW2H,EACpBvC,mBAAoBW,KAAKqB,uBACzBiC,6BAA8BtD,KAAK8D,iCACnCnE,SAAUK,KAAKoE,aACfpH,mBAAoBgD,KAAKyB,uBACzB0D,oBAAqBA,EACrBpH,SAAUA,EACVH,SAAUU,QAAQuC,EAASpD,MAAMG,UACjCI,cAAeA,EACfa,UAAWA,EACXzD,mBAAoBA,EACpB2D,4BACEA,GAA+BT,QAAQuC,EAASpD,MAAMG,a,cErOhE,SAAS6I,GACP5O,EACAC,EACA4F,EACAgJ,GAAO,GAEP,MAAM,UACJC,EACAC,UAAU,SAAEjI,GAFR,gBAGJiD,GACE/J,EAEEgP,EAAwBF,EAAU,IAAQ/D,gBAAkB,EAC5DkE,EAAoBhP,IAAQ,IAAQgL,gBAEpC5F,EAAQ4J,EACVH,EAAU,IAAQ7D,iBAAmB6D,EAAU,IAAQ/D,gBACvD+D,EAAU7O,GACRiP,EAAY7J,EAAQ,EACpB8J,EAAmB9J,EAAQ,EAC3BnD,EAAW6H,GAAmBoF,IAAsBD,IAAcpI,EAgBxE,IAAIrG,EAAe,GAanB,OAXI0O,EACF1O,EAAe,YACb,qDACA,YAAU,MAAOR,IAETiP,IACVzO,EAAeqG,EACX,YAAU,sDACV,YAAU,iDAId,uBAAKpG,UAAU,uBACb,0BACEA,UAAW,EACT,sEACA,CAAEwB,WAAU,oBAAqB2M,IAEnC3M,SAAUA,EACVgC,QAnCU,IACViL,IAAsBD,IAAcpI,EAC/B,MAGJoI,GAAapI,EACT9G,EAAMoP,aAAanP,GAGrBD,EAAMqP,aACXJ,GAAqBD,EAAwB3M,EAAmB0I,eAAiBlF,GA0B/E5D,KAAK,UACL,uBACEwF,IAAI,GACJC,OA/DgB,GAgEhBC,IAAG,UAAK,uBAAL,uBAAgC1H,EAAhC,UAEL,uBAAKS,UAAU,2DACZ,YAAU,0CAA2CT,IAGvD8J,GACC,4BACG,YAAU,iDACX,qBAAGrJ,UAAU,iCAIfqJ,GAAmBtJ,GACnB,qBAAGC,UAAU,8BAA8B4O,MAAO,CAAEC,WAAY,MAC7D9O,KAkDE,cAAA+O,EAAA,IA1CR,SAAoCxP,GACzC,MACE+O,UAAU,SAAEjI,GADR,UAEJgI,GACE9O,EACEyP,EAAgBC,OAAO7O,OAAOiO,GAAWL,OAAO,CAACkB,EAAMC,IAAQD,EAAOC,GAE5E,OACE,gCACE,sBAAIlP,UAAU,sCACX,YAAU,4CAGb,yBAAI,YAAU,4DACK,IAAlB+O,GAAuB3I,GACtB,qBAAGpG,UAAU,cACV,YAAU,6DAGf,uBAAKA,UAAU,yDACZkO,GAAgB5O,EAAO,IAAQ4H,MAAOvF,EAAmByD,aACzD8I,GAAgB5O,EAAO,IAAQiL,gBAAiB5I,EAAmB4I,iBACnE2D,GAAgB5O,EAAO,IAAQ6P,OAAQxN,EAAmBwN,QAC1DjB,GAAgB5O,EAAO,IAAQkL,OAAQ7I,EAAmB6I,QAAQ,IAGrE,qBAAGxK,UAAU,qBACV,YAAU,qDAEb,0BACEA,UAAU,yEACVwD,QAAS,IAAMlE,EAAMqP,aAAahN,EAAmByN,QACrD7N,KAAK,UACL,gBAAC8N,GAAA,EAAY,CAAClL,KAxHI,KAyHlB,uBAAKnE,UAAU,yBACZ,YAAU,wD,+BCrGrB,SAASsP,IAAY,IAAExL,EAAF,KAAO1C,IAC1B,MAAO,CAAEE,MAAOwC,EAAK9C,MAAOI,GAG9B,MAAMyK,GAAgB0D,GAAyCC,GAC7DtH,QAAQC,QAAQoH,EAAc5J,OAAO8J,IAAMD,GAAKC,EAAErO,KAAKa,SAASuN,IAAI3L,IAAIyL,KAoG3D,SAASI,GAA4BpQ,GAClD,MAAM,SACJ8G,EADI,MAEJnH,EAFI,UAGJuD,EAHI,gBAIJ6G,EAJI,qBAKJsG,EALI,cAMJJ,EANI,qBAOJK,EAPI,mBAQJ/M,GACEvD,EAEJ,OAAI+J,EACK,gBAAC5H,EAAA,EAAe,MAIvB,2BACE,gBAACwE,EAAuB,CACtBC,kBACE0J,GACE,uBAAK5P,UAAU,kCACb,gBAACyB,EAAA,EAAe,CAACzB,UAAU,eAAe0B,QAASc,IACnD,gBAAC,IAAM,CACLxC,UAAU,8BACVwB,UAAWqB,GAAsBL,EACjCgB,QAASlE,EAAMwH,oBACd,YAAU,oDAKnBpD,MACE,wBAAM1D,UAAU,mCACd,uBACE+G,IAAI,GACJ/G,UAAU,eACVgH,OAAQ,GACRC,IAAG,UAAK,uBAAL,4BAEJ,YAAU,6CAKhBhI,EACC,uBAAKe,UAAU,+BACb,uBAAKA,UAAU,+CACb,sBAAIA,UAAU,qBACX,YAAU,mDAEb,gBAAC+E,EAAA,EAAK,CAACC,QAAQ,WACZoB,EACC,gBAAC,mBAAgB,CACfnG,GAAG,yDACHC,eAAgB,YACd,0DAEFC,OAAQ,CACNC,KACE,gBAAC,IAAI,CAACgE,GAAG,2CACN,YAAU,mEAMnB,YAAU,uDAMlB,gBAAC3C,EAAA,EAAe,CAACC,QAASiO,GACxB,uBAAK3P,UAAU,cACb,6BAAQ,YAAU,yDACjBuP,EAAc3L,OAAS,EACtB,gBAACiM,GAAA,EAAY,CACXC,eAAgBP,EAAc1L,IAAIyL,IAClClI,SAAUyE,GAAa0D,GACvBQ,mBAAoB,EACpBC,SAAU,EAAG1O,WAAYhC,EAAM2Q,qBAAqB3O,GACpDA,MAAOsO,GAAwBN,GAAYM,MAG5CD,GACC,gBAAC5K,EAAA,EAAK,CAAC/E,UAAU,aAAagF,QAAQ,SACnCoB,EACC,gBAAC,mBAAgB,CACfnG,GAAG,iDACHC,eAAgB,YAAU,kDAC1BC,OAAQ,CACNC,KACE,gBAAC,IAAI,CAACgE,GAAG,2CACN,YACC,mEAOV,YAAU,+CAxM9B,SAA8B9E,GAC5B,MAAM,UACJkD,EADI,oBAEJ+C,EAFI,aAGJ5C,EAHI,iBAIJuN,EAJI,YAKJtN,EALI,qBAMJgN,EANI,mBAOJ/M,GACEvD,EAME6Q,EAAczG,KAChBA,EAAW3F,cAAgBwB,GAAuB/C,EAEtD,OACEoN,GACAjN,GACE,uBAAK3C,UAAU,wCACb,uBAAKA,UAAU,aACb,gBAACmH,EAAA,EAAS,CACRnH,UAAU,oBACVqB,SAAU/B,EAAM8H,SAChBC,YAAa,YAAU,iDACvB/F,MAAOsB,KAIc,IAAxBD,EAAaiB,OACZ,uBAAK5D,UAAU,UACb,gBAACyB,EAAA,EAAe,CAACC,QAAS6D,GACvB,YAAU,gBAIf5C,EAAakB,IAAIwJ,IACf,uBAAC/I,EAAA,EAAK,CACJtE,UAAU,mEACV8D,IAAKuJ,EAAEvJ,IACPS,SA/BOmF,EA+BY2D,IA9B3B3D,EAAW3F,gBACVlB,GAAsBA,EAAmBiB,MAAQ4F,EAAW5F,KA8BrDtC,SAAU2O,EAAW9C,GACrB/L,MAAO+L,EAAEvJ,IACTU,QAASlF,EAAMmF,oBACf,uBAAKzE,UAAU,oCAAoC0D,MAAO2J,EAAEjM,MAC1D,uBAAKpB,UAAU,iBACZqN,EAAEtJ,aACD,uBAAK/D,UAAU,qCACb,gBAAC,IAAI,CACHA,UAAU,mCACVoE,GAAI,YAAciJ,EAAEtJ,eACpB,gBAACgG,EAAA,EAAa,CACZ/J,UAAU,eACVgK,UAAW,IAAmBC,UAEhC,wBAAMjK,UAAU,iBAAiBqN,EAAEjM,OAErC,sBAAIpB,UAAU,oDACZ,wBAAMA,UAAU,gBACb,YAAU,kDAEb,gBAACgE,EAAA,EAAS,CAAChE,UAAU,qBAAqBmE,KAAM,GAAIF,KAAM,SAAOC,UAIrEmJ,EAAEjM,MAGLiM,EAAElO,KACD,qBACEa,UAAU,qDACVwD,QAAS7C,GAAKA,EAAEyP,kBAChB7P,OAAO,SACPF,KAAMgN,EAAElO,IACRmB,IAAI,uBACH,YAAU,8CAlEVoJ,QA0Eb,uBAAK1J,UAAU,yCACb,gBAAC0E,EAAA,EAAU,CACTC,MAAOhC,EAAaiB,OACpBgB,MAAOsL,EAAiBtL,MACxBC,SAAUvF,EAAM8K,WAChB1I,QAAS6D,MAuHd8K,CAAqB/Q,IC3Nb,MAAM,WAA4B,YAG/C,YAAYA,GACVgI,MAAMhI,GAHR,KAAAiI,SAAU,EAgJV,KAAA+I,cAAiBpL,IACf,MAAM,qBAAE0K,GAAyBnI,KAAKK,MAClC8H,IACFnI,KAAKC,SAAS,CAAE7E,wBAAoB+C,IACpC6B,KAAK8I,kBAAkB,CAAEC,gBAAiBZ,EAAqB9L,IAAKoB,YAIxE,KAAAuL,yBAA4B3M,IAC1B2D,KAAKC,SAAS,EAAG6H,oBAAH,CACZ3M,YAAa,GACbC,wBAAoB+C,EACpBgK,qBAAsBL,EAAcmB,KAAKjB,GAAKA,EAAE3L,MAAQA,MAE1D2D,KAAK8I,kBAAkB,CAAEC,gBAAiB1M,KAG5C,KAAAoF,uBAA0BpF,IACxB2D,KAAKC,SAAS,EAAG/E,mBAAH,CACZE,mBAAoBF,aAAY,EAAZA,EAAc+N,KAAKrD,GAAKA,EAAEvJ,MAAQA,OAI1D,KAAA+H,aAAgBjJ,IACd6E,KAAKC,SAAS,CAAE9E,gBAChB6E,KAAK6I,cAAc1N,IAGrB,KAAAkJ,eAAiB,KACf,MAAM,iBAAEoE,EAAF,YAAoBtN,EAApB,qBAAiCgN,GAAyBnI,KAAKK,MAEjE8H,GACFnI,KAAK8I,kBAAkB,CACrBC,gBAAiBZ,EAAqB9L,IACtCd,KAAMkN,EAAiBvE,UAAY,EACnCzG,MAAOtC,KAKb,KAAAkG,uBAAyB/J,UACvB,MAAM,qBAAE6Q,EAAF,mBAAwB/M,EAAxB,SAA4C0D,GAAakB,KAAKK,MAEpE,GAAIvB,GAAYqJ,GAAwB/M,EAAoB,CAC1D4E,KAAKC,SAAS,CAAElF,WAAW,IAE3B,IACE,MAAM,QAAEE,StB/EdnE,EsBgFQgI,EAASzC,ItB/EjB6M,EsBgFQf,EAAqB9L,ItB/E7B8M,EsBgFQ/N,EAAmBiB,ItB9EpB,YAAS,8CAA+C,CAC7DvF,aACAoS,eACAC,kBACClS,MAAMC,EAAA,IsB6EH8I,KAAKnI,MAAM2J,gBAAgBvG,EAAQoB,KAPrC,QASM2D,KAAKF,SACPE,KAAKC,SAAS,CAAElF,WAAW,KtBzF9B,IACLjE,EACAoS,EACAC,GsB7GEnJ,KAAKK,MAAQ,CACX7I,OAAO,EACPuD,WAAW,EACXmN,sBAAsB,EACtBpK,qBAAqB,EACrBgK,cAAe,GACf5M,aAAc,GACduN,iBAAkB,CAAEtE,SAfG,GAe6BhH,MAAO,EAAG+G,UAAW,GACzE/I,YAAa,GACb2D,SAAUjH,EAAMiH,SAAS,IAG3BkB,KAAK6I,cAAgB,KAAS7I,KAAK6I,cAAe,KAGpD,oBACE7I,KAAKF,SAAU,EAEfE,KAAKoJ,aAGP,mBAAmBzH,GACiB,IAA9BA,EAAU7C,SAAS3C,QAAgB6D,KAAKnI,MAAMiH,SAAS3C,OAAS,GAClE6D,KAAKC,SAAS,CAAEnB,SAAUkB,KAAKnI,MAAMiH,SAAS,IAAM,IAAMkB,KAAKoJ,cAInE,uBACEpJ,KAAKF,SAAU,EAGjB,mB,MACE,MAAM,SAAEe,EAAF,OAAYC,GAAWd,KAAKnI,OAC5B,SAAEiH,GAAakB,KAAKK,MAE1B,IAAKvB,IAAaA,EAASpH,IAEzB,YADAsI,KAAKC,SAAS,CAAEzI,OAAO,IAGvBwI,KAAKC,SAAS,CAAEzI,OAAO,IAGzB,MAAM6R,EAAqB,QAAjB,EAAGxI,EAASpD,aAAK,eAAE4L,KAE7B,IACOA,UAGIxI,EAASpD,MAAM4L,KACtBvI,EAAOnJ,QAAQkJ,SACTb,KAAKsJ,mBAAmBxK,EAAUuK,UAJlCrJ,KAAKuJ,iBAAiBzK,GAM9B,MAAO5F,GACH8G,KAAKF,SACPE,KAAKC,SAAS,CAAEzI,OAAO,KAK7B,uBAAuBsH,GACrB,IAAKA,EAASpH,IACZ,OAGF,MAAM,SAAE8R,StB4BsB1S,EsB5BegI,EAASzC,ItB6BjD,YAAQ,6CAA8C,CAAEvF,gBAD1D,IAA2BA,EsB1B9B,IAAK0S,EAEH,YADAxJ,KAAKC,SAAS,CAAEzI,OAAO,IAIzB,MAAMiS,EAAc,CAClB,CAAEC,MAAO,YAAa7P,MAAO2P,GAC7B,CAAEE,MAAO,eAAgB7P,MAAM,GAAD,OAAK,cAAL,iCAA0C,IAAQ6N,UAE/EtL,IAAI,EAAGsN,QAAO7P,WAAV,UAAyB6P,EAAzB,YAAkC7P,IACtC8P,KAAK,KAER,IAAIC,EAIFA,EAFE9K,EAASpH,IAAI8C,SAAS,WAENsE,EAASpH,IAAIC,QAAQ,UAAW,IAGhCmH,EAASpH,IAAIC,QAAQ,OAAQ,IAIjDiS,EAAkBA,EAAgBjS,QAAQ,MAAO,IACjDkS,OAAOhJ,SAASlJ,QAAhB,UAA2BiS,EAA3B,kCAAoEH,IAGtE,yBAAyB3K,EAA+B3G,GACtD,MAAM,cAAE2P,StBwBL,SACLhR,EACAqB,GAEA,OAAO,YAAQ,kDAAmD,CAChErB,aACAqB,UACClB,MAAOM,IACJA,GAAgC,MAApBA,EAASF,QACvB,OAAAH,EAAA,GAAiBK,KsBjCauS,CAAuBhL,EAASzC,IAAKlE,GAEjE6H,KAAKF,SACPE,KAAKC,SAAS,CAAEiI,sBAAsB,EAAOJ,kBAIjD,wBAAwBiC,GACtB,MAAM,gBAAEhB,EAAF,KAAmBxN,EAAO,EAA1B,MAA6BkC,GAAUsM,GACvC,SAAEjL,GAAakB,KAAKK,MAE1B,GAAKvB,EAAL,CAKAkB,KAAKC,SAAS,CAAEnC,qBAAqB,IAErC,IACE,MAAMkM,QtBmBL,SAA+BA,GAOpC,MAAM,WAAElT,EAAF,aAAcoS,EAAd,SAA4B/E,EAA5B,KAAsC5I,EAAO,EAA7C,MAAgDkC,GAAUuM,EAChE,OAAO,YAAQ,iDAAkD,CAC/DlT,aACAoS,eACA7L,EAAG9B,EACHoJ,GAAIR,EACJ4D,EAAGtK,QAASU,IACXlH,MAAMC,EAAA,GsBjCc+S,CAAsB,CACvCnT,WAAYgI,EAASzC,IACrB6M,aAAcH,EACd5E,SA5HqB,GA6HrB5I,OACAkC,UAGEuC,KAAKF,SACPE,KAAKC,SAAS,EAAG/E,mBAAH,CACZ4C,qBAAqB,EACrB2K,iBAAkBuB,EAAKE,OACvBhP,aAAuB,IAATK,EAAayO,EAAK9O,aAAe,IAAIA,KAAiB8O,EAAK9O,iBAG7E,MAAOiP,GACHnK,KAAKF,SACPE,KAAKC,SAAS,CACZnC,qBAAqB,EACrB2K,iBAAkB,CAAEvE,UAAW,EAAGC,SA5If,GA4I+ChH,MAAO,GACzEjC,aAAc,WA3BlB8E,KAAKC,SAAS,CAAEzI,OAAO,IA+F3B,SACE,MAAM,SAAEmH,EAAF,gBAAYiD,GAAoB5B,KAAKnI,OACrC,MACJL,EADI,UAEJuD,EAFI,qBAGJmN,EAHI,oBAIJpK,EAJI,cAKJgK,EALI,iBAMJW,EANI,aAOJvN,EAPI,YAQJC,EARI,qBASJgN,EATI,mBAUJ/M,GACE4E,KAAKK,MAET,OACE,gBAAC4H,GAA2B,CAC1BtJ,SAAUA,EACVnH,MAAOA,EACPuD,UAAWA,EACX6G,gBAAiBA,EACjBsG,qBAAsBA,EACtBpK,oBAAqBA,EACrBuB,mBAAoBW,KAAKqB,uBACzBsB,WAAY3C,KAAKqE,eACjB1E,SAAUK,KAAKoE,aACfoE,qBAAsBxI,KAAKgJ,yBAC3BhM,mBAAoBgD,KAAKyB,uBACzBqG,cAAeA,EACfW,iBAAkBA,EAClBtN,YAAaA,EACbD,aAAcA,EACdiN,qBAAsBA,EACtB/M,mBAAoBA,KCvPb,SAASgP,GAA2BvS,GACjD,MAAM,yBACJwS,EADI,YAEJrI,EAFI,SAGJjE,EAAW,GAHP,eAIJkG,EAJI,UAKJpF,EALI,YAMJ1D,GACEtD,EAEJ,OAAwB,IAApBkG,EAAS5B,QAAuC,IAAvBhB,EAAYgB,QAAiB0C,EAuBxD,uBAAKtG,UAAU,gDACb,gBAACmH,EAAA,EAAS,CACRnH,UAAU,SACV0B,QAAS4E,EACTnF,UAAW,EACXE,SAAU/B,EAAM8H,SAChBC,YAAa,YAAU,6CAGzB,2BAEqB,IAApB7B,EAAS5B,OACR,uBAAK5D,UAAU,UAAU,YAAU,eAEnC,yBAAOA,UAAU,0BACf,6BACGwF,EAAS3B,IAAInB,GACZ,sBAAIoB,IAAKpB,EAAQzC,IACf,0BACE,gBAAC2J,EAAA,EAAO,CAACC,QAASnH,EAAQoH,MACxB,0BAAQ9J,UAAU,mDACf0C,EAAQqB,aACP,gBAAC,IAAI,CAACK,GAAI,YAAc1B,EAAQqB,eAC9B,gBAACgG,EAAA,EAAa,CACZ/J,UAAU,eACVgK,UAAW,IAAmBC,UAE/BvH,EAAQ2B,eAGX3B,EAAQtB,OAId,2BACA,gBAACwI,EAAA,EAAO,CAACC,QAASnH,EAAQqP,UACxB,wBAAM/R,UAAU,8DACb0C,EAAQsP,YAIf,0BACE,qBACEhS,UAAU,8CACVK,KAAMqC,EAAQvD,IACdmB,IAAI,sBACJC,OAAO,UACP,gBAACC,EAAA,EAAU,CAACR,UAAU,wBACrB,YAAU,2CAGd0C,EAAQqB,aACP,0BACE,wBAAM/D,UAAU,+DACd,gBAACgE,EAAA,EAAS,CAAChE,UAAU,sBAAsBmE,KAAM,KAChD,YAAU,mDAIf,sBAAInE,UAAU,cACZ,gBAAC,IAAM,CACLwB,WAAYsQ,EACZtO,QAAS,IAAMlE,EAAM6K,SAASzH,EAAQzC,KACrC,YAAU,oCACV6R,IAA6BpP,EAAQzC,IACpC,gBAACwB,EAAA,EAAe,CAACzB,UAAU,sBAU7C,gBAAC0E,EAAA,EAAU,CACTC,MAAOa,EAAS5B,OAChBiB,SAAUvF,EAAM8K,WAChB1I,QAAS+H,EACT7E,MAAO8G,EAAe9G,SApGxB,gBAACG,EAAA,EAAK,CAAC/E,UAAU,aAAagF,QAAQ,WACpC,gBAAC,mBAAgB,CACf9E,eAAgB,YAAU,gDAC1BD,GAAG,+CACHE,OAAQ,CACNC,KACE,gBAAC,IAAI,CACHgE,GAAI,CACFa,SAAU,mBACVC,MAAO,CAAEC,KAAMxD,EAAmB6I,OAAQnF,SAAU,KAErD,YAAU,oDCzBZ,SAAS4M,GAA4B3S,GAClD,MAAM,SACJ8G,EADI,yBAEJ0L,EAFI,QAGJpQ,EAHI,YAIJ+H,EAJI,SAKJjE,EALI,eAMJkG,EANI,SAOJrG,EAPI,UAQJiB,EARI,YASJ1D,EATI,SAUJ2D,EAVI,4BAWJC,GACElH,EAEJ,OACE,gCACE,gBAAC2G,EAAuB,CACtBvC,MACE,wBAAM1D,UAAU,eACd,uBACE+G,IAAI,GACJ/G,UAAU,eACVgH,OAAO,KACPC,IAAG,UAAK,uBAAL,4BAEJ,YAAU,6CAKhBvF,GAAW,qBAAG1B,UAAU,aAEvB0B,IAAY6E,GACZ,gBAACJ,EAAsB,CAAC5G,IAAK,IAAQiL,OAAQpE,WAAYA,KAGzD1E,GACA6E,IACCC,EACC,gBAAC,GAAuB,CACtBjI,WAAYgI,EACZlB,SAAUA,EACV0F,6BAA8BzL,EAAMyL,+BAGtC,gBAAC8G,GAA0B,CACzBC,yBAA0BA,EAC1BrI,YAAaA,EACbU,SAAU7K,EAAM6K,SAChBC,WAAY9K,EAAM8K,WAClBhD,SAAU9H,EAAM8H,SAChB5B,SAAUA,EACVkG,eAAgBA,EAChBpF,UAAWA,EACX1D,YAAaA,MCtDV,MAAM,WAA4B,gBAG/C,YAAYtD,GACVgI,MAAMhI,GAHR,KAAAiI,SAAU,EAkCV,KAAAC,iBAAmBzI,UACjB,MAAM,4BAAEyH,GAAgCiB,KAAKK,MAE7C,IAAKtB,EAA6B,CAChCiB,KAAKC,SAAS,CAAEhG,SAAS,IACzB,MAAMuK,QAAexE,KAAKyK,gBAC1B,GAAIzK,KAAKF,SAAW0E,EAAQ,CAC1B,MAAM,SAAEzG,EAAF,eAAYkG,GAAmBO,EAErCxE,KAAKC,SAAS,CACZhG,SAAS,EACT8D,WACAkG,wBAGFjE,KAAKC,SAAS,CACZhG,SAAS,MAMjB,KAAA+J,YAAc,KACRhE,KAAKF,SACPE,KAAKC,SAAS,CAAErC,UAAU,EAAMmB,6BAA6B,KAMjE,KAAA0L,cAAgBnT,MAAO4M,EAAY,EAAGzG,KACpC,MAAM,SAAEqB,GAAakB,KAAKK,MAC1B,IAAKvB,EACH,OAAO2B,QAAQC,aAAQvC,GAGzB,IACE,azB2FC,SAA2B6L,GAMhC,MAAM,WAAElT,EAAF,SAAcqN,EAAd,KAAwB5I,EAAxB,MAA8BkC,GAAUuM,EAC9C,OAAO,YAAQ,4CAA6C,CAC1DlT,aACA+E,YAAa4B,QAASU,EACtBd,EAAG9B,EACHoJ,GAAIR,IAEH/M,KAAK,EAAG8D,eAAcgP,aAAjB,CAAiCnM,SAAU7C,EAAc+I,eAAgBiG,KAC9EjT,MAAMC,EAAA,GyBzGQwT,CAAkB,CAC7B5T,WAAYgI,EAASzC,IACrBd,KAAM2I,EACNC,SA7EyB,GA8EzB1G,UAEF,MAAO0M,GACP,OAAOnK,KAAKgE,gBAIhB,KAAA2G,SAAWrT,UACT,MAAM,SAAEwH,GAAakB,KAAKK,MAE1B,IAAKvB,EACH,OAAO2B,QAAQC,aAAQvC,GAGzB,IACE,azByFC,SAA6B6L,GAIlC,MAAM,WAAElT,EAAF,gBAAc8T,GAAoBZ,EACxC,OAAO,YAAS,8CAA+C,CAC7DlT,aACA8T,oBACC3T,MAAMC,EAAA,GyBjGQ2T,CAAoB,CAC/B/T,WAAYgI,EAASzC,IACrBuO,oBAEF,MAAOT,GACP,OAAOnK,KAAKgE,gBAIhB,KAAAM,aAAehN,UACb0I,KAAKC,SAAS,CAAEoK,yBAA0BO,IAE1C,MAAMpG,QAAexE,KAAK2K,SAASC,GAE/B5K,KAAKF,UACPE,KAAKC,SAAS,CAAEoK,8BAA0BlM,IAEtCqG,GACFxE,KAAKnI,MAAM2J,gBAAgBgD,EAAOvJ,QAAQoB,OAKhD,KAAAgI,eAAiB/M,UACf0I,KAAKC,SAAS,CAAE+B,aAAa,IAE7B,MACEiC,gBAAgB,UAAEC,GADd,YAEJ/I,GACE6E,KAAKK,MAEHmE,QAAexE,KAAKyK,cAAcvG,EAAY,EAAG/I,GAEnD6E,KAAKF,SACPE,KAAKC,SAAS,EAAGlC,WAAW,GAAIkG,qBAAlB,CACZjC,aAAa,EACbjE,SAAUyG,EAAS,IAAIzG,KAAayG,EAAOzG,UAAYA,EACvDkG,eAAgBO,EAASA,EAAOP,eAAiBA,MAKvD,KAAAG,aAAe9M,UACb0I,KAAKC,SAAS,CAAEpB,WAAW,EAAM1D,gBAEjC,MAAMqJ,QAAexE,KAAKyK,cAAc,EAAGtP,GAEvC6E,KAAKF,SACPE,KAAKC,SAAS,EAAGlC,WAAUkG,qBAAb,CACZpF,WAAW,EACXd,SAAUyG,EAASA,EAAOzG,SAAWA,EACrCkG,eAAgBO,EAASA,EAAOP,eAAiBA,MAKvD,KAAArD,SAAW,KACT,MAAM,SAAEC,EAAF,OAAYC,GAAWd,KAAKnI,aAC3BgJ,EAASpD,MAAMG,SACtBkD,EAAOnJ,QAAQkJ,IAGjB,KAAAiD,iCAAmCxM,UACjC0I,KAAKC,SAAS,CAAElB,6BAA6B,EAAOnB,UAAU,IAC9DoC,KAAKY,iBACCZ,KAAKD,oBAtJXC,KAAKK,MAAQ,CACXpG,SAAS,EACT+H,aAAa,EACbiC,eAAgB,CAAEC,UAAW,EAAG/G,MAAO,EAAGgH,SAXf,IAY3BvG,UAAU,EACVmB,6BAA6B,EAC7BF,WAAW,EACX1D,YAAa,GACb2D,SAAoC,IAA1BjH,EAAMiH,SAAS3C,OAAetE,EAAMiH,SAAS,QAAKX,GAIhE,oBACE6B,KAAKF,SAAU,EAGjB,mBAAmB6B,GACiB,IAA9BA,EAAU7C,SAAS3C,QAAgB6D,KAAKnI,MAAMiH,SAAS3C,OAAS,GAClE6D,KAAKC,SACH,CAAEnB,SAAyC,IAA/BkB,KAAKnI,MAAMiH,SAAS3C,OAAe6D,KAAKnI,MAAMiH,SAAS,QAAKX,GACxE,IAAM6B,KAAKD,oBAKjB,uBACEC,KAAKF,SAAU,EA+HjB,SACE,MAAM,SAAEnB,EAAF,gBAAYiD,EAAZ,SAA6Bf,GAAab,KAAKnI,OAC/C,yBACJwS,EADI,QAEJpQ,EAFI,YAGJ+H,EAHI,SAIJjE,EAJI,eAKJkG,EALI,SAMJrG,EANI,UAOJiB,EAPI,YAQJ1D,EARI,SASJ2D,EATI,4BAUJC,GACEiB,KAAKK,MAET,OACE,gBAACmK,GAA2B,CAC1B1L,SAAUA,EACVH,SAAUA,EACV0L,yBAA0BA,EAC1BpQ,QAASA,GAAW2H,EACpBI,YAAaA,EACbU,SAAU1C,KAAKsE,aACf3B,WAAY3C,KAAKqE,eACjBf,6BAA8BtD,KAAK8D,iCACnCnE,SAAUK,KAAKoE,aACfrG,SAAUA,EACVkG,eAAgBA,EAChBrG,SAAUA,GAAYU,QAAQuC,EAASpD,MAAMG,UAC7CiB,UAAWA,EACX1D,YAAaA,EACb4D,4BACEA,GAA+BT,QAAQuC,EAASpD,MAAMG,a,oDCzLjD,MAAM,WAA4B,gBAG/C,YAAY/F,GACVgI,MAAMhI,GAHR,KAAAiI,SAAU,EAqBV,KAAAgL,aAAgBzO,IACd2D,KAAKC,SAAS,CAAE8K,sBAAsB,IAE/B,aAAoB,CAAEC,UAAW3O,IACrCjF,KAAK6T,IACAjL,KAAKF,SAAWzD,IAAQ2D,KAAKK,MAAMW,YACrChB,KAAKC,SAAS,CACZiL,gBAAiBD,EACb,YAAU,oDACV9M,EACJ4M,sBAAsB,MAI3B9T,MAAM,KACD+I,KAAKF,SAAWzD,IAAQ2D,KAAKK,MAAMW,YACrChB,KAAKC,SAAS,CAAEiL,qBAAiB/M,EAAW4M,sBAAsB,OAe1E,KAAAI,iBAAoBlI,IAClBA,EAAM9J,iBACN,MAAM,MAAEkH,GAAUL,KACdA,KAAKyD,UAAUpD,KACjBL,KAAKC,SAAS,CAAElI,YAAY,IAC5B,aAAc,CACZkD,QAASoF,EAAMW,WACfrH,MAAO0G,EAAMxE,aAAewE,EAAMW,YAAYoK,SAC7ChU,KACD,EAAG6D,aAAc+E,KAAKnI,MAAM2J,gBAAgBvG,EAAQoB,KACpD,KACM2D,KAAKF,SACPE,KAAKC,SAAS,CAAElI,YAAY,QAOtC,KAAAsT,uBAAyB,CAACrK,EAAoBsK,GAAS,KACrD,MAAMJ,EAAkBlL,KAAKuL,YAAYvK,GAEzChB,KAAKC,SAAS,CACZe,aACAkK,kBACAM,kBAAmBF,SAGGnN,IAApB+M,GACFlL,KAAK8K,aAAa9J,IAItB,KAAAyK,wBAA0B,CAAC5P,EAAqByP,GAAS,KACvDtL,KAAKC,SACH,CACEpE,cACA6P,iBAAkB1L,KAAK2L,aAAa9P,GACpC+P,mBAAoBN,GAEtB,KACE,IAAKtL,KAAKK,MAAMmL,kBAAmB,CACjC,MAAMK,EAAsB7L,KAAKK,MAAMxE,YACpCuP,OACAzT,QAAQ,KAAgC,KAC3CqI,KAAKqL,uBAAuBQ,OAMpC,KAAAN,YAAevK,IACb,MAAMwD,EAAS,aAAmBxD,GAClC,OAAOwD,IAAW,IAA2BsH,WACzC3N,EACA,YAAU,8CAA+CqG,IAG/D,KAAAmH,aAAgB9P,GACa,IAAvBA,EAAYM,OACP,YAAU,sDACRN,EAAYM,OPrJS,IOsJvB,YAAU,8DADZ,EA7GP6D,KAAKK,MAAQ,CACXW,WAAY,GACZnF,YAAa,GACb9D,YAAY,EACZgT,sBAAsB,GAExB/K,KAAK8K,aAAe,KAAS9K,KAAK8K,aAAc,KAGlD,oBACE9K,KAAKF,SAAU,EAGjB,uBACEE,KAAKF,SAAU,EAwBjB,UAAUO,GACR,MAAM,WAAEW,EAAF,gBAAckK,EAAd,YAA+BrP,EAA/B,iBAA4C6P,GAAqBrL,EACvE,OAAO/B,aACeH,IAApB+M,QACuB/M,IAArBuN,GACA1K,EAAW7E,OAAS,GACpBN,EAAYM,OAAS,GAuE3B,SACE,MAAM,WACJ6E,EADI,gBAEJkK,EAFI,kBAGJM,EAHI,YAIJ3P,EAJI,iBAKJ6P,EALI,mBAMJE,EANI,qBAOJb,EAPI,WAQJhT,GACEiI,KAAKK,OACH,gBAAE0L,GAAoB/L,KAAKnI,MAE3BI,KAAauT,IAAqBI,GAClCI,EAAuB/T,QAAgCkG,IAArBuN,EAClCO,EAAqBhU,QAAgCkG,IAArBuN,EAEtC,OACE,gCACE,gBAAClN,EAAuB,CAACvC,MAAO,YAAU,8CAE1C,uBAAK1D,UAAU,yBACb,uBAAKA,UAAU,4BACb,wBAAMA,UAAU,wBAAwBU,SAAU+G,KAAKmL,kBACrD,gBAACe,GAAA,EAA0B,CAAC3T,UAAU,sBAEtC,gBAACc,EAAA,EAAe,CACdd,UAAU,aACV2D,YAAa,YAAU,sDACvB1E,MAAOkU,EACPlT,GAAG,eACHH,UAAW2T,EACX1S,QAAS2S,EACT1S,MAAO,YAAU,0CACjBC,UAAU,GACV,yBACEjB,UAAW,EAAW,oBAAqB,CACzC,aAAcyT,EACd,WAAYC,IAEdzT,GAAG,eACH2T,UPpMkB,IOqMlBzS,UAAW,EACXE,SAAUV,GAAK8G,KAAKyL,wBAAwBvS,EAAEkT,cAAcvS,OAAO,GACnEC,KAAK,OACLD,MAAOgC,EACPpC,WAAW,KAGf,gBAAC4S,GAAA,EAAe,CACd7U,MAAO0T,EACP3R,MAAO,YAAU,yCACjB+S,mBAAoBpT,GAAK8G,KAAKqL,uBAAuBnS,EAAEkT,cAAcvS,OAAO,GAC5EmH,WAAYA,EACZ/I,QAASA,EACTsU,WAAYxB,IAGd,gBAAC,IAAY,CAAChR,UAAWiG,KAAKyD,UAAUzD,KAAKK,QAAUtI,GACpD,YAAU,WAEb,gBAACiC,EAAA,EAAe,CAACzB,UAAU,cAAc0B,QAASlC,KAGnDgU,GACC,gBAACzO,EAAA,EAAK,CAACC,QAAQ,OAAOoG,QAAQ,SAASpL,UAAU,kBAC9C,YAAU,4D,QCzL3B,MAAMiU,GAA2B,CAC/B,CAAC,IAAQ/M,OAAQvF,EAAmByD,YACpC,CAAC,IAAQiF,gBAAiB1I,EAAmB0I,eAC7C,CAAC,IAAQE,iBAAkB5I,EAAmB4I,gBAC9C,CAAC,IAAQ4E,QAASxN,EAAmBwN,OACrC,CAAC,IAAQ3E,QAAS7I,EAAmB6I,QAGhC,MAAM,WAA0B,gBAAvC,c,oBACE,KAAAjD,SAAU,EACV,KAAAO,MAAe,CACboM,cAAe,GACfjG,kBAAmB,GACnBkG,uBAAwB,GACxBC,eAAgB,GAChBC,eAAgB,GAChB3S,SAAS,GAYX,KAAA4S,iBAAmB,KACjB7M,KAAKC,SAAS,CAAEhG,SAAS,IAClB,cACJ7C,KAAK0V,IACA9M,KAAKF,SACPE,KAAKC,SAAS,CACZwM,cAAeK,EAAY5O,OAAO6O,GAAKA,EAAEjV,MAAQ,IAAQ2H,OACzD+G,kBAAmBsG,EAAY5O,OAAO6O,GAAKA,EAAEjV,MAAQ,IAAQgL,iBAC7D4J,uBAAwBI,EAAY5O,OAAO6O,GAAKA,EAAEjV,MAAQ,IAAQ8K,gBAClE+J,eAAgBG,EAAY5O,OAAO6O,GAAKA,EAAEjV,MAAQ,IAAQ4P,QAC1DkF,eAAgBE,EAAY5O,OAAO6O,GAAKA,EAAEjV,MAAQ,IAAQiL,QAC1D9I,SAAS,MAIdhD,MAAM,KACD+I,KAAKF,SACPE,KAAKC,SAAS,CAAEhG,SAAS,OAKjC,KAAA+S,iBAAoBtP,IAClB,MAAM,OAAEoD,EAAF,SAAUD,GAAab,KAAKnI,MAClCiJ,EAAOlK,KAAK,CACV4G,SAAUqD,EAASrD,SACnBC,MAAO,CAAEC,WAIb,KAAAuP,iBAAoBnV,IAClBkI,KAAKC,SAAS,CAAEiN,sBAAuBpV,KAGzC,KAAAqV,oBAAuBnM,IACrBhB,KAAKnI,MAAMiJ,OAAOlK,KAAK,YAAcoK,KAGvC,KAAAoM,uBAAyB,KACvBpN,KAAKC,SAAS,CAAEiN,2BAAuB/O,KAGzC,KAAAkP,kBAAoB/V,UAClB,IAAM4V,sBAAuBI,GAAyBtN,KAAKK,MAM3D,GAJAL,KAAKC,SAAS,CAAEiN,2BAAuB/O,UAEjC6B,KAAK6M,mBAEP7M,KAAKF,SAAWwN,EAAsB,CACxC,MAAM,uBAAEZ,GAA2B1M,KAAKK,MAEpCiN,IAAyB,IAAQxK,iBAAmB4J,EAAuBvQ,OAAS,IACtFmR,EAAuB,IAAQ1K,gBAGjC5C,KAAKgN,iBAAiBR,GAAyBc,MAjEnD,oBACEtN,KAAKF,SAAU,EACfE,KAAK6M,mBAGP,uBACE7M,KAAKF,SAAU,EA+DjB,sBAAsBpC,GACpB,MACEkJ,UAAU,SAAEjI,EAAF,gBAAYoN,GADlB,SAEJlL,EAFI,OAGJC,GACEd,KAAKnI,OACH,cACJ4U,EADI,kBAEJjG,EAFI,uBAGJkG,EAHI,eAIJC,EAJI,eAKJC,EALI,QAMJ3S,GACE+F,KAAKK,MAET,OAAQ3C,GACN,KAAKxD,EAAmByD,YACtB,OACE,gBAAC,EAAkB,CACjBgB,WAAYA,EACZiD,gBAAiB3H,EACjB4G,SAAUA,EACVW,gBAAiBxB,KAAKmN,oBACtBrM,OAAQA,EACRhC,SAAU2N,IAIhB,KAAKvS,EAAmB4I,gBACtB,OACE,gBAAC,GAAsB,CACrBnE,WAAYA,EACZ6H,kBAAmBA,EACnB5E,gBAAiB3H,EACjB4G,SAAUA,EACVW,gBAAiBxB,KAAKmN,oBACtBrM,OAAQA,IAId,KAAK5G,EAAmB0I,eACtB,OACE,gBAAC,GAA2B,CAC1BjE,WAAYA,EACZiD,gBAAiB3H,EACjB4G,SAAUA,EACVW,gBAAiBxB,KAAKmN,oBACtBrM,OAAQA,EACRhC,SAAU4N,IAIhB,KAAKxS,EAAmBwN,OACtB,OACE,gBAAC,GAAmB,CAClB/I,WAAYA,EACZiD,gBAAiB3H,EACjB4G,SAAUA,EACVW,gBAAiBxB,KAAKmN,oBACtBrM,OAAQA,EACRhC,SAAU6N,IAIhB,KAAKzS,EAAmB6I,OACtB,OACE,gBAAC,GAAmB,CAClBpE,WAAYA,EACZiD,gBAAiB3H,EACjB4G,SAAUA,EACVW,gBAAiBxB,KAAKmN,oBACtBrM,OAAQA,EACRhC,SAAU8N,IAIhB,KAAK1S,EAAmByN,OACtB,OACE,gBAAC,GAAmB,CAClBoE,kBAAmBA,EACnBvK,gBAAiBxB,KAAKmN,sBAI5B,QAAS,CACP,MAAMxG,EAAY,CAChB,CAAC,IAAQlH,OAAQgN,EAActQ,OAC/B,CAAC,IAAQ2G,iBAAkB0D,EAAkBrK,OAC7C,CAAC,IAAQyG,gBAAiB8J,EAAuBvQ,OACjD,CAAC,IAAQuL,QAASiF,EAAexQ,OACjC,CAAC,IAAQ4G,QAAS6J,EAAezQ,QAEnC,OACE,gBAAC,GAA0B,CACzBwK,UAAWA,EACX/E,gBAAiB3H,EACjBiN,aAAclH,KAAKgN,iBACnB/F,aAAcjH,KAAKiN,qBAO7B,S,MACE,MAAM,SAAEpM,GAAab,KAAKnI,OACpB,sBAAEqV,GAA0BlN,KAAKK,MACjC3C,EAAqD,QAAjD,EAAmCmD,EAASpD,aAAK,eAAEC,KAE7D,OACE,gCACE,gBAAC,IAAM,CAACzB,MAAO,YAAU,2CAA4CsR,cAAc,OACnF,gBAACC,EAAA,EAAc,CAACC,OAAO,wBACvB,uBAAKlV,UAAU,yDAAyDC,GAAG,kBACxEwH,KAAK0N,sBAAsBhQ,GAC3BwP,GACC,gBAACS,EAAA,EAAwB,CACvB7V,IAAKoV,EACLU,+BAA+B,EAC/BC,SAAU7N,KAAKoN,uBACfU,YAAa9N,KAAKqN,kBAClBU,mBAAmB,OASlB,iBAAAC,EAAA,GAAa,OAAA3G,EAAA,GAAa,M,iCCjRzC,4DAqBe,SAAS4G,IACtB,MAAMC,EAAU,cACVC,EAAWtE,OAAOhJ,SAASrD,SAAWqM,OAAOhJ,SAASuN,OAASvE,OAAOhJ,SAASwN,KAErFH,EAAQvW,QAAQ,CAAE6F,SAAU,gBAAiBC,MAAO,CAAE6Q,UAAWH,O,sdCFnE,MAAMI,EAAmE,CACvEC,IAiCF,YAA0D,IAAjC,KAAEhS,GAA+B,EAAtBiS,EAAsB,cACxD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,+zBACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOmS,UArCpCC,IAwHF,YAAyD,IAAjC,KAAEpS,GAA+B,EAAtBiS,EAAsB,cACvD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,iIACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOmS,UA5HpCE,IA0CF,YAAwD,IAAjC,KAAErS,GAA+B,EAAtBiS,EAAsB,cACtD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,ypDACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOmS,UA9CpCG,IAAKC,EACLC,IA8DF,YAAmD,IAAjC,KAAExS,GAA+B,EAAtBiS,EAAsB,cACjD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,0OACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOmS,UAlEpCM,IAyGF,YAA2D,IAAjC,KAAEzS,GAA+B,EAAtBiS,EAAsB,cACzD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,kMACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOmS,UA7GpCO,IAAKC,EACLC,IAAKC,EACLC,GAgFF,YAAwD,IAAjC,KAAE9S,GAA+B,EAAtBiS,EAAsB,cACtD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,0RACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOmS,UAlFpCY,IAAKF,EACLG,QAASL,EACTM,IAgEF,YAAsD,IAAjC,KAAEjT,GAA+B,EAAtBiS,EAAsB,cACpD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,mIACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOmS,UApEpCe,IAAKX,GASQ,SAASzM,EAAczK,GACpC,IAAKA,EAAM0K,UACT,OAAO,KAGT,MAAMA,EAAY1K,EAAM0K,UAAUhI,cAC5BoV,EAAYpB,EAAehM,GACjC,OAAOoN,EAAY,gBAACA,EAAS,CAACpX,UAAWV,EAAMU,UAAWiE,KAAM3E,EAAM2E,OAAW,KAyBnF,SAASuS,EAAT,GAAwD,IAAjC,KAAEvS,GAA+B,EAAtBiS,EAAsB,cACtD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,wmBACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOoT,WAuCtC,SAAST,EAAT,GAAsD,IAAjC,KAAE3S,GAA+B,EAAtBiS,EAAsB,cACpD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,0NACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOmS,SA4BtC,SAASU,EAAT,GAAuD,IAAjC,KAAE7S,GAA+B,EAAtBiS,EAAsB,cACrD,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,4OACFvH,MAAO,CAAE3K,KAAMA,GAAQ,SAAOmS,W,iCCjKtC,0FAqCe,SAAS1R,EAAWpF,GACjC,MAAM,UAAEU,EAAF,MAAa2E,EAAb,QAAoBjD,EAApB,WAA6B4V,EAA7B,MAAyC1S,EAAzC,MAAgD2S,GAAQ,GAASjY,EACjEkY,EAAU5S,GAASA,EAAQD,EAEjC,IAAI8S,EAmBJ,OAlBIH,GAAchY,EAAMoY,OACtBD,EACE,gBAAC,IAAM,CAACzX,UAAU,cAAa,YAAW,SAASwB,SAAUE,EAAS8B,QAASlE,EAAMoY,QAClF,YAAU,WAGNF,GAAWlY,EAAMuF,WAC1B4S,EACE,gBAAC,IAAM,CACLzX,UAAU,cACVwB,SAAUE,EAAO,YACP,YACV8B,QAASlE,EAAMuF,UACd,YAAU,eAMf,0BACE7E,UAAW,EAAW,8BAA+B,CAAE,eAAgBuX,GAASvX,IAC/E,YACC,eACA,wBAAc2E,EAAO,MAAO,MAC5B,wBAAcC,EAAO,MAAO,OAE7B6S,EACA/V,GAAW,gBAAC,IAAe,CAAC1B,UAAU,iD,oBCrE7C,IAAI2X,EAAiB,EAAQ,KACzBC,EAAW,EAAQ,KACnBC,EAAoB,EAAQ,KAsB5BC,EAAUF,GAAS,SAASG,EAAO5X,GACrC,OAAO0X,EAAkBE,GACrBJ,EAAeI,EAAO5X,GACtB,MAGNrC,EAAOK,QAAU2Z,G,oBC9BjB,IAAIE,EAAc,EAAQ,KACtBC,EAAe,EAAQ,GA+B3Bna,EAAOK,QAJP,SAA2BmD,GACzB,OAAO2W,EAAa3W,IAAU0W,EAAY1W,K,iCC7B5C,+DA6Be,SAAS2T,EAAe3V,GACrC,OACE,gBAAC,IAAY4Y,SAAQ,KAClB,EAAGC,kBAAiBC,wBACnB,gBAACC,EAAmB,eAClBF,gBAAiBA,EACjBC,mBAAoBA,GAChB9Y,KAYP,MAAM+Y,UAA4B,gBAAzC,c,oBASE,KAAAC,QAAU,KACR,MAAQpD,OAAQpR,EAAV,MAAe9C,EAAQ,YAAU,mBAAjC,OAAqDuX,GAAW9Q,KAAKnI,MAC3E,MAAO,CAAEwE,MAAK9C,QAAOuX,WAVvB,oBACE9Q,KAAKnI,MAAM6Y,gBAAgB1Q,KAAK6Q,WAGlC,uBACE7Q,KAAKnI,MAAM8Y,mBAAmB3Q,KAAK6Q,WAQrC,SACE,MAAM,OAAEpD,GAAWzN,KAAKnI,MACxB,OAAO,wBAAMW,GAAE,uBAAkBiV,Q,oBChErC,IAAIsD,EAAW,EAAQ,IACnBC,EAAgB,EAAQ,KACxBC,EAAoB,EAAQ,KAC5BC,EAAW,EAAQ,IACnBC,EAAY,EAAQ,IACpBC,EAAW,EAAQ,IA6DvB/a,EAAOK,QA7CP,SAAwB4Z,EAAO5X,EAAQ2Y,EAAUC,GAC/C,IAAIC,GAAS,EACT/W,EAAWwW,EACXQ,GAAW,EACXrV,EAASmU,EAAMnU,OACfqI,EAAS,GACTiN,EAAe/Y,EAAOyD,OAE1B,IAAKA,EACH,OAAOqI,EAEL6M,IACF3Y,EAASwY,EAASxY,EAAQyY,EAAUE,KAElCC,GACF9W,EAAWyW,EACXO,GAAW,GAEJ9Y,EAAOyD,QA/BK,MAgCnB3B,EAAW4W,EACXI,GAAW,EACX9Y,EAAS,IAAIqY,EAASrY,IAExBgZ,EACA,OAASH,EAAQpV,GAAQ,CACvB,IAAItC,EAAQyW,EAAMiB,GACdI,EAAuB,MAAZN,EAAmBxX,EAAQwX,EAASxX,GAGnD,GADAA,EAASyX,GAAwB,IAAVzX,EAAeA,EAAQ,EAC1C2X,GAAYG,GAAaA,EAAU,CAErC,IADA,IAAIC,EAAcH,EACXG,KACL,GAAIlZ,EAAOkZ,KAAiBD,EAC1B,SAASD,EAGblN,EAAO5N,KAAKiD,QAEJW,EAAS9B,EAAQiZ,EAAUL,IACnC9M,EAAO5N,KAAKiD,GAGhB,OAAO2K,I,6cCzCM,SAASzL,EAAV,GAAuE,IAAlD,KAAEyD,EAAO,gBAAyC,EAAtBiS,EAAsB,cACnF,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,whBACFvH,MAAO,CAAE3K,a,iCC3BjB,+DA+Be,MAAMK,UAAc,gBAAnC,c,oBACE,KAAA4I,YAAexC,IACbA,EAAM9J,iBAED6G,KAAKnI,MAAMkC,UACdiG,KAAKnI,MAAMkF,QAAQiD,KAAKnI,MAAMgC,QAIlC,SACE,MAAM,UAAEtB,EAAF,QAAauE,EAAb,SAAsB+U,EAAtB,SAAgC9X,GAAaiG,KAAKnI,MAExD,OACE,oCACgBiF,EACdvE,UAAW,EAAW,wCAAyCA,EAAW,CAAEwB,aAC5EnB,KAAK,IACLmD,QAASiE,KAAKyF,YACdqM,KAAK,SACL,qBAAGvZ,UAAW,EAAW,aAAc,eAAgB,CAAE,aAAcuE,MACtE+U,M,6cC7BM,SAASE,EAAV,GAA4E,IAAlD,KAAEvV,EAAO,gBAAyC,EAAtBiS,EAAsB,cACxF,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,mTACFvH,MAAO,CAAE3K,a,sdCCF,SAASwV,EAAV,GAAqD,IAA7B,KAAE3W,GAA2B,EAAlBoT,EAAkB,cACjE,OAAOpT,EAAO,gBAAC,IAAe,iBAAKoT,IAAgB,gBAAC,IAAgB,iBAAKA,M,iCC7B3E,iEAqCe,MAAM3S,UAA4B,gBAAjD,c,oBACE,KAAAuE,MAAe,CAAE4R,eAAe,GAEhC,KAAAxM,YAAc,KACZzF,KAAKnI,MAAMkE,QAAQiE,KAAKnI,MAAMmS,OAGhC,KAAAkI,cAAgB,KACdlS,KAAKC,SAAS,CAAEgS,eAAe,KAGjC,KAAAE,cAAgB,KACdnS,KAAKC,SAAS,CAAEgS,eAAe,KAGjC,SACE,MAAM,UAAE1Z,EAAF,KAAa8C,EAAb,aAAmB+W,EAAnB,MAAiCnW,GAAU+D,KAAKnI,MACtD,OACE,uBACEU,UAAW,EAAW,oCAAqCA,EAAW,CACpE,WAAYyH,KAAKK,MAAM4R,iBAEzB,uBAAK1Z,UAAU,qBAAqBwD,QAASiE,KAAKyF,YAAaqM,KAAK,YAClE,wBAAMvZ,UAAU,+BACd,gBAAC,IAAa,CAACA,UAAU,sBAAsB8C,KAAMA,IACpDY,GAEFmW,GAAgBA,KAElB/W,GACC,uBACE9C,UAAU,oBACV8Z,aAAcrS,KAAKkS,cACnBI,aAActS,KAAKmS,eAClBnS,KAAKnI,MAAMga,c,iCCvExB,mFAyBO,SAAS7D,EAAgBuE,GAC9B,MAAMC,UAAgB,YAGpB,oBACO,YAAWxS,KAAKnI,MAAM4a,cACzB,oBAIJ,SACE,OAAI,YAAWzS,KAAKnI,MAAM4a,aACjB,gBAACF,EAAgB,iBAAKvS,KAAKnI,QAE3B,MAKb,OAjBS,EAAA6a,YAAc,YAAsBH,EAAkB,gBAiBxD,YAAgBC,K,kHCGV,MAAMpK,UAAkD,gBAMrE,YAAYvQ,GACVgI,MAAMhI,GAHR,KAAAiI,SAAU,EA4BV,KAAAsE,aAAgB3G,IAEd,MAAMkV,EAAelV,EACrBuC,KAAKnI,MAAM8H,SAASgT,GAAcvb,KAChCb,IACMyJ,KAAKF,SACPE,KAAKC,SAASI,IAAK,CACjBpG,SAAS,EACT1D,QAAS8J,EAAM5C,QAAUkV,EAAepc,EAAU8J,EAAM9J,YAI9D,KACMyJ,KAAKF,SACPE,KAAKC,SAAS,CAAEhG,SAAS,OAMjC,KAAA2Y,aAAgBC,IACVC,MAAMC,QAAQF,GACZ7S,KAAKnI,MAAMmb,eACbhT,KAAKnI,MAAMmb,cAAcH,GAElB7S,KAAKnI,MAAM0Q,UACpBvI,KAAKnI,MAAM0Q,SAASsK,IAIxB,KAAAI,kBAAqBxV,IACnB,GAAIA,EAAMtB,QAAU6D,KAAKsI,mBACvBtI,KAAKC,SAAS,CAAEhG,SAAS,EAAMwD,UAC/BuC,KAAKoE,aAAa3G,OACb,CAGL,MAAMlH,EAA4B,IAAjBkH,EAAMtB,QAAgB6D,KAAKnI,MAAMwQ,gBAAmB,GACrErI,KAAKC,SAAS,CAAE1J,UAASkH,YAK7B,KAAAyV,mBAAqB,KAAM,EAnEzBlT,KAAKK,MAAQ,CAAEpG,SAAS,EAAO1D,QAASsB,EAAMwQ,gBAAkB,GAAI5K,MAAO,IAC3EuC,KAAKoE,aAAe,IAASpE,KAAKoE,aAAc,KAGlD,oBACEpE,KAAKF,SAAU,EAGjB,uBACEE,KAAKF,SAAU,EAGjB,gBACE,YAAgC3B,IAAzB6B,KAAKnI,MAAMsb,WAA0BnT,KAAKnI,MAAMsb,UAGzD,yBACE,YAAyChV,IAAlC6B,KAAKnI,MAAMyQ,mBAAmCtI,KAAKnI,MAAMyQ,mBAAqB,EAGvF,kBACE,YAAkCnK,IAA3B6B,KAAKnI,MAAMub,aAA4BpT,KAAKnI,MAAMub,YAgD3D,SACE,MAAMC,EAAYrT,KAAKnI,MAAMyb,UAAY,IAAY,IACrD,OACE,gBAACD,EAAS,CACR5Z,UAAWuG,KAAKmT,UAChB5a,UAAWyH,KAAKnI,MAAMU,UACtBgb,UAAWvT,KAAKnI,MAAM0b,UACtBC,mBAAmB,EACnBC,aAAczT,KAAKkT,mBACnBQ,UAAW1T,KAAKK,MAAMpG,QACtB0Z,MAAO3T,KAAKnI,MAAM8b,MAClBC,cACE5T,KAAKK,MAAM5C,MAAMtB,OAAS6D,KAAKsI,mBAC3B,YAAwB,mBAAoBtI,KAAKsI,oBACjD,YAAU,qBAEhBuL,kBAAmB7T,KAAKoT,YACxBxZ,SAAUoG,KAAK4S,aACfkB,cAAe9T,KAAKiT,kBACpBc,eAAgB/T,KAAKnI,MAAMmc,aAC3Bzd,QAASyJ,KAAKK,MAAM9J,QACpBqJ,YAAa,YAAU,eACvBqU,kBAAmBjU,KAAKnI,MAAMoc,kBAC9BC,YAAY,EACZra,MAAOmG,KAAKnI,MAAMgC,MAClBsa,cAAenU,KAAKnI,MAAMmc,kB,iCCrJlC,iFAqCe,SAAS3H,EAAgBxU,GACtC,MAAM,MACJL,EADI,KAEJ4c,EAFI,MAGJ7a,EAHI,YAIJqG,EAJI,WAKJoB,EALI,QAMJ/I,EANI,WAOJsU,EAPI,UAQJ4G,GAAY,GACVtb,EAEEQ,EAAYJ,QAAqBkG,IAAV3G,EACvB8B,EAAUrB,IAAYsU,QAAwBpO,IAAV3G,EAE1C,OACE,gBAAC,IAAe,CACde,UAAU,aACV2D,YAAa,YAAU,qDACvB1E,MAAOA,EACP4c,KAAMA,EACN5b,GAAG,cACHH,UAAWA,EACXiB,QAASA,EACTC,MAAOA,EACPC,cAAoB2E,IAAV5E,GACV,yBACEE,UAAW0Z,EACX5a,UAAW,EAAW,oBAAqB,CACzC,aAAcF,EACd,WAAYiB,IAEdd,GAAG,cACH2T,UAAW,IACXzS,UAAW,EACXE,SAAU/B,EAAMyU,mBAChB1M,YAAaA,EACb9F,KAAK,OACLD,MAAOmH,O,iCC3Ef,0FAyBO,MAAMqT,EAAoB,mCACpBC,EAAiC,eAEvC,SAASC,EAAmBvT,GACjC,OAA0B,IAAtBA,EAAW7E,OACN,IAA2BqY,MACzBxT,EAAW7E,OAAS,IACtB,IAA2BsY,QACzBJ,EAAkBK,KAAK1T,GACzB,IAA2B8K,MACzB,WAAW4I,KAAK1T,GAClB,IAA2B2T,WAE7B,IAA2BC,c,6cChBrB,SAAShN,EAAV,GAAyE,IAAlD,KAAEpL,EAAO,gBAAyC,EAAtBiS,EAAsB,cACrF,OACE,gBAAC,IAAI,iBAAKA,GACR,wBACEC,EAAE,wGACFlS,KAAMA,EACNqY,SAAS","file":"js/301.m.41d919bd.chunk.js","sourcesContent":["var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:700px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#create-project{padding-top:0!important}#create-project header{padding-top:20px;background-color:#f3f3f3;position:-webkit-sticky;position:sticky;top:48px;z-index:50}.create-project-mode-type-alm.disabled img{filter:grayscale(100%)}.create-project-manual{display:flex!important;justify-content:space-between}.create-project-azdo-repo{width:410px;min-height:40px;box-sizing:border-box;margin-right:auto}.create-project-import-bbs .open .boxed-group-header{border-bottom:1px solid #e6e6e6}.create-project-import-bbs .boxed-group-inner{padding-top:24px}.create-project-import-bbs-repo{width:250px;min-height:40px}.create-project-github-repository{box-sizing:border-box;width:33.33%}.create-project-github-repository .notice{display:block;position:absolute}.create-project-github-repository .notice svg{color:#0a0}.create-project-import table>tbody>tr>td{vertical-align:middle}.create-project-import .project-name,.create-project-import .project-path{max-width:400px}.create-project-import .sq-project-link{max-width:300px}.create-project-import .already-set-up svg{color:#0a0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { get, getJSON, parseError, post, postJSON } from '../helpers/request';\nimport {\n  AzureProject,\n  AzureRepository,\n  BitbucketCloudRepository,\n  BitbucketProject,\n  BitbucketRepository,\n  GithubOrganization,\n  GithubRepository,\n  GitlabProject\n} from '../types/alm-integration';\nimport { ProjectBase } from './components';\n\nexport function setAlmPersonalAccessToken(\n  almSetting: string,\n  pat: string,\n  username?: string\n): Promise<void> {\n  return post('/api/alm_integrations/set_pat', { almSetting, pat, username }).catch(\n    throwGlobalError\n  );\n}\n\nexport function checkPersonalAccessTokenIsValid(\n  almSetting: string\n): Promise<{ status: boolean; error?: string }> {\n  return get('/api/alm_integrations/check_pat', { almSetting })\n    .then(() => ({ status: true }))\n    .catch(async (response: Response) => {\n      if (response.status === 400) {\n        const error = await parseError(response);\n        return { status: false, error };\n      }\n      return throwGlobalError(response);\n    });\n}\n\nexport function getAzureProjects(almSetting: string): Promise<{ projects: AzureProject[] }> {\n  return getJSON('/api/alm_integrations/list_azure_projects', { almSetting }).catch(\n    throwGlobalError\n  );\n}\n\nexport function getAzureRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{ repositories: AzureRepository[] }> {\n  return getJSON('/api/alm_integrations/search_azure_repos', { almSetting, projectName }).catch(\n    throwGlobalError\n  );\n}\n\nexport function searchAzureRepositories(\n  almSetting: string,\n  searchQuery: string\n): Promise<{ repositories: AzureRepository[] }> {\n  return getJSON('/api/alm_integrations/search_azure_repos', { almSetting, searchQuery }).catch(\n    throwGlobalError\n  );\n}\n\nexport function importAzureRepository(\n  almSetting: string,\n  projectName: string,\n  repositoryName: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_azure_project', {\n    almSetting,\n    projectName,\n    repositoryName\n  }).catch(throwGlobalError);\n}\n\nexport function getBitbucketServerProjects(\n  almSetting: string\n): Promise<{ projects: BitbucketProject[] }> {\n  return getJSON('/api/alm_integrations/list_bitbucketserver_projects', { almSetting });\n}\n\nexport function getBitbucketServerRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    projectName\n  });\n}\n\nexport function importBitbucketServerProject(\n  almSetting: string,\n  projectKey: string,\n  repositorySlug: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_bitbucketserver_project', {\n    almSetting,\n    projectKey,\n    repositorySlug\n  }).catch(throwGlobalError);\n}\n\nexport function searchForBitbucketServerRepositories(\n  almSetting: string,\n  repositoryName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    repositoryName\n  });\n}\n\nexport function searchForBitbucketCloudRepositories(\n  almSetting: string,\n  repositoryName: string,\n  pageSize: number,\n  page?: number\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketCloudRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketcloud_repos', {\n    almSetting,\n    repositoryName,\n    p: page,\n    ps: pageSize\n  });\n}\n\nexport function getGithubClientId(almSetting: string): Promise<{ clientId?: string }> {\n  return getJSON('/api/alm_integrations/get_github_client_id', { almSetting });\n}\n\nexport function importBitbucketCloudRepository(\n  almSetting: string,\n  repositorySlug: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_bitbucketcloud_repo', {\n    almSetting,\n    repositorySlug\n  }).catch(throwGlobalError);\n}\n\nexport function importGithubRepository(\n  almSetting: string,\n  organization: string,\n  repositoryKey: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_github_project', {\n    almSetting,\n    organization,\n    repositoryKey\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubOrganizations(\n  almSetting: string,\n  token: string\n): Promise<{ organizations: GithubOrganization[] }> {\n  return getJSON('/api/alm_integrations/list_github_organizations', {\n    almSetting,\n    token\n  }).catch((response?: Response) => {\n    if (response && response.status !== 400) {\n      throwGlobalError(response);\n    }\n  });\n}\n\nexport function getGithubRepositories(data: {\n  almSetting: string;\n  organization: string;\n  pageSize: number;\n  page?: number;\n  query?: string;\n}): Promise<{ repositories: GithubRepository[]; paging: T.Paging }> {\n  const { almSetting, organization, pageSize, page = 1, query } = data;\n  return getJSON('/api/alm_integrations/list_github_repositories', {\n    almSetting,\n    organization,\n    p: page,\n    ps: pageSize,\n    q: query || undefined\n  }).catch(throwGlobalError);\n}\n\nexport function getGitlabProjects(data: {\n  almSetting: string;\n  page?: number;\n  pageSize?: number;\n  query?: string;\n}): Promise<{ projects: GitlabProject[]; projectsPaging: T.Paging }> {\n  const { almSetting, pageSize, page, query } = data;\n  return getJSON('/api/alm_integrations/search_gitlab_repos', {\n    almSetting,\n    projectName: query || undefined,\n    p: page,\n    ps: pageSize\n  })\n    .then(({ repositories, paging }) => ({ projects: repositories, projectsPaging: paging }))\n    .catch(throwGlobalError);\n}\n\nexport function importGitlabProject(data: {\n  almSetting: string;\n  gitlabProjectId: string;\n}): Promise<{ project: ProjectBase }> {\n  const { almSetting, gitlabProjectId } = data;\n  return postJSON('/api/alm_integrations/import_gitlab_project', {\n    almSetting,\n    gitlabProjectId\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { SubmitButton } from '../../../components/controls/buttons';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport DetachIcon from '../../../components/icons/DetachIcon';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\n\nexport interface AzurePersonalAccessTokenFormProps {\n  almSetting: AlmSettingsInstance;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  submitting?: boolean;\n  validationFailed: boolean;\n}\n\nfunction getAzurePatUrl(url: string) {\n  return `${url.replace(/\\/$/, '')}/_usersSettings/tokens`;\n}\n\nexport default function AzurePersonalAccessTokenForm(props: AzurePersonalAccessTokenFormProps) {\n  const {\n    almSetting: { alm, url },\n    submitting = false,\n    validationFailed\n  } = props;\n\n  const [touched, setTouched] = React.useState(false);\n  React.useEffect(() => {\n    setTouched(false);\n  }, [submitting]);\n\n  const [token, setToken] = React.useState('');\n\n  const isInvalid = (validationFailed && !touched) || (touched && !token);\n\n  let errorMessage;\n  if (!token) {\n    errorMessage = translate('onboarding.create_project.pat_form.pat_required');\n  } else if (isInvalid) {\n    errorMessage = translate('onboarding.create_project.pat_incorrect', alm);\n  }\n\n  return (\n    <div className=\"boxed-group abs-width-600\">\n      <div className=\"boxed-group-inner\">\n        <h2>{translate('onboarding.create_project.pat_form.title', alm)}</h2>\n\n        <div className=\"big-spacer-top big-spacer-bottom\">\n          <FormattedMessage\n            id=\"onboarding.create_project.pat_help.instructions\"\n            defaultMessage={translate('onboarding.create_project.pat_help.instructions', alm)}\n            values={{\n              link: url ? (\n                <a\n                  className=\"link-with-icon\"\n                  href={getAzurePatUrl(url)}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  <DetachIcon className=\"little-spacer-right\" />\n                  <span>\n                    {translate('onboarding.create_project.pat_help.instructions.link', alm)}\n                  </span>\n                </a>\n              ) : (\n                translate('onboarding.create_project.pat_help.instructions.link', alm)\n              ),\n              scope: (\n                <strong>\n                  <em>Code (Read & Write)</em>\n                </strong>\n              )\n            }}\n          />\n        </div>\n\n        <form\n          onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            props.onPersonalAccessTokenCreate(token);\n          }}>\n          <ValidationInput\n            error={errorMessage}\n            id=\"personal_access_token\"\n            isInvalid={isInvalid}\n            isValid={false}\n            label={translate('onboarding.create_project.enter_pat')}\n            required={true}>\n            <input\n              autoFocus={true}\n              className={classNames('width-100 little-spacer-bottom', {\n                'is-invalid': isInvalid\n              })}\n              id=\"personal_access_token\"\n              minLength={1}\n              name=\"personal_access_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setToken(e.target.value);\n                setTouched(true);\n              }}\n              type=\"text\"\n              value={token}\n            />\n          </ValidationInput>\n\n          <SubmitButton disabled={isInvalid || submitting || !touched}>\n            {translate('onboarding.create_project.pat_form.list_repositories')}\n          </SubmitButton>\n          <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n        </form>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum CreateProjectModes {\n  Manual = 'manual',\n  AzureDevOps = 'azure',\n  BitbucketServer = 'bitbucket',\n  BitbucketCloud = 'bitbucketcloud',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { colors } from '../../../app/theme';\nimport BoxedGroupAccordion from '../../../components/controls/BoxedGroupAccordion';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport Radio from '../../../components/controls/Radio';\nimport CheckIcon from '../../../components/icons/CheckIcon';\nimport { Alert } from '../../../components/ui/Alert';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface AzureProjectAccordionProps {\n  importing: boolean;\n  loading: boolean;\n  onOpen: (key: string) => void;\n  onSelectRepository: (repository: AzureRepository) => void;\n  project: AzureProject;\n  repositories?: AzureRepository[];\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n  startsOpen: boolean;\n}\n\nconst PAGE_SIZE = 30;\n\nfunction highlight(text: string, term?: string, underline = false) {\n  if (!term || !text.toLowerCase().includes(term.toLowerCase())) {\n    return text;\n  }\n\n  // Capture only the first occurence by using a capturing group to get\n  // everything after the first occurence\n  const [pre, found, post] = text.split(new RegExp(`(${term})(.*)`, 'i'));\n  return (\n    <>\n      {pre}\n      <strong className={classNames({ underline })}>{found}</strong>\n      {post}\n    </>\n  );\n}\n\nexport default function AzureProjectAccordion(props: AzureProjectAccordionProps) {\n  const {\n    importing,\n    loading,\n    startsOpen,\n    project,\n    repositories = [],\n    searchQuery,\n    selectedRepository\n  } = props;\n\n  const [open, setOpen] = React.useState(startsOpen);\n  const handleClick = () => {\n    if (!open) {\n      props.onOpen(project.name);\n    }\n    setOpen(!open);\n  };\n\n  const [page, setPage] = React.useState(1);\n  const limitedRepositories = repositories.slice(0, page * PAGE_SIZE);\n\n  const isSelected = (repo: AzureRepository) =>\n    selectedRepository?.projectName === project.name && selectedRepository.name === repo.name;\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open\n      })}\n      onClick={handleClick}\n      open={open}\n      title={<h3 title={project.description}>{highlight(project.name, searchQuery, true)}</h3>}>\n      {open && (\n        <DeferredSpinner loading={loading}>\n          {/* The extra loading guard is to prevent the flash of the Alert */}\n          {!loading && repositories.length === 0 ? (\n            <Alert variant=\"warning\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.create_project.azure.no_repositories')}\n                id=\"onboarding.create_project.azure.no_repositories\"\n                values={{\n                  link: (\n                    <Link\n                      to={{\n                        pathname: '/projects/create',\n                        query: { mode: CreateProjectModes.AzureDevOps, resetPat: 1 }\n                      }}>\n                      {translate('onboarding.create_project.update_your_token')}\n                    </Link>\n                  )\n                }}\n              />\n            </Alert>\n          ) : (\n            <>\n              <div className=\"display-flex-wrap\">\n                {limitedRepositories.map(repo => (\n                  <div\n                    className=\"create-project-azdo-repo display-flex-start spacer-bottom padded-right\"\n                    key={repo.name}>\n                    {repo.sqProjectKey ? (\n                      <>\n                        <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                        <div className=\"overflow-hidden\">\n                          <div className=\"little-spacer-bottom text-ellipsis\">\n                            <Link to={getProjectUrl(repo.sqProjectKey)} title={repo.sqProjectName}>\n                              {highlight(repo.sqProjectName || repo.name, searchQuery)}\n                            </Link>\n                          </div>\n                          <em>{translate('onboarding.create_project.repository_imported')}</em>\n                        </div>\n                      </>\n                    ) : (\n                      <Radio\n                        checked={isSelected(repo)}\n                        className=\"overflow-hidden\"\n                        disabled={importing}\n                        onCheck={() => props.onSelectRepository(repo)}\n                        value={repo.name}>\n                        <span className=\"text-ellipsis\" title={repo.name}>\n                          {highlight(repo.name, searchQuery)}\n                        </span>\n                      </Radio>\n                    )}\n                  </div>\n                ))}\n              </div>\n              <ListFooter\n                count={limitedRepositories.length}\n                total={repositories.length}\n                loadMore={() => setPage(p => p + 1)}\n              />\n            </>\n          )}\n        </DeferredSpinner>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport { Alert } from '../../../components/ui/Alert';\nimport { translate } from '../../../helpers/l10n';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport AzureProjectAccordion from './AzureProjectAccordion';\nimport { CreateProjectModes } from './types';\n\nexport interface AzureProjectsListProps {\n  importing: boolean;\n  loadingRepositories: T.Dict<boolean>;\n  onOpenProject: (key: string) => void;\n  onSelectRepository: (repository: AzureRepository) => void;\n  projects?: AzureProject[];\n  repositories: T.Dict<AzureRepository[]>;\n  searchResults?: T.Dict<AzureRepository[]>;\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n}\n\nconst PAGE_SIZE = 10;\n\nexport default function AzureProjectsList(props: AzureProjectsListProps) {\n  const {\n    importing,\n    loadingRepositories,\n    projects = [],\n    repositories,\n    searchResults,\n    searchQuery,\n    selectedRepository\n  } = props;\n\n  const [page, setPage] = React.useState(1);\n\n  const filteredProjects = searchResults\n    ? projects.filter(p => searchResults[p.name] !== undefined)\n    : projects;\n\n  if (filteredProjects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        {searchResults ? (\n          translate('onboarding.create_project.azure.no_results')\n        ) : (\n          <FormattedMessage\n            defaultMessage={translate('onboarding.create_project.azure.no_projects')}\n            id=\"onboarding.create_project.azure.no_projects\"\n            values={{\n              link: (\n                <Link\n                  to={{\n                    pathname: '/projects/create',\n                    query: { mode: CreateProjectModes.AzureDevOps, resetPat: 1 }\n                  }}>\n                  {translate('onboarding.create_project.update_your_token')}\n                </Link>\n              )\n            }}\n          />\n        )}\n      </Alert>\n    );\n  }\n\n  const displayedProjects = filteredProjects.slice(0, page * PAGE_SIZE);\n\n  // Add a suffix to the key to force react to not reuse AzureProjectAccordions between\n  // search results and project exploration\n  const keySuffix = searchResults ? ' - result' : '';\n\n  return (\n    <div>\n      {displayedProjects.map((p, i) => (\n        <AzureProjectAccordion\n          key={`${p.name}${keySuffix}`}\n          importing={importing}\n          loading={Boolean(loadingRepositories[p.name])}\n          onOpen={props.onOpenProject}\n          onSelectRepository={props.onSelectRepository}\n          project={p}\n          repositories={searchResults ? searchResults[p.name] : repositories[p.name]}\n          selectedRepository={selectedRepository}\n          searchQuery={searchQuery}\n          startsOpen={searchResults !== undefined || i === 0}\n        />\n      ))}\n\n      <ListFooter\n        count={displayedProjects.length}\n        loadMore={() => setPage(p => p + 1)}\n        total={filteredProjects.length}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface CreateProjectPageHeaderProps {\n  additionalActions?: React.ReactNode;\n  title: React.ReactNode;\n}\n\nexport default function CreateProjectPageHeader(props: CreateProjectPageHeaderProps) {\n  const { additionalActions, title } = props;\n\n  return (\n    <header className=\"huge-spacer-bottom bordered-bottom overflow-hidden\">\n      <h1 className=\"pull-left huge big-spacer-bottom\">{title}</h1>\n\n      {additionalActions}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from '../../../components/ui/Alert';\nimport { translate } from '../../../helpers/l10n';\nimport { getGlobalSettingsUrl } from '../../../helpers/urls';\nimport { AlmKeys } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\n\nexport interface WrongBindingCountAlertProps {\n  alm: AlmKeys;\n  canAdmin: boolean;\n}\n\nexport default function WrongBindingCountAlert(props: WrongBindingCountAlertProps) {\n  const { alm, canAdmin } = props;\n\n  return (\n    <Alert variant=\"error\">\n      {canAdmin ? (\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.wrong_binding_count.admin')}\n          id=\"onboarding.create_project.wrong_binding_count.admin\"\n          values={{\n            alm: translate('onboarding.alm', alm),\n            url: (\n              <Link to={getGlobalSettingsUrl(ALM_INTEGRATION)}>{translate('settings.page')}</Link>\n            )\n          }}\n        />\n      ) : (\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.wrong_binding_count')}\n          id=\"onboarding.create_project.wrong_binding_count\"\n          values={{\n            alm: translate('onboarding.alm', alm)\n          }}\n        />\n      )}\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from '../../../components/controls/buttons';\nimport SearchBox from '../../../components/controls/SearchBox';\nimport { Alert } from '../../../components/ui/Alert';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { getGlobalSettingsUrl } from '../../../helpers/urls';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\nimport AzurePersonalAccessTokenForm from './AzurePersonalAccessTokenForm';\nimport AzureProjectsList from './AzureProjectsList';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface AzureProjectCreateRendererProps {\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  loadingRepositories: T.Dict<boolean>;\n  onImportRepository: () => void;\n  onOpenProject: (key: string) => void;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repository: AzureRepository) => void;\n  projects?: AzureProject[];\n  repositories: T.Dict<AzureRepository[]>;\n  searching?: boolean;\n  searchResults?: T.Dict<AzureRepository[]>;\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n  settings?: AlmSettingsInstance;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function AzureProjectCreateRenderer(props: AzureProjectCreateRendererProps) {\n  const {\n    canAdmin,\n    importing,\n    loading,\n    loadingRepositories,\n    projects,\n    repositories,\n    searching,\n    searchResults,\n    searchQuery,\n    selectedRepository,\n    settings,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  const settingIsValid = settings && settings.url;\n  const showCountError = !loading && !settings;\n  const showUrlError = !loading && settings && !settings.url;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm &&\n          settingIsValid && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/azure.svg`}\n            />\n            {translate('onboarding.create_project.azure.title')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {showUrlError && (\n        <Alert variant=\"error\">\n          {canAdmin ? (\n            <FormattedMessage\n              defaultMessage={translate('onboarding.create_project.azure.no_url.admin')}\n              id=\"onboarding.create_project.azure.no_url.admin\"\n              values={{\n                alm: translate('onboarding.alm', AlmKeys.Azure),\n                url: (\n                  <Link to={getGlobalSettingsUrl(ALM_INTEGRATION)}>\n                    {translate('settings.page')}\n                  </Link>\n                )\n              }}\n            />\n          ) : (\n            translate('onboarding.create_project.azure.no_url')\n          )}\n        </Alert>\n      )}\n\n      {showCountError && <WrongBindingCountAlert alm={AlmKeys.Azure} canAdmin={!!canAdmin} />}\n\n      {!loading &&\n        settings &&\n        settings.url &&\n        (showPersonalAccessTokenForm ? (\n          <div className=\"display-flex-justify-center\">\n            <AzurePersonalAccessTokenForm\n              almSetting={settings}\n              onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n              submitting={submittingToken}\n              validationFailed={tokenValidationFailed}\n            />\n          </div>\n        ) : (\n          <>\n            <div className=\"huge-spacer-bottom\">\n              <SearchBox\n                onChange={props.onSearch}\n                placeholder={translate('onboarding.create_project.search_projects_repositories')}\n              />\n            </div>\n            <DeferredSpinner loading={Boolean(searching)}>\n              <AzureProjectsList\n                importing={importing}\n                loadingRepositories={loadingRepositories}\n                onOpenProject={props.onOpenProject}\n                onSelectRepository={props.onSelectRepository}\n                projects={projects}\n                repositories={repositories}\n                searchResults={searchResults}\n                searchQuery={searchQuery}\n                selectedRepository={selectedRepository}\n              />\n            </DeferredSpinner>\n          </>\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy } from 'lodash';\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getAzureProjects,\n  getAzureRepositories,\n  importAzureRepository,\n  searchAzureRepositories,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport AzureCreateProjectRenderer from './AzureProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKey: string) => void;\n  settings: AlmSettingsInstance[];\n}\n\ninterface State {\n  importing: boolean;\n  loading: boolean;\n  loadingRepositories: T.Dict<boolean>;\n  patIsValid?: boolean;\n  projects?: AzureProject[];\n  repositories: T.Dict<AzureRepository[]>;\n  searching?: boolean;\n  searchResults?: T.Dict<AzureRepository[]>;\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n  settings?: AlmSettingsInstance;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default class AzureProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      settings: props.settings[0],\n      importing: false,\n      loading: false,\n      loadingRepositories: {},\n      repositories: {},\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState(\n        { settings: this.props.settings.length === 1 ? this.props.settings[0] : undefined },\n        () => this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const patIsValid = await this.checkPersonalAccessToken().catch(() => false);\n\n    let projects: AzureProject[] | undefined;\n    if (patIsValid) {\n      projects = await this.fetchAzureProjects();\n    }\n\n    const { repositories } = this.state;\n\n    let firstProjectName: string;\n\n    if (projects && projects.length > 0) {\n      firstProjectName = projects[0].name;\n\n      this.setState(({ loadingRepositories }) => ({\n        loadingRepositories: { ...loadingRepositories, [firstProjectName]: true }\n      }));\n\n      const repos = await this.fetchAzureRepositories(firstProjectName);\n      repositories[firstProjectName] = repos;\n    }\n\n    if (this.mounted) {\n      this.setState(({ loadingRepositories }) => {\n        if (firstProjectName) {\n          loadingRepositories[firstProjectName] = false;\n        }\n\n        return {\n          patIsValid,\n          loading: false,\n          loadingRepositories: { ...loadingRepositories },\n          projects,\n          repositories\n        };\n      });\n    }\n  };\n\n  fetchAzureProjects = (): Promise<AzureProject[] | undefined> => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(undefined);\n    }\n\n    return getAzureProjects(settings.key).then(({ projects }) => projects);\n  };\n\n  fetchAzureRepositories = (projectName: string): Promise<AzureRepository[]> => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve([]);\n    }\n\n    return getAzureRepositories(settings.key, projectName)\n      .then(({ repositories }) => repositories)\n      .catch(() => []);\n  };\n\n  cleanUrl = () => {\n    const { location, router } = this.props;\n    delete location.query.resetPat;\n    router.replace(location);\n  };\n\n  handleOpenProject = async (projectKey: string) => {\n    if (this.state.searchResults) {\n      return;\n    }\n\n    this.setState(({ loadingRepositories }) => ({\n      loadingRepositories: { ...loadingRepositories, [projectKey]: true }\n    }));\n\n    const projectRepos = await this.fetchAzureRepositories(projectKey);\n\n    this.setState(({ loadingRepositories, repositories }) => ({\n      loadingRepositories: { ...loadingRepositories, [projectKey]: false },\n      repositories: { ...repositories, [projectKey]: projectRepos }\n    }));\n  };\n\n  handleSearchRepositories = async (searchQuery: string) => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return;\n    }\n\n    if (searchQuery.length === 0) {\n      this.setState({ searchResults: undefined, searchQuery: undefined });\n      return;\n    }\n\n    this.setState({ searching: true });\n\n    const results: AzureRepository[] = await searchAzureRepositories(settings.key, searchQuery)\n      .then(({ repositories }) => repositories)\n      .catch(() => []);\n\n    if (this.mounted) {\n      this.setState({\n        searching: false,\n        searchResults: groupBy(results, 'projectName'),\n        searchQuery\n      });\n    }\n  };\n\n  handleImportRepository = async () => {\n    const { selectedRepository, settings } = this.state;\n\n    if (!settings || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n\n    const createdProject = await importAzureRepository(\n      settings.key,\n      selectedRepository.projectName,\n      selectedRepository.name\n    )\n      .then(({ project }) => project)\n      .catch(() => undefined);\n\n    if (this.mounted) {\n      this.setState({ importing: false });\n      if (createdProject) {\n        this.props.onProjectCreate(createdProject.key);\n      }\n    }\n  };\n\n  handleSelectRepository = (selectedRepository: AzureRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  checkPersonalAccessToken = () => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(settings.key).then(({ status }) => status);\n  };\n\n  handlePersonalAccessTokenCreate = async (token: string) => {\n    const { settings } = this.state;\n\n    if (!settings || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n\n    try {\n      await setAlmPersonalAccessToken(settings.key, token);\n      const patIsValid = await this.checkPersonalAccessToken();\n\n      if (this.mounted) {\n        this.setState({ submittingToken: false, patIsValid, tokenValidationFailed: !patIsValid });\n\n        if (patIsValid) {\n          this.cleanUrl();\n          this.fetchInitialData();\n        }\n      }\n    } catch (e) {\n      if (this.mounted) {\n        this.setState({ submittingToken: false });\n      }\n    }\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      importing,\n      loading,\n      loadingRepositories,\n      patIsValid,\n      projects,\n      repositories,\n      searching,\n      searchResults,\n      searchQuery,\n      selectedRepository,\n      settings,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <AzureCreateProjectRenderer\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        loadingRepositories={loadingRepositories}\n        onImportRepository={this.handleImportRepository}\n        onOpenProject={this.handleOpenProject}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onSearch={this.handleSearchRepositories}\n        onSelectRepository={this.handleSelectRepository}\n        projects={projects}\n        repositories={repositories}\n        searching={searching}\n        searchResults={searchResults}\n        searchQuery={searchQuery}\n        selectedRepository={selectedRepository}\n        settings={settings}\n        showPersonalAccessTokenForm={!patIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from '../../../components/controls/buttons';\nimport SearchBox from '../../../components/controls/SearchBox';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport CheckIcon from '../../../components/icons/CheckIcon';\nimport DetachIcon from '../../../components/icons/DetachIcon';\nimport QualifierIcon from '../../../components/icons/QualifierIcon';\nimport { Alert } from '../../../components/ui/Alert';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { formatMeasure } from '../../../helpers/measures';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BitbucketCloudRepository } from '../../../types/alm-integration';\nimport { ComponentQualifier } from '../../../types/component';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketCloudSearchFormProps {\n  importingSlug?: string;\n  isLastPage: boolean;\n  loadingMore: boolean;\n  onImport: (repositorySlug: string) => void;\n  onLoadMore: () => void;\n  onSearch: (searchQuery: string) => void;\n  repositories?: BitbucketCloudRepository[];\n  searching: boolean;\n  searchQuery: string;\n}\n\nfunction getRepositoryUrl(workspace: string, slug: string) {\n  return `https://bitbucket.org/${workspace}/${slug}`;\n}\n\nexport default function BitbucketCloudSearchForm(props: BitbucketCloudSearchFormProps) {\n  const {\n    importingSlug,\n    isLastPage,\n    loadingMore,\n    repositories = [],\n    searching,\n    searchQuery\n  } = props;\n\n  if (repositories.length === 0 && searchQuery.length === 0 && !searching) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.bitbucketcloud.no_projects')}\n          id=\"onboarding.create_project.bitbucketcloud.no_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.BitbucketCloud, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"boxed-group big-padded create-project-import\">\n      <SearchBox\n        className=\"spacer\"\n        loading={searching}\n        minLength={3}\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.search_prompt')}\n      />\n\n      <hr />\n\n      {repositories.length === 0 ? (\n        <div className=\"padded\">{translate('no_results')}</div>\n      ) : (\n        <table className=\"data zebra zebra-hover\">\n          <tbody>\n            {repositories.map(repository => (\n              <tr key={repository.uuid}>\n                <td>\n                  <Tooltip overlay={repository.slug}>\n                    <strong className=\"project-name display-inline-block text-ellipsis\">\n                      {repository.sqProjectKey ? (\n                        <Link to={getProjectUrl(repository.sqProjectKey)}>\n                          <QualifierIcon\n                            className=\"spacer-right\"\n                            qualifier={ComponentQualifier.Project}\n                          />\n                          {repository.name}\n                        </Link>\n                      ) : (\n                        repository.name\n                      )}\n                    </strong>\n                  </Tooltip>\n                  <br />\n                  <Tooltip overlay={repository.projectKey}>\n                    <span className=\"text-muted project-path display-inline-block text-ellipsis\">\n                      {repository.projectKey}\n                    </span>\n                  </Tooltip>\n                </td>\n                <td>\n                  <a\n                    className=\"display-inline-flex-center big-spacer-right\"\n                    href={getRepositoryUrl(repository.workspace, repository.slug)}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    <DetachIcon className=\"little-spacer-right\" />\n                    {translate('onboarding.create_project.bitbucketcloud.link')}\n                  </a>\n                </td>\n                {repository.sqProjectKey ? (\n                  <td>\n                    <span className=\"display-flex-center display-flex-justify-end already-set-up\">\n                      <CheckIcon className=\"little-spacer-right\" size={12} />\n                      {translate('onboarding.create_project.repository_imported')}\n                    </span>\n                  </td>\n                ) : (\n                  <td className=\"text-right\">\n                    <Button\n                      disabled={Boolean(importingSlug)}\n                      onClick={() => {\n                        props.onImport(repository.slug);\n                      }}>\n                      {translate('onboarding.create_project.set_up')}\n                      {importingSlug === repository.slug && (\n                        <DeferredSpinner className=\"spacer-left\" />\n                      )}\n                    </Button>\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <footer className=\"spacer-top note text-center\">\n        {isLastPage &&\n          translateWithParameters(\n            'x_of_y_shown',\n            formatMeasure(repositories.length, 'INT', null),\n            formatMeasure(repositories.length, 'INT', null)\n          )}\n        {!isLastPage && (\n          <Button\n            className=\"spacer-left\"\n            disabled={loadingMore}\n            data-test=\"show-more\"\n            onClick={props.onLoadMore}>\n            {translate('show_more')}\n          </Button>\n        )}\n        {loadingMore && <DeferredSpinner className=\"text-bottom spacer-left position-absolute\" />}\n      </footer>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  checkPersonalAccessTokenIsValid,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { SubmitButton } from '../../../components/controls/buttons';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport { Alert } from '../../../components/ui/Alert';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\n\ninterface Props {\n  almSetting: AlmSettingsInstance;\n  resetPat: boolean;\n  onPersonalAccessTokenCreated: () => void;\n}\n\ninterface State {\n  validationFailed: boolean;\n  validationErrorMessage?: string;\n  touched: boolean;\n  password: string;\n  username?: string;\n  submitting: boolean;\n  checkingPat: boolean;\n}\n\nfunction getPatUrl(alm: AlmKeys, url = '') {\n  if (alm === AlmKeys.BitbucketServer) {\n    return `${url.replace(/\\/$/, '')}/plugins/servlet/access-tokens/add`;\n  } else if (alm === AlmKeys.BitbucketCloud) {\n    return 'https://bitbucket.org/account/settings/app-passwords/new';\n  } else if (alm === AlmKeys.GitLab) {\n    return 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html';\n  }\n\n  return '';\n}\n\nexport default class PersonalAccessTokenForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      checkingPat: false,\n      touched: false,\n      password: '',\n      submitting: false,\n      validationFailed: false\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      almSetting: { key },\n      resetPat\n    } = this.props;\n    this.mounted = true;\n\n    // We don't need to check PAT if we want to reset\n    if (!resetPat) {\n      this.setState({ checkingPat: true });\n      const { patIsValid, error } = await checkPersonalAccessTokenIsValid(key)\n        .then(({ status, error }) => ({ patIsValid: status, error }))\n        .catch(() => ({ patIsValid: status, error: translate('default_error_message') }));\n      if (patIsValid) {\n        this.props.onPersonalAccessTokenCreated();\n      }\n      if (this.mounted) {\n        // This is the initial message when no token was provided\n        if (error === `personal access token for '${key}' is missing`) {\n          this.setState({\n            checkingPat: false\n          });\n        } else {\n          this.setState({\n            checkingPat: false,\n            validationFailed: true,\n            validationErrorMessage: error\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      touched: true,\n      username: event.target.value\n    });\n  };\n\n  handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      touched: true,\n      password: event.target.value\n    });\n  };\n\n  handleSubmit = async (e: React.SyntheticEvent<HTMLFormElement>) => {\n    const { password, username } = this.state;\n    const {\n      almSetting: { key }\n    } = this.props;\n\n    e.preventDefault();\n    if (password) {\n      this.setState({ submitting: true });\n\n      await setAlmPersonalAccessToken(key, password, username).catch(() => {\n        /* Set will not check pat validity. We need to check again so we will catch issue after */\n      });\n\n      const { status, error } = await checkPersonalAccessTokenIsValid(key)\n        .then(({ status, error }) => ({ status, error }))\n        .catch(() => ({ status: false, error: translate('default_error_message') }));\n\n      if (this.mounted && status) {\n        // Let's reset status,\n        this.setState({\n          checkingPat: false,\n          touched: false,\n          password: '',\n          submitting: false,\n          username: '',\n          validationFailed: false\n        });\n        this.props.onPersonalAccessTokenCreated();\n      } else if (this.mounted) {\n        this.setState({\n          submitting: false,\n          touched: false,\n          validationFailed: true,\n          validationErrorMessage: error\n        });\n      }\n    }\n  };\n\n  render() {\n    const {\n      almSetting: { alm, url }\n    } = this.props;\n    const {\n      checkingPat,\n      submitting,\n      touched,\n      password,\n      username,\n      validationFailed,\n      validationErrorMessage\n    } = this.state;\n\n    if (checkingPat) {\n      return <DeferredSpinner className=\"spacer-left\" loading={true} />;\n    }\n\n    const suffixTranslationKey = alm === AlmKeys.BitbucketCloud ? '.bitbucketcloud' : '';\n\n    const isInvalid = validationFailed && !touched;\n    const canSubmit = Boolean(password) && (alm !== AlmKeys.BitbucketCloud || Boolean(username));\n    const submitButtonDiabled = isInvalid || submitting || !canSubmit;\n\n    const errorMessage =\n      validationErrorMessage ?? translate('onboarding.create_project.pat_incorrect', alm);\n\n    return (\n      <div className=\"display-flex-start\">\n        <form className=\"width-50\" onSubmit={this.handleSubmit}>\n          <h2 className=\"big\">{translate('onboarding.create_project.pat_form.title', alm)}</h2>\n          <p className=\"big-spacer-top big-spacer-bottom\">\n            {translate('onboarding.create_project.pat_form.help', alm)}\n          </p>\n\n          {alm === AlmKeys.BitbucketCloud && (\n            <ValidationInput\n              error={undefined}\n              id=\"enter_username_validation\"\n              isInvalid={false}\n              isValid={false}\n              label={translate('onboarding.create_project.enter_username')}\n              required={true}>\n              <input\n                autoFocus={true}\n                className={classNames('input-super-large', {\n                  'is-invalid': isInvalid\n                })}\n                id=\"username\"\n                minLength={1}\n                name=\"username\"\n                value={username}\n                onChange={this.handleUsernameChange}\n                type=\"text\"\n              />\n            </ValidationInput>\n          )}\n\n          <ValidationInput\n            error={errorMessage}\n            id=\"personal_access_token_validation\"\n            isInvalid={false}\n            isValid={false}\n            label={translate(`onboarding.create_project.enter_pat${suffixTranslationKey}`)}\n            required={true}>\n            <input\n              autoFocus={alm !== AlmKeys.BitbucketCloud}\n              className={classNames('input-super-large', {\n                'is-invalid': isInvalid\n              })}\n              id=\"personal_access_token\"\n              minLength={1}\n              value={password}\n              onChange={this.handlePasswordChange}\n              type=\"text\"\n            />\n          </ValidationInput>\n\n          <ValidationInput\n            error={errorMessage}\n            id=\"personal_access_token_submit\"\n            isInvalid={isInvalid}\n            isValid={false}\n            label={null}>\n            <SubmitButton disabled={submitButtonDiabled}>{translate('save')}</SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n          </ValidationInput>\n        </form>\n\n        <Alert className=\"big-spacer-left width-50\" display=\"block\" variant=\"info\">\n          {alm === AlmKeys.BitbucketCloud && (\n            <>\n              <h3>\n                {translate(\n                  'onboarding.create_project.pat_help.instructions_username.bitbucketcloud.title'\n                )}\n              </h3>\n              <p className=\"big-spacer-top big-spacer-bottom\">\n                {translate(\n                  'onboarding.create_project.pat_help.instructions_username.bitbucketcloud'\n                )}\n              </p>\n\n              <div className=\"text-middle big-spacer-bottom\">\n                <img\n                  alt=\"\" // Should be ignored by screen readers\n                  className=\"spacer-right\"\n                  height=\"16\"\n                  src={`${getBaseUrl()}/images/alm/${AlmKeys.BitbucketServer}.svg`}\n                />\n                <a\n                  href=\"https://bitbucket.org/account/settings/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  {translate(\n                    'onboarding.create_project.pat_help.instructions_username.bitbucketcloud.link'\n                  )}\n                </a>\n              </div>\n            </>\n          )}\n\n          <h3>{translate(`onboarding.create_project.pat_help${suffixTranslationKey}.title`)}</h3>\n\n          <p className=\"big-spacer-top big-spacer-bottom\">\n            <FormattedMessage\n              id=\"onboarding.create_project.pat_help.instructions\"\n              defaultMessage={translate(\n                `onboarding.create_project.pat_help${suffixTranslationKey}.instructions`\n              )}\n              values={{ alm: translate('onboarding.alm', alm) }}\n            />\n          </p>\n\n          {(url || alm === AlmKeys.BitbucketCloud) && (\n            <div className=\"text-middle\">\n              <img\n                alt=\"\" // Should be ignored by screen readers\n                className=\"spacer-right\"\n                height=\"16\"\n                src={`${getBaseUrl()}/images/alm/${\n                  alm === AlmKeys.BitbucketCloud ? AlmKeys.BitbucketServer : alm\n                }.svg`}\n              />\n              <a href={getPatUrl(alm, url)} rel=\"noopener noreferrer\" target=\"_blank\">\n                {translate(`onboarding.create_project.pat_help${suffixTranslationKey}.link`)}\n              </a>\n            </div>\n          )}\n\n          <p className=\"big-spacer-top big-spacer-bottom\">\n            {translate('onboarding.create_project.pat_help.instructions2', alm)}\n          </p>\n\n          <ul>\n            {alm === AlmKeys.BitbucketServer && (\n              <li>\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'onboarding.create_project.pat_help.bbs_permission_projects'\n                  )}\n                  id=\"onboarding.create_project.pat_help.bbs_permission_projects\"\n                  values={{\n                    perm: (\n                      <strong>\n                        {translate('onboarding.create_project.pat_help.read_permission')}\n                      </strong>\n                    )\n                  }}\n                />\n              </li>\n            )}\n            {(alm === AlmKeys.BitbucketServer || alm === AlmKeys.BitbucketCloud) && (\n              <li>\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'onboarding.create_project.pat_help.bbs_permission_repos'\n                  )}\n                  id=\"onboarding.create_project.pat_help.bbs_permission_repos\"\n                  values={{\n                    perm: (\n                      <strong>\n                        {translate('onboarding.create_project.pat_help.read_permission')}\n                      </strong>\n                    )\n                  }}\n                />\n              </li>\n            )}\n\n            {alm === AlmKeys.GitLab && (\n              <li className=\"spacer-bottom\">\n                <strong>\n                  {translate('onboarding.create_project.pat_help.gitlab.read_api_permission')}\n                </strong>\n              </li>\n            )}\n          </ul>\n        </Alert>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { BitbucketCloudRepository } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketCloudSearchForm from './BitbucketCloudSearchForm';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport PersonalAccessTokenForm from './PersonalAccessTokenForm';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface BitbucketCloudProjectCreateRendererProps {\n  importingSlug?: string;\n  isLastPage: boolean;\n  canAdmin?: boolean;\n  loading: boolean;\n  loadingMore: boolean;\n  onImport: (repositorySlug: string) => void;\n  onLoadMore: () => void;\n  onPersonalAccessTokenCreated: () => void;\n  onSearch: (searchQuery: string) => void;\n  repositories?: BitbucketCloudRepository[];\n  resetPat: boolean;\n  searching: boolean;\n  searchQuery: string;\n  showPersonalAccessTokenForm: boolean;\n  settings?: AlmSettingsInstance;\n}\n\nexport default function BitbucketCloudProjectCreateRenderer(\n  props: BitbucketCloudProjectCreateRendererProps\n) {\n  const {\n    importingSlug,\n    isLastPage,\n    settings,\n    canAdmin,\n    loading,\n    loadingMore,\n    repositories,\n    resetPat,\n    searching,\n    searchQuery,\n    showPersonalAccessTokenForm\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            {translate('onboarding.create_project.bitbucketcloud.title')}\n          </span>\n        }\n      />\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !settings && (\n        <WrongBindingCountAlert alm={AlmKeys.BitbucketCloud} canAdmin={!!canAdmin} />\n      )}\n\n      {!loading &&\n        settings &&\n        (showPersonalAccessTokenForm ? (\n          <PersonalAccessTokenForm\n            almSetting={settings}\n            resetPat={resetPat}\n            onPersonalAccessTokenCreated={props.onPersonalAccessTokenCreated}\n          />\n        ) : (\n          <BitbucketCloudSearchForm\n            importingSlug={importingSlug}\n            isLastPage={isLastPage}\n            loadingMore={loadingMore}\n            searchQuery={searchQuery}\n            searching={searching}\n            onImport={props.onImport}\n            onSearch={props.onSearch}\n            onLoadMore={props.onLoadMore}\n            repositories={repositories}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  importBitbucketCloudRepository,\n  searchForBitbucketCloudRepositories\n} from '../../../api/alm-integrations';\nimport { BitbucketCloudRepository } from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketCloudProjectCreateRenderer from './BitbucketCloudProjectCreateRender';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  settings: AlmSettingsInstance[];\n  loadingBindings: boolean;\n  onProjectCreate: (projectKey: string) => void;\n}\n\ninterface State {\n  importingSlug?: string;\n  isLastPage?: boolean;\n  loading: boolean;\n  loadingMore: boolean;\n  projectsPaging: Omit<T.Paging, 'total'>;\n  resetPat: boolean;\n  repositories: BitbucketCloudRepository[];\n  searching: boolean;\n  searchQuery: string;\n  settings: AlmSettingsInstance;\n  showPersonalAccessTokenForm: boolean;\n}\n\nexport const BITBUCKET_CLOUD_PROJECTS_PAGESIZE = 30;\nexport default class BitbucketCloudProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      loading: false,\n      loadingMore: false,\n      resetPat: false,\n      projectsPaging: { pageIndex: 1, pageSize: BITBUCKET_CLOUD_PROJECTS_PAGESIZE },\n      repositories: [],\n      searching: false,\n      searchQuery: '',\n      settings: props.settings[0],\n      showPersonalAccessTokenForm: true\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState({ settings: this.props.settings[0] }, () => this.fetchData());\n    }\n  }\n\n  handlePersonalAccessTokenCreated = async () => {\n    this.setState({ showPersonalAccessTokenForm: false });\n    this.cleanUrl();\n    this.setState({ loading: true });\n    await this.fetchData();\n    this.setState({ loading: false });\n  };\n\n  cleanUrl = () => {\n    const { location, router } = this.props;\n    delete location.query.resetPat;\n    router.replace(location);\n  };\n\n  async fetchData(more = false) {\n    const {\n      settings,\n      searchQuery,\n      projectsPaging: { pageIndex, pageSize },\n      showPersonalAccessTokenForm\n    } = this.state;\n    if (settings && !showPersonalAccessTokenForm) {\n      const { isLastPage, repositories } = await searchForBitbucketCloudRepositories(\n        settings.key,\n        searchQuery,\n        pageSize,\n        pageIndex\n      ).catch(() => {\n        this.handleError();\n        return { isLastPage: undefined, repositories: undefined };\n      });\n      if (this.mounted && isLastPage !== undefined && repositories !== undefined) {\n        if (more) {\n          this.setState(state => ({\n            isLastPage,\n            repositories: [...state.repositories, ...repositories]\n          }));\n        } else {\n          this.setState({ isLastPage, repositories });\n        }\n      }\n    }\n  }\n\n  handleError = () => {\n    if (this.mounted) {\n      this.setState({\n        projectsPaging: { pageIndex: 1, pageSize: BITBUCKET_CLOUD_PROJECTS_PAGESIZE },\n        repositories: [],\n        resetPat: true,\n        showPersonalAccessTokenForm: true\n      });\n    }\n\n    return undefined;\n  };\n\n  handleSearch = (searchQuery: string) => {\n    this.setState(\n      {\n        searching: true,\n        projectsPaging: { pageIndex: 1, pageSize: BITBUCKET_CLOUD_PROJECTS_PAGESIZE },\n        searchQuery\n      },\n      async () => {\n        await this.fetchData();\n        if (this.mounted) {\n          this.setState({ searching: false });\n        }\n      }\n    );\n  };\n\n  handleLoadMore = () => {\n    this.setState(\n      state => ({\n        loadingMore: true,\n        projectsPaging: {\n          pageIndex: state.projectsPaging.pageIndex + 1,\n          pageSize: state.projectsPaging.pageSize\n        }\n      }),\n      async () => {\n        await this.fetchData(true);\n        if (this.mounted) {\n          this.setState({ loadingMore: false });\n        }\n      }\n    );\n  };\n\n  handleImport = async (repositorySlug: string) => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return;\n    }\n\n    this.setState({ importingSlug: repositorySlug });\n\n    const result = await importBitbucketCloudRepository(settings.key, repositorySlug).catch(\n      () => undefined\n    );\n\n    if (this.mounted) {\n      this.setState({ importingSlug: undefined });\n\n      if (result) {\n        this.props.onProjectCreate(result.project.key);\n      }\n    }\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      importingSlug,\n      isLastPage = true,\n      settings,\n      loading,\n      loadingMore,\n      repositories,\n      showPersonalAccessTokenForm,\n      resetPat,\n      searching,\n      searchQuery\n    } = this.state;\n    return (\n      <BitbucketCloudProjectCreateRenderer\n        importingSlug={importingSlug}\n        isLastPage={isLastPage}\n        settings={settings}\n        canAdmin={canAdmin}\n        loadingMore={loadingMore}\n        loading={loading || loadingBindings}\n        onImport={this.handleImport}\n        onLoadMore={this.handleLoadMore}\n        onPersonalAccessTokenCreated={this.handlePersonalAccessTokenCreated}\n        onSearch={this.handleSearch}\n        repositories={repositories}\n        searching={searching}\n        searchQuery={searchQuery}\n        resetPat={resetPat || Boolean(location.query.resetPat)}\n        showPersonalAccessTokenForm={\n          showPersonalAccessTokenForm || Boolean(location.query.resetPat)\n        }\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { colors } from '../../../app/theme';\nimport BoxedGroupAccordion from '../../../components/controls/BoxedGroupAccordion';\nimport Radio from '../../../components/controls/Radio';\nimport CheckIcon from '../../../components/icons/CheckIcon';\nimport { Alert } from '../../../components/ui/Alert';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketProjectAccordionProps {\n  disableRepositories: boolean;\n  onClick?: () => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  open: boolean;\n  project?: BitbucketProject;\n  repositories: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showingAllRepositories: boolean;\n}\n\nexport default function BitbucketProjectAccordion(props: BitbucketProjectAccordionProps) {\n  const {\n    disableRepositories,\n    open,\n    project,\n    repositories,\n    selectedRepository,\n    showingAllRepositories\n  } = props;\n\n  const repositoryCount = repositories.length;\n\n  const title = project?.name ?? translate('search_results');\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open,\n        'not-clickable': !props.onClick,\n        'no-hover': !props.onClick\n      })}\n      onClick={\n        props.onClick\n          ? props.onClick\n          : () => {\n              /* noop */\n            }\n      }\n      open={open}\n      title={<h3>{title}</h3>}>\n      {open && (\n        <>\n          <div className=\"display-flex-wrap\">\n            {repositoryCount === 0 && (\n              <Alert variant=\"warning\">\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.no_bbs_repos')}\n                  id=\"onboarding.create_project.no_bbs_repos\"\n                  values={{\n                    link: (\n                      <Link\n                        to={{\n                          pathname: '/projects/create',\n                          query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                        }}>\n                        {translate('onboarding.create_project.update_your_token')}\n                      </Link>\n                    )\n                  }}\n                />\n              </Alert>\n            )}\n\n            {repositories.map(repo =>\n              repo.sqProjectKey ? (\n                <div\n                  className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"\n                  key={repo.id}>\n                  <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                  <div className=\"overflow-hidden\">\n                    <div className=\"little-spacer-bottom text-ellipsis\">\n                      <strong title={repo.name}>\n                        <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}</Link>\n                      </strong>\n                    </div>\n                    <em>{translate('onboarding.create_project.repository_imported')}</em>\n                  </div>\n                </div>\n              ) : (\n                <Radio\n                  checked={selectedRepository?.id === repo.id}\n                  className={classNames(\n                    'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',\n                    {\n                      disabled: disableRepositories,\n                      'text-muted': disableRepositories,\n                      'link-no-underline': disableRepositories\n                    }\n                  )}\n                  key={repo.id}\n                  onCheck={() => props.onSelectRepository(repo)}\n                  value={String(repo.id)}>\n                  <strong className=\"text-ellipsis\" title={repo.name}>\n                    {repo.name}\n                  </strong>\n                </Radio>\n              )\n            )}\n          </div>\n\n          {!showingAllRepositories && repositoryCount > 0 && (\n            <Alert variant=\"warning\">\n              {translateWithParameters(\n                'onboarding.create_project.only_showing_X_first_repos',\n                repositoryCount\n              )}\n            </Alert>\n          )}\n        </>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq, without } from 'lodash';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../components/controls/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketRepositoriesProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  projectRepositories: BitbucketProjectRepositories;\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketRepositories(props: BitbucketRepositoriesProps) {\n  const { disableRepositories, projects, projectRepositories, selectedRepository } = props;\n\n  const [openProjectKeys, setOpenProjectKeys] = React.useState(\n    projects.length > 0 ? [projects[0].key] : []\n  );\n\n  const allAreExpanded = projects.length <= openProjectKeys.length;\n\n  const handleClick = (isOpen: boolean, projectKey: string) => {\n    setOpenProjectKeys(\n      isOpen ? without(openProjectKeys, projectKey) : uniq([...openProjectKeys, projectKey])\n    );\n  };\n\n  return (\n    <>\n      <div className=\"overflow-hidden spacer-bottom\">\n        <ButtonLink\n          className=\"pull-right\"\n          onClick={() => setOpenProjectKeys(allAreExpanded ? [] : projects.map(p => p.key))}>\n          {allAreExpanded ? translate('collapse_all') : translate('expand_all')}\n        </ButtonLink>\n      </div>\n\n      {projects.map(project => {\n        const isOpen = openProjectKeys.includes(project.key);\n        const { allShown, repositories = [] } = projectRepositories[project.key] || {};\n\n        return (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            key={project.key}\n            onClick={() => handleClick(isOpen, project.key)}\n            onSelectRepository={props.onSelectRepository}\n            open={isOpen}\n            project={project}\n            repositories={repositories}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={allShown}\n          />\n        );\n      })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from '../../../components/ui/Alert';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketSearchResultsProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketSearchResults(props: BitbucketSearchResultsProps) {\n  const {\n    disableRepositories,\n    projects,\n    searching,\n    searchResults = [],\n    selectedRepository\n  } = props;\n\n  if (searchResults.length === 0 && !searching) {\n    return (\n      <Alert className=\"big-spacer-top\" variant=\"warning\">\n        {translate('onboarding.create_project.no_bbs_repos.filter')}\n      </Alert>\n    );\n  }\n\n  const filteredProjects = projects.filter(p => searchResults.some(r => r.projectKey === p.key));\n  const filteredProjectKeys = filteredProjects.map(p => p.key);\n  const filteredSearchResults = searchResults.filter(\n    r => !filteredProjectKeys.includes(r.projectKey)\n  );\n\n  return (\n    <div className=\"big-spacer-top\">\n      <DeferredSpinner loading={searching}>\n        {filteredSearchResults.length > 0 && (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            onSelectRepository={props.onSelectRepository}\n            open={true}\n            repositories={filteredSearchResults}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={true}\n          />\n        )}\n\n        {filteredProjects.map(project => {\n          const repositories = searchResults.filter(r => r.projectKey === project.key);\n\n          return (\n            <BitbucketProjectAccordion\n              disableRepositories={disableRepositories}\n              key={project.key}\n              onSelectRepository={props.onSelectRepository}\n              open={true}\n              project={project}\n              repositories={repositories}\n              selectedRepository={selectedRepository}\n              showingAllRepositories={true}\n            />\n          );\n        })}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport SearchBox from '../../../components/controls/SearchBox';\nimport { Alert } from '../../../components/ui/Alert';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketRepositories from './BitbucketRepositories';\nimport BitbucketSearchResults from './BitbucketSearchResults';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketImportRepositoryFormProps {\n  disableRepositories: boolean;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketImportRepositoryForm(props: BitbucketImportRepositoryFormProps) {\n  const {\n    disableRepositories,\n    projects = [],\n    projectRepositories = {},\n    searchResults,\n    searching,\n    selectedRepository\n  } = props;\n\n  if (projects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.no_bbs_projects')}\n          id=\"onboarding.create_project.no_bbs_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"create-project-import-bbs\">\n      <SearchBox\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.search_repositories_by_name')}\n      />\n\n      {searching || searchResults ? (\n        <BitbucketSearchResults\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projects={projects}\n          searchResults={searchResults}\n          searching={searching}\n          selectedRepository={selectedRepository}\n        />\n      ) : (\n        <BitbucketRepositories\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projectRepositories={projectRepositories}\n          projects={projects}\n          selectedRepository={selectedRepository}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from '../../../components/controls/buttons';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketImportRepositoryForm from './BitbucketImportRepositoryForm';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport PersonalAccessTokenForm from './PersonalAccessTokenForm';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface BitbucketProjectCreateRendererProps {\n  bitbucketSetting?: AlmSettingsInstance;\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  onImportRepository: () => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  onPersonalAccessTokenCreated: () => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  resetPat: boolean;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showPersonalAccessTokenForm?: boolean;\n}\n\nexport default function BitbucketProjectCreateRenderer(props: BitbucketProjectCreateRendererProps) {\n  const {\n    bitbucketSetting,\n    canAdmin,\n    importing,\n    loading,\n    projects,\n    projectRepositories,\n    selectedRepository,\n    searching,\n    searchResults,\n    showPersonalAccessTokenForm,\n    resetPat\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            {translate('onboarding.create_project.from_bbs')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !bitbucketSetting && (\n        <WrongBindingCountAlert alm={AlmKeys.BitbucketServer} canAdmin={!!canAdmin} />\n      )}\n\n      {!loading &&\n        bitbucketSetting &&\n        (showPersonalAccessTokenForm ? (\n          <PersonalAccessTokenForm\n            almSetting={bitbucketSetting}\n            onPersonalAccessTokenCreated={props.onPersonalAccessTokenCreated}\n            resetPat={resetPat}\n          />\n        ) : (\n          <BitbucketImportRepositoryForm\n            disableRepositories={importing}\n            onSearch={props.onSearch}\n            onSelectRepository={props.onSelectRepository}\n            projectRepositories={projectRepositories}\n            projects={projects}\n            searchResults={searchResults}\n            searching={searching}\n            selectedRepository={selectedRepository}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  getBitbucketServerProjects,\n  getBitbucketServerRepositories,\n  importBitbucketServerProject,\n  searchForBitbucketServerRepositories\n} from '../../../api/alm-integrations';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketCreateProjectRenderer from './BitbucketProjectCreateRenderer';\nimport { DEFAULT_BBS_PAGE_SIZE } from './constants';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  bitbucketSettings: AlmSettingsInstance[];\n  loadingBindings: boolean;\n  onProjectCreate: (projectKey: string) => void;\n}\n\ninterface State {\n  bitbucketSetting?: AlmSettingsInstance;\n  importing: boolean;\n  loading: boolean;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showPersonalAccessTokenForm: boolean;\n}\n\nexport default class BitbucketProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      bitbucketSetting: props.bitbucketSettings[0],\n      importing: false,\n      loading: false,\n      searching: false,\n      showPersonalAccessTokenForm: true\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.bitbucketSettings.length === 0 && this.props.bitbucketSettings.length > 0) {\n      this.setState({ bitbucketSetting: this.props.bitbucketSettings[0] }, () =>\n        this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    const { showPersonalAccessTokenForm } = this.state;\n\n    if (!showPersonalAccessTokenForm) {\n      this.setState({ loading: true });\n      const projects = await this.fetchBitbucketProjects().catch(() => undefined);\n\n      let projectRepositories;\n      if (projects && projects.length > 0) {\n        projectRepositories = await this.fetchBitbucketRepositories(projects).catch(\n          () => undefined\n        );\n      }\n\n      if (this.mounted) {\n        this.setState({\n          projects,\n          projectRepositories,\n          loading: false\n        });\n      }\n    }\n  };\n\n  fetchBitbucketProjects = (): Promise<BitbucketProject[] | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return getBitbucketServerProjects(bitbucketSetting.key).then(({ projects }) => projects);\n  };\n\n  fetchBitbucketRepositories = (\n    projects: BitbucketProject[]\n  ): Promise<BitbucketProjectRepositories | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return Promise.all(\n      projects.map(p => {\n        return getBitbucketServerRepositories(bitbucketSetting.key, p.name).then(\n          ({ isLastPage, repositories }) => {\n            // Because the WS uses the project name rather than its key to find\n            // repositories, we can match more repositories than we expect. For\n            // example, p.name = \"A1\" would find repositories for projects \"A1\",\n            // \"A10\", \"A11\", etc. This is a limitation of BBS. To make sure we\n            // don't display incorrect information, filter on the project key.\n            const filteredRepositories = repositories.filter(r => r.projectKey === p.key);\n\n            // And because of the above, the \"isLastPage\" cannot be relied upon\n            // either. This one is impossible to get 100% for now. We can only\n            // make some assumptions: by default, the page size for BBS is 25\n            // (this is not part of the payload, so we don't know the actual\n            // number; but changing this implies changing some advanced config,\n            // so it's not likely). If the filtered repos is larger than this\n            // number AND isLastPage is false, we'll keep it at false.\n            // Otherwise, we assume it's true.\n            const realIsLastPage =\n              isLastPage || filteredRepositories.length < DEFAULT_BBS_PAGE_SIZE;\n\n            return {\n              repositories: filteredRepositories,\n              isLastPage: realIsLastPage,\n              projectKey: p.key\n            };\n          }\n        );\n      })\n    ).then(results => {\n      return results.reduce(\n        (acc: BitbucketProjectRepositories, { isLastPage, projectKey, repositories }) => {\n          return { ...acc, [projectKey]: { allShown: isLastPage, repositories } };\n        },\n        {}\n      );\n    });\n  };\n\n  cleanUrl = () => {\n    const { location, router } = this.props;\n    delete location.query.resetPat;\n    router.replace(location);\n  };\n\n  handlePersonalAccessTokenCreated = async () => {\n    this.setState({ showPersonalAccessTokenForm: false });\n    this.cleanUrl();\n    await this.fetchInitialData();\n  };\n\n  handleImportRepository = () => {\n    const { bitbucketSetting, selectedRepository } = this.state;\n\n    if (!bitbucketSetting || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n    importBitbucketServerProject(\n      bitbucketSetting.key,\n      selectedRepository.projectKey,\n      selectedRepository.slug\n    )\n      .then(({ project: { key } }) => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n          this.props.onProjectCreate(key);\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      });\n  };\n\n  handleSearch = (query: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return;\n    }\n\n    if (!query) {\n      this.setState({ searching: false, searchResults: undefined, selectedRepository: undefined });\n      return;\n    }\n\n    this.setState({ searching: true, selectedRepository: undefined });\n    searchForBitbucketServerRepositories(bitbucketSetting.key, query)\n      .then(({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ searching: false, searchResults: repositories });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ searching: false });\n        }\n      });\n  };\n\n  handleSelectRepository = (selectedRepository: BitbucketRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      bitbucketSetting,\n      importing,\n      loading,\n      projectRepositories,\n      projects,\n      searching,\n      searchResults,\n      selectedRepository,\n      showPersonalAccessTokenForm\n    } = this.state;\n\n    return (\n      <BitbucketCreateProjectRenderer\n        bitbucketSetting={bitbucketSetting}\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        onImportRepository={this.handleImportRepository}\n        onPersonalAccessTokenCreated={this.handlePersonalAccessTokenCreated}\n        onSearch={this.handleSearch}\n        onSelectRepository={this.handleSelectRepository}\n        projectRepositories={projectRepositories}\n        projects={projects}\n        resetPat={Boolean(location.query.resetPat)}\n        searchResults={searchResults}\n        searching={searching}\n        selectedRepository={selectedRepository}\n        showPersonalAccessTokenForm={\n          showPersonalAccessTokenForm || Boolean(location.query.resetPat)\n        }\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const PROJECT_NAME_MAX_LEN = 255;\n\nexport const DEFAULT_BBS_PAGE_SIZE = 25;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport ChevronsIcon from '../../../components/icons/ChevronsIcon';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { AlmKeys } from '../../../types/alm-settings';\nimport { CreateProjectModes } from './types';\n\nexport interface CreateProjectModeSelectionProps {\n  almCounts: {\n    [k in AlmKeys]: number;\n  };\n  appState: Pick<T.AppState, 'canAdmin'>;\n  loadingBindings: boolean;\n  onSelectMode: (mode: CreateProjectModes) => void;\n  onConfigMode: (mode: AlmKeys) => void;\n}\n\nconst DEFAULT_ICON_SIZE = 50;\n\nfunction renderAlmOption(\n  props: CreateProjectModeSelectionProps,\n  alm: AlmKeys.Azure | AlmKeys.BitbucketServer | AlmKeys.GitHub | AlmKeys.GitLab,\n  mode: CreateProjectModes,\n  last = false\n) {\n  const {\n    almCounts,\n    appState: { canAdmin },\n    loadingBindings\n  } = props;\n\n  const hasBitbucketCloudConf = almCounts[AlmKeys.BitbucketCloud] > 0;\n  const isBitbucketOption = alm === AlmKeys.BitbucketServer;\n\n  const count = isBitbucketOption\n    ? almCounts[AlmKeys.BitbucketServer] + almCounts[AlmKeys.BitbucketCloud]\n    : almCounts[alm];\n  const hasConfig = count > 0;\n  const hasTooManyConfig = count > 1;\n  const disabled = loadingBindings || hasTooManyConfig || (!hasConfig && !canAdmin);\n\n  const onClick = () => {\n    if (hasTooManyConfig || (!hasConfig && !canAdmin)) {\n      return null;\n    }\n\n    if (!hasConfig && canAdmin) {\n      return props.onConfigMode(alm);\n    }\n\n    return props.onSelectMode(\n      isBitbucketOption && hasBitbucketCloudConf ? CreateProjectModes.BitbucketCloud : mode\n    );\n  };\n\n  let errorMessage = '';\n\n  if (hasTooManyConfig) {\n    errorMessage = translateWithParameters(\n      'onboarding.create_project.too_many_alm_instances_X',\n      translate('alm', alm)\n    );\n  } else if (!hasConfig) {\n    errorMessage = canAdmin\n      ? translate('onboarding.create_project.alm_not_configured.admin')\n      : translate('onboarding.create_project.alm_not_configured');\n  }\n\n  return (\n    <div className=\"display-flex-column\">\n      <button\n        className={classNames(\n          'button button-huge display-flex-column create-project-mode-type-alm',\n          { disabled, 'big-spacer-right': !last }\n        )}\n        disabled={disabled}\n        onClick={onClick}\n        type=\"button\">\n        <img\n          alt=\"\" // Should be ignored by screen readers\n          height={DEFAULT_ICON_SIZE}\n          src={`${getBaseUrl()}/images/alm/${alm}.svg`}\n        />\n        <div className=\"medium big-spacer-top abs-height-50 display-flex-center\">\n          {translate('onboarding.create_project.select_method', alm)}\n        </div>\n\n        {loadingBindings && (\n          <span>\n            {translate('onboarding.create_project.check_alm_supported')}\n            <i className=\"little-spacer-left spinner\" />\n          </span>\n        )}\n\n        {!loadingBindings && errorMessage && (\n          <p className=\"text-muted small spacer-top\" style={{ lineHeight: 1.5 }}>\n            {errorMessage}\n          </p>\n        )}\n      </button>\n    </div>\n  );\n}\n\nexport function CreateProjectModeSelection(props: CreateProjectModeSelectionProps) {\n  const {\n    appState: { canAdmin },\n    almCounts\n  } = props;\n  const almTotalCount = Object.values(almCounts).reduce((prev, cur) => prev + cur);\n\n  return (\n    <>\n      <h1 className=\"huge-spacer-top huge-spacer-bottom\">\n        {translate('onboarding.create_project.select_method')}\n      </h1>\n\n      <p>{translate('onboarding.create_project.select_method.devops_platform')}</p>\n      {almTotalCount === 0 && canAdmin && (\n        <p className=\"spacer-top\">\n          {translate('onboarding.create_project.select_method.no_alm_yet.admin')}\n        </p>\n      )}\n      <div className=\"big-spacer-top huge-spacer-bottom display-flex-center\">\n        {renderAlmOption(props, AlmKeys.Azure, CreateProjectModes.AzureDevOps)}\n        {renderAlmOption(props, AlmKeys.BitbucketServer, CreateProjectModes.BitbucketServer)}\n        {renderAlmOption(props, AlmKeys.GitHub, CreateProjectModes.GitHub)}\n        {renderAlmOption(props, AlmKeys.GitLab, CreateProjectModes.GitLab, true)}\n      </div>\n\n      <p className=\"big-spacer-bottom\">\n        {translate('onboarding.create_project.select_method.manually')}\n      </p>\n      <button\n        className=\"button button-huge display-flex-column create-project-mode-type-manual\"\n        onClick={() => props.onSelectMode(CreateProjectModes.Manual)}\n        type=\"button\">\n        <ChevronsIcon size={DEFAULT_ICON_SIZE} />\n        <div className=\"medium big-spacer-top\">\n          {translate('onboarding.create_project.select_method.manual')}\n        </div>\n      </button>\n    </>\n  );\n}\n\nexport default withAppState(CreateProjectModeSelection);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { colors } from '../../../app/theme';\nimport { Button } from '../../../components/controls/buttons';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport Radio from '../../../components/controls/Radio';\nimport SearchBox from '../../../components/controls/SearchBox';\nimport SearchSelect from '../../../components/controls/SearchSelect';\nimport CheckIcon from '../../../components/icons/CheckIcon';\nimport QualifierIcon from '../../../components/icons/QualifierIcon';\nimport { Alert } from '../../../components/ui/Alert';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { GithubOrganization, GithubRepository } from '../../../types/alm-integration';\nimport { ComponentQualifier } from '../../../types/component';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\n\nexport interface GitHubProjectCreateRendererProps {\n  canAdmin: boolean;\n  error: boolean;\n  importing: boolean;\n  loadingBindings: boolean;\n  loadingOrganizations: boolean;\n  loadingRepositories: boolean;\n  onImportRepository: () => void;\n  onLoadMore: () => void;\n  onSearch: (q: string) => void;\n  onSelectOrganization: (key: string) => void;\n  onSelectRepository: (key: string) => void;\n  organizations: GithubOrganization[];\n  repositories?: GithubRepository[];\n  repositoryPaging: T.Paging;\n  searchQuery: string;\n  selectedOrganization?: GithubOrganization;\n  selectedRepository?: GithubRepository;\n}\n\nfunction orgToOption({ key, name }: GithubOrganization) {\n  return { value: key, label: name };\n}\n\nconst handleSearch = (organizations: GithubOrganization[]) => (q: string) =>\n  Promise.resolve(organizations.filter(o => !q || o.name.includes(q)).map(orgToOption));\n\nfunction renderRepositoryList(props: GitHubProjectCreateRendererProps) {\n  const {\n    importing,\n    loadingRepositories,\n    repositories,\n    repositoryPaging,\n    searchQuery,\n    selectedOrganization,\n    selectedRepository\n  } = props;\n\n  const isChecked = (repository: GithubRepository) =>\n    !!repository.sqProjectKey ||\n    (!!selectedRepository && selectedRepository.key === repository.key);\n\n  const isDisabled = (repository: GithubRepository) =>\n    !!repository.sqProjectKey || loadingRepositories || importing;\n\n  return (\n    selectedOrganization &&\n    repositories && (\n      <div className=\"boxed-group padded display-flex-wrap\">\n        <div className=\"width-100\">\n          <SearchBox\n            className=\"big-spacer-bottom\"\n            onChange={props.onSearch}\n            placeholder={translate('onboarding.create_project.search_repositories')}\n            value={searchQuery}\n          />\n        </div>\n\n        {repositories.length === 0 ? (\n          <div className=\"padded\">\n            <DeferredSpinner loading={loadingRepositories}>\n              {translate('no_results')}\n            </DeferredSpinner>\n          </div>\n        ) : (\n          repositories.map(r => (\n            <Radio\n              className=\"spacer-top spacer-bottom padded create-project-github-repository\"\n              key={r.key}\n              checked={isChecked(r)}\n              disabled={isDisabled(r)}\n              value={r.key}\n              onCheck={props.onSelectRepository}>\n              <div className=\"big overflow-hidden max-width-100\" title={r.name}>\n                <div className=\"text-ellipsis\">\n                  {r.sqProjectKey ? (\n                    <div className=\"display-flex-center max-width-100\">\n                      <Link\n                        className=\"display-flex-center max-width-60\"\n                        to={getProjectUrl(r.sqProjectKey)}>\n                        <QualifierIcon\n                          className=\"spacer-right\"\n                          qualifier={ComponentQualifier.Project}\n                        />\n                        <span className=\"text-ellipsis\">{r.name}</span>\n                      </Link>\n                      <em className=\"display-flex-center small big-spacer-left flex-0\">\n                        <span className=\"text-muted-2\">\n                          {translate('onboarding.create_project.repository_imported')}\n                        </span>\n                        <CheckIcon className=\"little-spacer-left\" size={12} fill={colors.green} />\n                      </em>\n                    </div>\n                  ) : (\n                    r.name\n                  )}\n                </div>\n                {r.url && (\n                  <a\n                    className=\"notice small display-flex-center little-spacer-top\"\n                    onClick={e => e.stopPropagation()}\n                    target=\"_blank\"\n                    href={r.url}\n                    rel=\"noopener noreferrer\">\n                    {translate('onboarding.create_project.see_on_github')}\n                  </a>\n                )}\n              </div>\n            </Radio>\n          ))\n        )}\n\n        <div className=\"display-flex-justify-center width-100\">\n          <ListFooter\n            count={repositories.length}\n            total={repositoryPaging.total}\n            loadMore={props.onLoadMore}\n            loading={loadingRepositories}\n          />\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default function GitHubProjectCreateRenderer(props: GitHubProjectCreateRendererProps) {\n  const {\n    canAdmin,\n    error,\n    importing,\n    loadingBindings,\n    loadingOrganizations,\n    organizations,\n    selectedOrganization,\n    selectedRepository\n  } = props;\n\n  if (loadingBindings) {\n    return <DeferredSpinner />;\n  }\n\n  return (\n    <div>\n      <CreateProjectPageHeader\n        additionalActions={\n          selectedOrganization && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        title={\n          <span className=\"text-middle display-flex-center\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height={24}\n              src={`${getBaseUrl()}/images/alm/github.svg`}\n            />\n            {translate('onboarding.create_project.github.title')}\n          </span>\n        }\n      />\n\n      {error ? (\n        <div className=\"display-flex-justify-center\">\n          <div className=\"boxed-group padded width-50 huge-spacer-top\">\n            <h2 className=\"big-spacer-bottom\">\n              {translate('onboarding.create_project.github.warning.title')}\n            </h2>\n            <Alert variant=\"warning\">\n              {canAdmin ? (\n                <FormattedMessage\n                  id=\"onboarding.create_project.github.warning.message_admin\"\n                  defaultMessage={translate(\n                    'onboarding.create_project.github.warning.message_admin'\n                  )}\n                  values={{\n                    link: (\n                      <Link to=\"/admin/settings?category=almintegration\">\n                        {translate('onboarding.create_project.github.warning.message_admin.link')}\n                      </Link>\n                    )\n                  }}\n                />\n              ) : (\n                translate('onboarding.create_project.github.warning.message')\n              )}\n            </Alert>\n          </div>\n        </div>\n      ) : (\n        <DeferredSpinner loading={loadingOrganizations}>\n          <div className=\"form-field\">\n            <label>{translate('onboarding.create_project.github.choose_organization')}</label>\n            {organizations.length > 0 ? (\n              <SearchSelect\n                defaultOptions={organizations.map(orgToOption)}\n                onSearch={handleSearch(organizations)}\n                minimumQueryLength={0}\n                onSelect={({ value }) => props.onSelectOrganization(value)}\n                value={selectedOrganization && orgToOption(selectedOrganization)}\n              />\n            ) : (\n              !loadingOrganizations && (\n                <Alert className=\"spacer-top\" variant=\"error\">\n                  {canAdmin ? (\n                    <FormattedMessage\n                      id=\"onboarding.create_project.github.no_orgs_admin\"\n                      defaultMessage={translate('onboarding.create_project.github.no_orgs_admin')}\n                      values={{\n                        link: (\n                          <Link to=\"/admin/settings?category=almintegration\">\n                            {translate(\n                              'onboarding.create_project.github.warning.message_admin.link'\n                            )}\n                          </Link>\n                        )\n                      }}\n                    />\n                  ) : (\n                    translate('onboarding.create_project.github.no_orgs')\n                  )}\n                </Alert>\n              )\n            )}\n          </div>\n        </DeferredSpinner>\n      )}\n\n      {renderRepositoryList(props)}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  getGithubClientId,\n  getGithubOrganizations,\n  getGithubRepositories,\n  importGithubRepository\n} from '../../../api/alm-integrations';\nimport { getHostUrl } from '../../../helpers/urls';\nimport { GithubOrganization, GithubRepository } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport GitHubProjectCreateRenderer from './GitHubProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKey: string) => void;\n  settings: AlmSettingsInstance[];\n}\n\ninterface State {\n  error: boolean;\n  importing: boolean;\n  loadingOrganizations: boolean;\n  loadingRepositories: boolean;\n  organizations: GithubOrganization[];\n  repositoryPaging: T.Paging;\n  repositories: GithubRepository[];\n  searchQuery: string;\n  selectedOrganization?: GithubOrganization;\n  selectedRepository?: GithubRepository;\n  settings?: AlmSettingsInstance;\n}\n\nconst REPOSITORY_PAGE_SIZE = 30;\n\nexport default class GitHubProjectCreate extends React.Component<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      importing: false,\n      loadingOrganizations: true,\n      loadingRepositories: false,\n      organizations: [],\n      repositories: [],\n      repositoryPaging: { pageSize: REPOSITORY_PAGE_SIZE, total: 0, pageIndex: 1 },\n      searchQuery: '',\n      settings: props.settings[0]\n    };\n\n    this.triggerSearch = debounce(this.triggerSearch, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    this.initialize();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState({ settings: this.props.settings[0] }, () => this.initialize());\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  async initialize() {\n    const { location, router } = this.props;\n    const { settings } = this.state;\n\n    if (!settings || !settings.url) {\n      this.setState({ error: true });\n      return;\n    } else {\n      this.setState({ error: false });\n    }\n\n    const code = location.query?.code;\n\n    try {\n      if (!code) {\n        await this.redirectToGithub(settings);\n      } else {\n        delete location.query.code;\n        router.replace(location);\n        await this.fetchOrganizations(settings, code);\n      }\n    } catch (e) {\n      if (this.mounted) {\n        this.setState({ error: true });\n      }\n    }\n  }\n\n  async redirectToGithub(settings: AlmSettingsInstance) {\n    if (!settings.url) {\n      return;\n    }\n\n    const { clientId } = await getGithubClientId(settings.key);\n\n    if (!clientId) {\n      this.setState({ error: true });\n      return;\n    }\n\n    const queryParams = [\n      { param: 'client_id', value: clientId },\n      { param: 'redirect_uri', value: `${getHostUrl()}/projects/create?mode=${AlmKeys.GitHub}` }\n    ]\n      .map(({ param, value }) => `${param}=${value}`)\n      .join('&');\n\n    let instanceRootUrl;\n    // Strip the api section from the url, since we're not hitting the api here.\n    if (settings.url.includes('/api/v3')) {\n      // GitHub Enterprise\n      instanceRootUrl = settings.url.replace('/api/v3', '');\n    } else {\n      // github.com\n      instanceRootUrl = settings.url.replace('api.', '');\n    }\n\n    // strip the trailing /\n    instanceRootUrl = instanceRootUrl.replace(/\\/$/, '');\n    window.location.replace(`${instanceRootUrl}/login/oauth/authorize?${queryParams}`);\n  }\n\n  async fetchOrganizations(settings: AlmSettingsInstance, token: string) {\n    const { organizations } = await getGithubOrganizations(settings.key, token);\n\n    if (this.mounted) {\n      this.setState({ loadingOrganizations: false, organizations });\n    }\n  }\n\n  async fetchRepositories(params: { organizationKey: string; page?: number; query?: string }) {\n    const { organizationKey, page = 1, query } = params;\n    const { settings } = this.state;\n\n    if (!settings) {\n      this.setState({ error: true });\n      return;\n    }\n\n    this.setState({ loadingRepositories: true });\n\n    try {\n      const data = await getGithubRepositories({\n        almSetting: settings.key,\n        organization: organizationKey,\n        pageSize: REPOSITORY_PAGE_SIZE,\n        page,\n        query\n      });\n\n      if (this.mounted) {\n        this.setState(({ repositories }) => ({\n          loadingRepositories: false,\n          repositoryPaging: data.paging,\n          repositories: page === 1 ? data.repositories : [...repositories, ...data.repositories]\n        }));\n      }\n    } catch (_) {\n      if (this.mounted) {\n        this.setState({\n          loadingRepositories: false,\n          repositoryPaging: { pageIndex: 1, pageSize: REPOSITORY_PAGE_SIZE, total: 0 },\n          repositories: []\n        });\n      }\n    }\n  }\n\n  triggerSearch = (query: string) => {\n    const { selectedOrganization } = this.state;\n    if (selectedOrganization) {\n      this.setState({ selectedRepository: undefined });\n      this.fetchRepositories({ organizationKey: selectedOrganization.key, query });\n    }\n  };\n\n  handleSelectOrganization = (key: string) => {\n    this.setState(({ organizations }) => ({\n      searchQuery: '',\n      selectedRepository: undefined,\n      selectedOrganization: organizations.find(o => o.key === key)\n    }));\n    this.fetchRepositories({ organizationKey: key });\n  };\n\n  handleSelectRepository = (key: string) => {\n    this.setState(({ repositories }) => ({\n      selectedRepository: repositories?.find(r => r.key === key)\n    }));\n  };\n\n  handleSearch = (searchQuery: string) => {\n    this.setState({ searchQuery });\n    this.triggerSearch(searchQuery);\n  };\n\n  handleLoadMore = () => {\n    const { repositoryPaging, searchQuery, selectedOrganization } = this.state;\n\n    if (selectedOrganization) {\n      this.fetchRepositories({\n        organizationKey: selectedOrganization.key,\n        page: repositoryPaging.pageIndex + 1,\n        query: searchQuery\n      });\n    }\n  };\n\n  handleImportRepository = async () => {\n    const { selectedOrganization, selectedRepository, settings } = this.state;\n\n    if (settings && selectedOrganization && selectedRepository) {\n      this.setState({ importing: true });\n\n      try {\n        const { project } = await importGithubRepository(\n          settings.key,\n          selectedOrganization.key,\n          selectedRepository.key\n        );\n\n        this.props.onProjectCreate(project.key);\n      } finally {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      }\n    }\n  };\n\n  render() {\n    const { canAdmin, loadingBindings } = this.props;\n    const {\n      error,\n      importing,\n      loadingOrganizations,\n      loadingRepositories,\n      organizations,\n      repositoryPaging,\n      repositories,\n      searchQuery,\n      selectedOrganization,\n      selectedRepository\n    } = this.state;\n\n    return (\n      <GitHubProjectCreateRenderer\n        canAdmin={canAdmin}\n        error={error}\n        importing={importing}\n        loadingBindings={loadingBindings}\n        loadingOrganizations={loadingOrganizations}\n        loadingRepositories={loadingRepositories}\n        onImportRepository={this.handleImportRepository}\n        onLoadMore={this.handleLoadMore}\n        onSearch={this.handleSearch}\n        onSelectOrganization={this.handleSelectOrganization}\n        onSelectRepository={this.handleSelectRepository}\n        organizations={organizations}\n        repositoryPaging={repositoryPaging}\n        searchQuery={searchQuery}\n        repositories={repositories}\n        selectedOrganization={selectedOrganization}\n        selectedRepository={selectedRepository}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from '../../../components/controls/buttons';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport SearchBox from '../../../components/controls/SearchBox';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport CheckIcon from '../../../components/icons/CheckIcon';\nimport DetachIcon from '../../../components/icons/DetachIcon';\nimport QualifierIcon from '../../../components/icons/QualifierIcon';\nimport { Alert } from '../../../components/ui/Alert';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport { translate } from '../../../helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { GitlabProject } from '../../../types/alm-integration';\nimport { ComponentQualifier } from '../../../types/component';\nimport { CreateProjectModes } from './types';\n\nexport interface GitlabProjectSelectionFormProps {\n  importingGitlabProjectId?: string;\n  loadingMore: boolean;\n  onImport: (gitlabProjectId: string) => void;\n  onLoadMore: () => void;\n  onSearch: (searchQuery: string) => void;\n  projects?: GitlabProject[];\n  projectsPaging: T.Paging;\n  searching: boolean;\n  searchQuery: string;\n}\n\nexport default function GitlabProjectSelectionForm(props: GitlabProjectSelectionFormProps) {\n  const {\n    importingGitlabProjectId,\n    loadingMore,\n    projects = [],\n    projectsPaging,\n    searching,\n    searchQuery\n  } = props;\n\n  if (projects.length === 0 && searchQuery.length === 0 && !searching) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.gitlab.no_projects')}\n          id=\"onboarding.create_project.gitlab.no_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.GitLab, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"boxed-group big-padded create-project-import\">\n      <SearchBox\n        className=\"spacer\"\n        loading={searching}\n        minLength={3}\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.search_prompt')}\n      />\n\n      <hr />\n\n      {projects.length === 0 ? (\n        <div className=\"padded\">{translate('no_results')}</div>\n      ) : (\n        <table className=\"data zebra zebra-hover\">\n          <tbody>\n            {projects.map(project => (\n              <tr key={project.id}>\n                <td>\n                  <Tooltip overlay={project.slug}>\n                    <strong className=\"project-name display-inline-block text-ellipsis\">\n                      {project.sqProjectKey ? (\n                        <Link to={getProjectUrl(project.sqProjectKey)}>\n                          <QualifierIcon\n                            className=\"spacer-right\"\n                            qualifier={ComponentQualifier.Project}\n                          />\n                          {project.sqProjectName}\n                        </Link>\n                      ) : (\n                        project.name\n                      )}\n                    </strong>\n                  </Tooltip>\n                  <br />\n                  <Tooltip overlay={project.pathSlug}>\n                    <span className=\"text-muted project-path display-inline-block text-ellipsis\">\n                      {project.pathName}\n                    </span>\n                  </Tooltip>\n                </td>\n                <td>\n                  <a\n                    className=\"display-inline-flex-center big-spacer-right\"\n                    href={project.url}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    <DetachIcon className=\"little-spacer-right\" />\n                    {translate('onboarding.create_project.gitlab.link')}\n                  </a>\n                </td>\n                {project.sqProjectKey ? (\n                  <td>\n                    <span className=\"display-flex-center display-flex-justify-end already-set-up\">\n                      <CheckIcon className=\"little-spacer-right\" size={12} />\n                      {translate('onboarding.create_project.repository_imported')}\n                    </span>\n                  </td>\n                ) : (\n                  <td className=\"text-right\">\n                    <Button\n                      disabled={!!importingGitlabProjectId}\n                      onClick={() => props.onImport(project.id)}>\n                      {translate('onboarding.create_project.set_up')}\n                      {importingGitlabProjectId === project.id && (\n                        <DeferredSpinner className=\"spacer-left\" />\n                      )}\n                    </Button>\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <ListFooter\n        count={projects.length}\n        loadMore={props.onLoadMore}\n        loading={loadingMore}\n        total={projectsPaging.total}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { GitlabProject } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport GitlabProjectSelectionForm from './GitlabProjectSelectionForm';\nimport PersonalAccessTokenForm from './PersonalAccessTokenForm';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface GitlabProjectCreateRendererProps {\n  canAdmin?: boolean;\n  importingGitlabProjectId?: string;\n  loading: boolean;\n  loadingMore: boolean;\n  onImport: (gitlabProjectId: string) => void;\n  onLoadMore: () => void;\n  onPersonalAccessTokenCreated: () => void;\n  onSearch: (searchQuery: string) => void;\n  projects?: GitlabProject[];\n  projectsPaging: T.Paging;\n  resetPat: boolean;\n  searching: boolean;\n  searchQuery: string;\n  settings?: AlmSettingsInstance;\n  showPersonalAccessTokenForm?: boolean;\n}\n\nexport default function GitlabProjectCreateRenderer(props: GitlabProjectCreateRendererProps) {\n  const {\n    canAdmin,\n    importingGitlabProjectId,\n    loading,\n    loadingMore,\n    projects,\n    projectsPaging,\n    resetPat,\n    searching,\n    searchQuery,\n    settings,\n    showPersonalAccessTokenForm\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n            />\n            {translate('onboarding.create_project.gitlab.title')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !settings && (\n        <WrongBindingCountAlert alm={AlmKeys.GitLab} canAdmin={!!canAdmin} />\n      )}\n\n      {!loading &&\n        settings &&\n        (showPersonalAccessTokenForm ? (\n          <PersonalAccessTokenForm\n            almSetting={settings}\n            resetPat={resetPat}\n            onPersonalAccessTokenCreated={props.onPersonalAccessTokenCreated}\n          />\n        ) : (\n          <GitlabProjectSelectionForm\n            importingGitlabProjectId={importingGitlabProjectId}\n            loadingMore={loadingMore}\n            onImport={props.onImport}\n            onLoadMore={props.onLoadMore}\n            onSearch={props.onSearch}\n            projects={projects}\n            projectsPaging={projectsPaging}\n            searching={searching}\n            searchQuery={searchQuery}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport { getGitlabProjects, importGitlabProject } from '../../../api/alm-integrations';\nimport { GitlabProject } from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport GitlabProjectCreateRenderer from './GitlabProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKey: string) => void;\n  settings: AlmSettingsInstance[];\n}\n\ninterface State {\n  importingGitlabProjectId?: string;\n  loading: boolean;\n  loadingMore: boolean;\n  projects?: GitlabProject[];\n  projectsPaging: T.Paging;\n  resetPat: boolean;\n  searching: boolean;\n  searchQuery: string;\n  settings?: AlmSettingsInstance;\n  showPersonalAccessTokenForm: boolean;\n}\n\nconst GITLAB_PROJECTS_PAGESIZE = 30;\n\nexport default class GitlabProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingMore: false,\n      projectsPaging: { pageIndex: 1, total: 0, pageSize: GITLAB_PROJECTS_PAGESIZE },\n      resetPat: false,\n      showPersonalAccessTokenForm: true,\n      searching: false,\n      searchQuery: '',\n      settings: props.settings.length === 1 ? props.settings[0] : undefined\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState(\n        { settings: this.props.settings.length === 1 ? this.props.settings[0] : undefined },\n        () => this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    const { showPersonalAccessTokenForm } = this.state;\n\n    if (!showPersonalAccessTokenForm) {\n      this.setState({ loading: true });\n      const result = await this.fetchProjects();\n      if (this.mounted && result) {\n        const { projects, projectsPaging } = result;\n\n        this.setState({\n          loading: false,\n          projects,\n          projectsPaging\n        });\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    }\n  };\n\n  handleError = () => {\n    if (this.mounted) {\n      this.setState({ resetPat: true, showPersonalAccessTokenForm: true });\n    }\n\n    return undefined;\n  };\n\n  fetchProjects = async (pageIndex = 1, query?: string) => {\n    const { settings } = this.state;\n    if (!settings) {\n      return Promise.resolve(undefined);\n    }\n\n    try {\n      return await getGitlabProjects({\n        almSetting: settings.key,\n        page: pageIndex,\n        pageSize: GITLAB_PROJECTS_PAGESIZE,\n        query\n      });\n    } catch (_) {\n      return this.handleError();\n    }\n  };\n\n  doImport = async (gitlabProjectId: string) => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(undefined);\n    }\n\n    try {\n      return await importGitlabProject({\n        almSetting: settings.key,\n        gitlabProjectId\n      });\n    } catch (_) {\n      return this.handleError();\n    }\n  };\n\n  handleImport = async (gitlabProjectId: string) => {\n    this.setState({ importingGitlabProjectId: gitlabProjectId });\n\n    const result = await this.doImport(gitlabProjectId);\n\n    if (this.mounted) {\n      this.setState({ importingGitlabProjectId: undefined });\n\n      if (result) {\n        this.props.onProjectCreate(result.project.key);\n      }\n    }\n  };\n\n  handleLoadMore = async () => {\n    this.setState({ loadingMore: true });\n\n    const {\n      projectsPaging: { pageIndex },\n      searchQuery\n    } = this.state;\n\n    const result = await this.fetchProjects(pageIndex + 1, searchQuery);\n\n    if (this.mounted) {\n      this.setState(({ projects = [], projectsPaging }) => ({\n        loadingMore: false,\n        projects: result ? [...projects, ...result.projects] : projects,\n        projectsPaging: result ? result.projectsPaging : projectsPaging\n      }));\n    }\n  };\n\n  handleSearch = async (searchQuery: string) => {\n    this.setState({ searching: true, searchQuery });\n\n    const result = await this.fetchProjects(1, searchQuery);\n\n    if (this.mounted) {\n      this.setState(({ projects, projectsPaging }) => ({\n        searching: false,\n        projects: result ? result.projects : projects,\n        projectsPaging: result ? result.projectsPaging : projectsPaging\n      }));\n    }\n  };\n\n  cleanUrl = () => {\n    const { location, router } = this.props;\n    delete location.query.resetPat;\n    router.replace(location);\n  };\n\n  handlePersonalAccessTokenCreated = async () => {\n    this.setState({ showPersonalAccessTokenForm: false, resetPat: false });\n    this.cleanUrl();\n    await this.fetchInitialData();\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      importingGitlabProjectId,\n      loading,\n      loadingMore,\n      projects,\n      projectsPaging,\n      resetPat,\n      searching,\n      searchQuery,\n      settings,\n      showPersonalAccessTokenForm\n    } = this.state;\n\n    return (\n      <GitlabProjectCreateRenderer\n        settings={settings}\n        canAdmin={canAdmin}\n        importingGitlabProjectId={importingGitlabProjectId}\n        loading={loading || loadingBindings}\n        loadingMore={loadingMore}\n        onImport={this.handleImport}\n        onLoadMore={this.handleLoadMore}\n        onPersonalAccessTokenCreated={this.handlePersonalAccessTokenCreated}\n        onSearch={this.handleSearch}\n        projects={projects}\n        projectsPaging={projectsPaging}\n        resetPat={resetPat || Boolean(location.query.resetPat)}\n        searching={searching}\n        searchQuery={searchQuery}\n        showPersonalAccessTokenForm={\n          showPersonalAccessTokenForm || Boolean(location.query.resetPat)\n        }\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { createProject, doesComponentExists } from '../../../api/components';\nimport ProjectKeyInput from '../../../components/common/ProjectKeyInput';\nimport { SubmitButton } from '../../../components/controls/buttons';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport { Alert } from '../../../components/ui/Alert';\nimport DeferredSpinner from '../../../components/ui/DeferredSpinner';\nimport MandatoryFieldsExplanation from '../../../components/ui/MandatoryFieldsExplanation';\nimport { translate } from '../../../helpers/l10n';\nimport { PROJECT_KEY_INVALID_CHARACTERS, validateProjectKey } from '../../../helpers/projects';\nimport { ProjectKeyValidationResult } from '../../../types/component';\nimport { PROJECT_NAME_MAX_LEN } from './constants';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport './ManualProjectCreate.css';\n\ninterface Props {\n  branchesEnabled: boolean;\n  onProjectCreate: (projectKey: string) => void;\n}\n\ninterface State {\n  projectName: string;\n  projectNameError?: string;\n  projectNameTouched?: boolean;\n  projectKey: string;\n  projectKeyError?: string;\n  projectKeyTouched?: boolean;\n  validatingProjectKey: boolean;\n  submitting: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      submitting: false,\n      validatingProjectKey: false\n    };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    this.setState({ validatingProjectKey: true });\n\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({\n            projectKeyError: alreadyExist\n              ? translate('onboarding.create_project.project_key.taken')\n              : undefined,\n            validatingProjectKey: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({ projectKeyError: undefined, validatingProjectKey: false });\n        }\n      });\n  };\n\n  canSubmit(state: State): state is ValidState {\n    const { projectKey, projectKeyError, projectName, projectNameError } = state;\n    return Boolean(\n      projectKeyError === undefined &&\n        projectNameError === undefined &&\n        projectKey.length > 0 &&\n        projectName.length > 0\n    );\n  }\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim()\n      }).then(\n        ({ project }) => this.props.onProjectCreate(project.key),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleProjectKeyChange = (projectKey: string, fromUI = false) => {\n    const projectKeyError = this.validateKey(projectKey);\n\n    this.setState({\n      projectKey,\n      projectKeyError,\n      projectKeyTouched: fromUI\n    });\n\n    if (projectKeyError === undefined) {\n      this.checkFreeKey(projectKey);\n    }\n  };\n\n  handleProjectNameChange = (projectName: string, fromUI = false) => {\n    this.setState(\n      {\n        projectName,\n        projectNameError: this.validateName(projectName),\n        projectNameTouched: fromUI\n      },\n      () => {\n        if (!this.state.projectKeyTouched) {\n          const sanitizedProjectKey = this.state.projectName\n            .trim()\n            .replace(PROJECT_KEY_INVALID_CHARACTERS, '-');\n          this.handleProjectKeyChange(sanitizedProjectKey);\n        }\n      }\n    );\n  };\n\n  validateKey = (projectKey: string) => {\n    const result = validateProjectKey(projectKey);\n    return result === ProjectKeyValidationResult.Valid\n      ? undefined\n      : translate('onboarding.create_project.project_key.error', result);\n  };\n\n  validateName = (projectName: string) => {\n    if (projectName.length === 0) {\n      return translate('onboarding.create_project.display_name.error.empty');\n    } else if (projectName.length > PROJECT_NAME_MAX_LEN) {\n      return translate('onboarding.create_project.display_name.error.too_long');\n    }\n    return undefined;\n  };\n\n  render() {\n    const {\n      projectKey,\n      projectKeyError,\n      projectKeyTouched,\n      projectName,\n      projectNameError,\n      projectNameTouched,\n      validatingProjectKey,\n      submitting\n    } = this.state;\n    const { branchesEnabled } = this.props;\n\n    const touched = !!(projectKeyTouched || projectNameTouched);\n    const projectNameIsInvalid = touched && projectNameError !== undefined;\n    const projectNameIsValid = touched && projectNameError === undefined;\n\n    return (\n      <>\n        <CreateProjectPageHeader title={translate('onboarding.create_project.setup_manually')} />\n\n        <div className=\"create-project-manual\">\n          <div className=\"flex-1 huge-spacer-right\">\n            <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n              <MandatoryFieldsExplanation className=\"big-spacer-bottom\" />\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.display_name.description')}\n                error={projectNameError}\n                id=\"project-name\"\n                isInvalid={projectNameIsInvalid}\n                isValid={projectNameIsValid}\n                label={translate('onboarding.create_project.display_name')}\n                required={true}>\n                <input\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectNameIsInvalid,\n                    'is-valid': projectNameIsValid\n                  })}\n                  id=\"project-name\"\n                  maxLength={PROJECT_NAME_MAX_LEN}\n                  minLength={1}\n                  onChange={e => this.handleProjectNameChange(e.currentTarget.value, true)}\n                  type=\"text\"\n                  value={projectName}\n                  autoFocus={true}\n                />\n              </ValidationInput>\n              <ProjectKeyInput\n                error={projectKeyError}\n                label={translate('onboarding.create_project.project_key')}\n                onProjectKeyChange={e => this.handleProjectKeyChange(e.currentTarget.value, true)}\n                projectKey={projectKey}\n                touched={touched}\n                validating={validatingProjectKey}\n              />\n\n              <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n                {translate('set_up')}\n              </SubmitButton>\n              <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n            </form>\n\n            {branchesEnabled && (\n              <Alert variant=\"info\" display=\"inline\" className=\"big-spacer-top\">\n                {translate('onboarding.create_project.pr_decoration.information')}\n              </Alert>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { WithRouterProps } from 'react-router';\nimport { getAlmSettings } from '../../../api/alm-settings';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport { translate } from '../../../helpers/l10n';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport AlmBindingDefinitionForm from '../../settings/components/almIntegration/AlmBindingDefinitionForm';\nimport AzureProjectCreate from './AzureProjectCreate';\nimport BitbucketCloudProjectCreate from './BitbucketCloudProjectCreate';\nimport BitbucketProjectCreate from './BitbucketProjectCreate';\nimport CreateProjectModeSelection from './CreateProjectModeSelection';\nimport GitHubProjectCreate from './GitHubProjectCreate';\nimport GitlabProjectCreate from './GitlabProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\nimport { CreateProjectModes } from './types';\n\ninterface Props extends Pick<WithRouterProps, 'router' | 'location'> {\n  appState: Pick<T.AppState, 'canAdmin' | 'branchesEnabled'>;\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  azureSettings: AlmSettingsInstance[];\n  bitbucketSettings: AlmSettingsInstance[];\n  bitbucketCloudSettings: AlmSettingsInstance[];\n  githubSettings: AlmSettingsInstance[];\n  gitlabSettings: AlmSettingsInstance[];\n  loading: boolean;\n  creatingAlmDefinition?: AlmKeys;\n}\n\nconst PROJECT_MODE_FOR_ALM_KEY = {\n  [AlmKeys.Azure]: CreateProjectModes.AzureDevOps,\n  [AlmKeys.BitbucketCloud]: CreateProjectModes.BitbucketCloud,\n  [AlmKeys.BitbucketServer]: CreateProjectModes.BitbucketServer,\n  [AlmKeys.GitHub]: CreateProjectModes.GitHub,\n  [AlmKeys.GitLab]: CreateProjectModes.GitLab\n};\n\nexport class CreateProjectPage extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    azureSettings: [],\n    bitbucketSettings: [],\n    bitbucketCloudSettings: [],\n    githubSettings: [],\n    gitlabSettings: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchAlmBindings();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchAlmBindings = () => {\n    this.setState({ loading: true });\n    return getAlmSettings()\n      .then(almSettings => {\n        if (this.mounted) {\n          this.setState({\n            azureSettings: almSettings.filter(s => s.alm === AlmKeys.Azure),\n            bitbucketSettings: almSettings.filter(s => s.alm === AlmKeys.BitbucketServer),\n            bitbucketCloudSettings: almSettings.filter(s => s.alm === AlmKeys.BitbucketCloud),\n            githubSettings: almSettings.filter(s => s.alm === AlmKeys.GitHub),\n            gitlabSettings: almSettings.filter(s => s.alm === AlmKeys.GitLab),\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleModeSelect = (mode: CreateProjectModes) => {\n    const { router, location } = this.props;\n    router.push({\n      pathname: location.pathname,\n      query: { mode }\n    });\n  };\n\n  handleModeConfig = (alm: AlmKeys) => {\n    this.setState({ creatingAlmDefinition: alm });\n  };\n\n  handleProjectCreate = (projectKey: string) => {\n    this.props.router.push(getProjectUrl(projectKey));\n  };\n\n  handleOnCancelCreation = () => {\n    this.setState({ creatingAlmDefinition: undefined });\n  };\n\n  handleAfterSubmit = async () => {\n    let { creatingAlmDefinition: createdAlmDefinition } = this.state;\n\n    this.setState({ creatingAlmDefinition: undefined });\n\n    await this.fetchAlmBindings();\n\n    if (this.mounted && createdAlmDefinition) {\n      const { bitbucketCloudSettings } = this.state;\n\n      if (createdAlmDefinition === AlmKeys.BitbucketServer && bitbucketCloudSettings.length > 0) {\n        createdAlmDefinition = AlmKeys.BitbucketCloud;\n      }\n\n      this.handleModeSelect(PROJECT_MODE_FOR_ALM_KEY[createdAlmDefinition]);\n    }\n  };\n\n  renderProjectCreation(mode?: CreateProjectModes) {\n    const {\n      appState: { canAdmin, branchesEnabled },\n      location,\n      router\n    } = this.props;\n    const {\n      azureSettings,\n      bitbucketSettings,\n      bitbucketCloudSettings,\n      githubSettings,\n      gitlabSettings,\n      loading\n    } = this.state;\n\n    switch (mode) {\n      case CreateProjectModes.AzureDevOps: {\n        return (\n          <AzureProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={azureSettings}\n          />\n        );\n      }\n      case CreateProjectModes.BitbucketServer: {\n        return (\n          <BitbucketProjectCreate\n            canAdmin={!!canAdmin}\n            bitbucketSettings={bitbucketSettings}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n          />\n        );\n      }\n      case CreateProjectModes.BitbucketCloud: {\n        return (\n          <BitbucketCloudProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={bitbucketCloudSettings}\n          />\n        );\n      }\n      case CreateProjectModes.GitHub: {\n        return (\n          <GitHubProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={githubSettings}\n          />\n        );\n      }\n      case CreateProjectModes.GitLab: {\n        return (\n          <GitlabProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={gitlabSettings}\n          />\n        );\n      }\n      case CreateProjectModes.Manual: {\n        return (\n          <ManualProjectCreate\n            branchesEnabled={!!branchesEnabled}\n            onProjectCreate={this.handleProjectCreate}\n          />\n        );\n      }\n      default: {\n        const almCounts = {\n          [AlmKeys.Azure]: azureSettings.length,\n          [AlmKeys.BitbucketServer]: bitbucketSettings.length,\n          [AlmKeys.BitbucketCloud]: bitbucketCloudSettings.length,\n          [AlmKeys.GitHub]: githubSettings.length,\n          [AlmKeys.GitLab]: gitlabSettings.length\n        };\n        return (\n          <CreateProjectModeSelection\n            almCounts={almCounts}\n            loadingBindings={loading}\n            onSelectMode={this.handleModeSelect}\n            onConfigMode={this.handleModeConfig}\n          />\n        );\n      }\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    const { creatingAlmDefinition } = this.state;\n    const mode: CreateProjectModes | undefined = location.query?.mode;\n\n    return (\n      <>\n        <Helmet title={translate('onboarding.create_project.select_method')} titleTemplate=\"%s\" />\n        <A11ySkipTarget anchor=\"create_project_main\" />\n        <div className=\"page page-limited huge-spacer-bottom position-relative\" id=\"create-project\">\n          {this.renderProjectCreation(mode)}\n          {creatingAlmDefinition && (\n            <AlmBindingDefinitionForm\n              alm={creatingAlmDefinition}\n              alreadyHaveInstanceConfigured={false}\n              onCancel={this.handleOnCancelCreation}\n              afterSubmit={this.handleAfterSubmit}\n              enforceValidation={true}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(withAppState(CreateProjectPage));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getHistory from './getHistory';\n\nexport default function handleRequiredAuthentication() {\n  const history = getHistory();\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n  // eslint-disable-next-line camelcase\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { colors } from '../../app/theme';\nimport Icon, { IconProps } from './Icon';\n\nconst qualifierIcons: T.Dict<(props: IconProps) => React.ReactElement> = {\n  app: ApplicationIcon,\n  brc: SubProjectIcon,\n  dev: DeveloperIcon,\n  dir: DirectoryIcon,\n  fil: FileIcon,\n  svw: SubPortfolioIcon,\n  trk: ProjectIcon,\n  uts: UnitTestIcon,\n  vw: PortfolioIcon,\n\n  // deprecated:\n  cla: UnitTestIcon,\n  dev_prj: ProjectIcon,\n  lib: LibraryIcon,\n  pac: DirectoryIcon\n};\n\ninterface QualifierIconProps {\n  className?: string;\n  fill?: string;\n  qualifier: string | null | undefined;\n}\n\nexport default function QualifierIcon(props: QualifierIconProps) {\n  if (!props.qualifier) {\n    return null;\n  }\n\n  const qualifier = props.qualifier.toLowerCase();\n  const FoundIcon = qualifierIcons[qualifier];\n  return FoundIcon ? <FoundIcon className={props.className} fill={props.fill} /> : null;\n}\n\nfunction ApplicationIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M3.014 10.986a2 2 0 1 1-.001 4.001 2 2 0 0 1 .001-4.001zm9.984 0a2 2 0 1 1-.001 4.001 2 2 0 0 1 .001-4.001zm-5.004-.021c1.103 0 2 .896 2 2s-.897 2-2 2a2 2 0 0 1 0-4zm-4.98 1.021a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm9.984 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm-5.004-.021a1 1 0 1 1 0 2 1 1 0 0 1 0-2zM2.984 6a2 2 0 1 1-.001 4.001A2 2 0 0 1 2.984 6zm9.984 0a2 2 0 1 1-.001 4.001A2 2 0 0 1 12.968 6zm-5.004-.021c1.103 0 2 .897 2 2a2 2 0 1 1-2-2zM2.984 7a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm9.984 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm-5.004-.021a1.001 1.001 0 0 1 0 2 1 1 0 0 1 0-2zM3 1.025a2 2 0 1 1-.001 4.001A2 2 0 0 1 3 1.025zm9.984 0a2 2 0 1 1-.001 4.001 2 2 0 0 1 .001-4.001zM7.98 1.004c1.103 0 2 .896 2 2s-.897 2-2 2a2 2 0 0 1 0-4zM3 2.025a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm9.984 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2zM7.98 2.004a1.001 1.001 0 0 1 0 2 1 1 0 0 1 0-2z\"\n        style={{ fill: fill || colors.blue }}\n      />\n    </Icon>\n  );\n}\n\nfunction DeveloperIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M7.974 8.02a3.5 3.5 0 0 1-2.482-1.017 3.428 3.428 0 0 1-1.028-2.455c0-.927.365-1.8 1.028-2.455a3.505 3.505 0 0 1 2.482-1.017 3.5 3.5 0 0 1 2.482 1.017 3.434 3.434 0 0 1 1.027 2.455c0 .928-.365 1.8-1.027 2.455A3.504 3.504 0 0 1 7.974 8.02zm0-5.778c-1.286 0-2.332 1.034-2.332 2.306s1.046 2.307 2.332 2.307c1.285 0 2.332-1.035 2.332-2.307S9.258 2.242 7.974 2.242zm3.534 6.418c.127.016.243.045.348.086.17.066.302.146.406.246.132.124.253.282.36.47.126.218.226.442.3.668.08.253.15.535.206.838.056.313.095.604.113.867.02.28.03.57.03.862 0 .532-.174.758-.306.882-.142.132-.397.31-.973.31H3.948c-.233 0-.437-.03-.606-.09-.14-.05-.26-.123-.366-.222-.13-.123-.306-.35-.306-.88 0-.294.01-.584.03-.863.018-.263.056-.554.112-.867a6.5 6.5 0 0 1 .207-.838c.073-.226.173-.45.298-.667.108-.19.23-.347.36-.47.106-.1.238-.18.407-.247.105-.04.22-.07.348-.086.202.13.432.277.683.435.342.217.756.4 1.265.564.523.166 1.06.25 1.59.25a5.25 5.25 0 0 0 1.592-.25c.51-.164.923-.348 1.266-.565.25-.158.48-.304.682-.435l-.002.002zm-.244-1.18c-.055 0-.184.066-.387.196-.202.13-.43.276-.685.437-.255.16-.586.307-.994.437-.408.13-.818.196-1.23.196-.41 0-.82-.065-1.228-.196a4.303 4.303 0 0 1-.993-.437c-.255-.16-.484-.306-.686-.437-.202-.13-.33-.196-.386-.196-.374 0-.716.06-1.026.183-.31.12-.572.283-.787.487a3.28 3.28 0 0 0-.57.737 4.662 4.662 0 0 0-.395.888c-.098.303-.18.633-.244.988a9.652 9.652 0 0 0-.128.992c-.02.306-.032.62-.032.942 0 .73.224 1.304.672 1.726.448.42 1.043.632 1.785.632h8.044c.743 0 1.34-.21 1.787-.633.447-.42.67-.996.67-1.725 0-.32-.01-.635-.03-.942a9.159 9.159 0 0 0-.374-1.98c-.098-.304-.23-.6-.395-.888a3.23 3.23 0 0 0-.57-.737 2.404 2.404 0 0 0-.788-.487 2.779 2.779 0 0 0-1.026-.183h-.004z\"\n        style={{ fill: fill || colors.blue }}\n      />\n    </Icon>\n  );\n}\n\nfunction DirectoryIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M14 12.286V5.703a.673.673 0 0 0-.195-.5.644.644 0 0 0-.49-.203H6.704a.686.686 0 0 1-.5-.214.707.707 0 0 1-.203-.51v-.57c0-.2-.07-.363-.207-.502A.679.679 0 0 0 5.29 3H2.707a.672.672 0 0 0-.5.204.683.683 0 0 0-.206.5v8.582c0 .2.07.367.206.506.137.14.304.208.5.208h10.61a.66.66 0 0 0 .49-.208.685.685 0 0 0 .194-.506H14zm1-6.598v6.65c0 .458-.152.83-.475 1.16-.324.326-.7.502-1.15.502H2.647c-.452 0-.84-.175-1.162-.503a1.572 1.572 0 0 1-.486-1.158V3.654a1.6 1.6 0 0 1 .486-1.17A1.578 1.578 0 0 1 2.648 2h2.7c.45 0 .84.157 1.164.485.324.328.488.714.488 1.17V4h6.373c.452 0 .83.174 1.152.5.323.33.475.73.475 1.187v.001z\"\n        style={{ fill: fill || colors.orange }}\n      />\n    </Icon>\n  );\n}\n\nfunction FileIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M14 15H2V1l7.997.02c1 .034 1.759.758 2.428 1.42.667.663 1.561 1.605 1.574 2.555H14V15zM9 2H3v12h10V6H9V2zm3 10H4v-1h8v1zm0-2H4V9h8v1zm-1.988-5h3.008c-.012-.674-.714-1.443-1.204-1.937-.488-.495-1.039-1.058-1.816-1.055v2.96l.012.032z\"\n        style={{ fill: fill || colors.blue }}\n      />\n    </Icon>\n  );\n}\n\nfunction LibraryIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M1 13h4V3H1v10zm3-1H2v-2h2v2zM2 4h2v4H2V4zm4 9h4V3H6v10zm3-1H7v-2h2v2zM7 4h2v4H7V4zm4 9h4V3h-4v10zm3-1h-2v-2h2v2zm-2-8h2v4h-2V4z\"\n        style={{ fill: fill || colors.blue }}\n      />\n    </Icon>\n  );\n}\n\nfunction PortfolioIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M14.97 14.97H1.016V1.015H14.97V14.97zm-1-12.955H2.015V13.97H13.97V2.015zm-.973 10.982H9V9h3.997v3.997zM7 12.996H3.004V9H7v3.996zM11.997 10H10v1.997h1.997V10zM6 10H4.004v1.996H6V10zm1-3H3.006V3.006H7V7zm5.985 0H9V3.015h3.985V7zM6 4.006H4.006V6H6V4.006zm5.985.009H10V6h1.985V4.015z\"\n        style={{ fill: fill || colors.blue }}\n      />\n    </Icon>\n  );\n}\n\nfunction ProjectIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M14.985 13.988L1 14.005 1.02 5h13.966v8.988h-.001zM1.998 5.995l.006 7.02L14.022 13 14 6.004l-12.002-.01v.001zM3 4.5V4h9.996l.004.5h1l-.005-1.497-11.98.003L2 4.5h1zm1-2v-.504h8.002L12 2.5h1l-.004-1.495H3.003L3 2.5h1z\"\n        style={{ fill: fill || colors.blue }}\n      />\n    </Icon>\n  );\n}\n\nfunction SubPortfolioIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M14 7h2v9H7v-2H0V0h14v7zM8 8v7h7V8H8zm3 6H9v-2h2v2zm3 0h-2v-2h2v2zm-1-7V1H1v12h6V7h6zm-7 5H2V8h4v4zm5-1H9V9h2v2zm3 0h-2V9h2v2zM5 9H3v2h2V9zm1-3H2V2h4v4zm6 0H8V2h4v4zM5 3H3v2h2V3zm6 0H9v2h2V3z\"\n        style={{ fill: fill || colors.blue }}\n      />\n    </Icon>\n  );\n}\n\nfunction SubProjectIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M8 9V8h6v1h1v1h1v6H6v-6h1V9h1zm7 2H7v4h8v-4zm-1-7v3h-1V5H1v7h4v1H0V4h14zm-1-2v1.5h-1V3H2v.5H1V2h12zm-1-2v1.5h-1V1H3v.5H2V0h10z\"\n        style={{ fill: fill || colors.blue }}\n      />\n    </Icon>\n  );\n}\n\nfunction UnitTestIcon({ fill, ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M14 15H2V1l7.997.02c1.013-.03 1.57.893 2.239 1.555.667.663 1.75 1.47 1.763 2.42H14V15zM9 2H3v12h10V6H9V2zM7 8l-3 2.5L7 13V8zm1 5l3-2.5L8 8v5zm2.012-8h3.008c-.012-.674-.78-1.258-1.27-1.752-.488-.495-.973-1.243-1.75-1.24v2.96l.012.032z\"\n        style={{ fill: fill || colors.blue }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport { formatMeasure } from '../../helpers/measures';\nimport DeferredSpinner from '../ui/DeferredSpinner';\nimport { Button } from './buttons';\n\nexport interface ListFooterProps {\n  count: number;\n  className?: string;\n  loading?: boolean;\n  loadMore?: () => void;\n  needReload?: boolean;\n  reload?: () => void;\n  ready?: boolean;\n  total?: number;\n}\n\nexport default function ListFooter(props: ListFooterProps) {\n  const { className, count, loading, needReload, total, ready = true } = props;\n  const hasMore = total && total > count;\n\n  let button;\n  if (needReload && props.reload) {\n    button = (\n      <Button className=\"spacer-left\" data-test=\"reload\" disabled={loading} onClick={props.reload}>\n        {translate('reload')}\n      </Button>\n    );\n  } else if (hasMore && props.loadMore) {\n    button = (\n      <Button\n        className=\"spacer-left\"\n        disabled={loading}\n        data-test=\"show-more\"\n        onClick={props.loadMore}>\n        {translate('show_more')}\n      </Button>\n    );\n  }\n\n  return (\n    <footer\n      className={classNames('spacer-top note text-center', { 'new-loading': !ready }, className)}>\n      {translateWithParameters(\n        'x_of_y_shown',\n        formatMeasure(count, 'INT', null),\n        formatMeasure(total, 'INT', null)\n      )}\n      {button}\n      {loading && <DeferredSpinner className=\"text-bottom spacer-left position-absolute\" />}\n    </footer>\n  );\n}\n","var baseDifference = require('./_baseDifference'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nmodule.exports = without;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function DetachIcon({ fill = 'currentColor', ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M12 9.25v2.5A2.25 2.25 0 0 1 9.75 14h-6.5A2.25 2.25 0 0 1 1 11.75v-6.5A2.25 2.25 0 0 1 3.25 3h5.5c.14 0 .25.11.25.25v.5c0 .14-.11.25-.25.25h-5.5C2.562 4 2 4.563 2 5.25v6.5c0 .688.563 1.25 1.25 1.25h6.5c.688 0 1.25-.563 1.25-1.25v-2.5c0-.14.11-.25.25-.25h.5c.14 0 .25.11.25.25zm3-6.75v4c0 .273-.227.5-.5.5a.497.497 0 0 1-.352-.148l-1.375-1.375L7.68 10.57a.27.27 0 0 1-.18.078.27.27 0 0 1-.18-.078l-.89-.89a.27.27 0 0 1-.078-.18.27.27 0 0 1 .078-.18l5.093-5.093-1.375-1.375A.497.497 0 0 1 10 2.5c0-.273.227-.5.5-.5h4c.273 0 .5.227.5.5z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport './Radio.css';\n\ninterface Props {\n  checked: boolean;\n  className?: string;\n  disabled?: boolean;\n  onCheck: (value: string) => void;\n  value: string;\n}\n\nexport default class Radio extends React.PureComponent<Props> {\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n\n    if (!this.props.disabled) {\n      this.props.onCheck(this.props.value);\n    }\n  };\n\n  render() {\n    const { className, checked, children, disabled } = this.props;\n\n    return (\n      <a\n        aria-checked={checked}\n        className={classNames('display-inline-flex-center link-radio', className, { disabled })}\n        href=\"#\"\n        onClick={this.handleClick}\n        role=\"radio\">\n        <i className={classNames('icon-radio', 'spacer-right', { 'is-checked': checked })} />\n        {children}\n      </a>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ fill = 'currentColor', ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightIcon';\nimport { IconProps } from './Icon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...iconProps }: Props) {\n  return open ? <ChevronDownIcon {...iconProps} /> : <ChevronRightIcon {...iconProps} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport OpenCloseIcon from '../icons/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from '../../helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport Select, { Creatable } from './Select';\n\ninterface Props<T> {\n  autofocus?: boolean;\n  canCreate?: boolean;\n  className?: string;\n  clearable?: boolean;\n  defaultOptions?: T[];\n  minimumQueryLength?: number;\n  multi?: boolean;\n  onSearch: (query: string) => Promise<T[]>;\n  onSelect?: (option: T) => void;\n  onMultiSelect?: (options: T[]) => void;\n  promptTextCreator?: (label: string) => string;\n  renderOption?: (option: T) => JSX.Element;\n  resetOnBlur?: boolean;\n  value?: T | T[];\n}\n\ninterface State<T> {\n  loading: boolean;\n  options: T[];\n  query: string;\n}\n\nexport default class SearchSelect<T extends { value: string }> extends React.PureComponent<\n  Props<T>,\n  State<T>\n> {\n  mounted = false;\n\n  constructor(props: Props<T>) {\n    super(props);\n    this.state = { loading: false, options: props.defaultOptions || [], query: '' };\n    this.handleSearch = debounce(this.handleSearch, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  get autofocus() {\n    return this.props.autofocus !== undefined ? this.props.autofocus : true;\n  }\n\n  get minimumQueryLength() {\n    return this.props.minimumQueryLength !== undefined ? this.props.minimumQueryLength : 2;\n  }\n\n  get resetOnBlur() {\n    return this.props.resetOnBlur !== undefined ? this.props.resetOnBlur : true;\n  }\n\n  handleSearch = (query: string) => {\n    // Ignore the result if the query changed\n    const currentQuery = query;\n    this.props.onSearch(currentQuery).then(\n      options => {\n        if (this.mounted) {\n          this.setState(state => ({\n            loading: false,\n            options: state.query === currentQuery ? options : state.options\n          }));\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleChange = (option: T | T[]) => {\n    if (Array.isArray(option)) {\n      if (this.props.onMultiSelect) {\n        this.props.onMultiSelect(option);\n      }\n    } else if (this.props.onSelect) {\n      this.props.onSelect(option);\n    }\n  };\n\n  handleInputChange = (query: string) => {\n    if (query.length >= this.minimumQueryLength) {\n      this.setState({ loading: true, query });\n      this.handleSearch(query);\n    } else {\n      // `onInputChange` is called with an empty string after a user selects a value\n      // in this case we shouldn't reset `options`, because it also resets select value :(\n      const options = (query.length === 0 && this.props.defaultOptions) || [];\n      this.setState({ options, query });\n    }\n  };\n\n  // disable internal filtering\n  handleFilterOption = () => true;\n\n  render() {\n    const Component = this.props.canCreate ? Creatable : Select;\n    return (\n      <Component\n        autoFocus={this.autofocus}\n        className={this.props.className}\n        clearable={this.props.clearable}\n        escapeClearsValue={false}\n        filterOption={this.handleFilterOption}\n        isLoading={this.state.loading}\n        multi={this.props.multi}\n        noResultsText={\n          this.state.query.length < this.minimumQueryLength\n            ? translateWithParameters('select2.tooShort', this.minimumQueryLength)\n            : translate('select2.noMatches')\n        }\n        onBlurResetsInput={this.resetOnBlur}\n        onChange={this.handleChange}\n        onInputChange={this.handleInputChange}\n        optionRenderer={this.props.renderOption}\n        options={this.state.options}\n        placeholder={translate('search_verb')}\n        promptTextCreator={this.props.promptTextCreator}\n        searchable={true}\n        value={this.props.value}\n        valueRenderer={this.props.renderOption}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ValidationInput from '../../components/controls/ValidationInput';\nimport { PROJECT_KEY_MAX_LEN } from '../../helpers/constants';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ProjectKeyInputProps {\n  error?: string;\n  help?: string;\n  label?: string;\n  onProjectKeyChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  projectKey?: string;\n  touched: boolean;\n  validating?: boolean;\n  autofocus?: boolean;\n}\n\nexport default function ProjectKeyInput(props: ProjectKeyInputProps) {\n  const {\n    error,\n    help,\n    label,\n    placeholder,\n    projectKey,\n    touched,\n    validating,\n    autofocus = false\n  } = props;\n\n  const isInvalid = touched && error !== undefined;\n  const isValid = touched && !validating && error === undefined;\n\n  return (\n    <ValidationInput\n      className=\"form-field\"\n      description={translate('onboarding.create_project.project_key.description')}\n      error={error}\n      help={help}\n      id=\"project-key\"\n      isInvalid={isInvalid}\n      isValid={isValid}\n      label={label}\n      required={label !== undefined}>\n      <input\n        autoFocus={autofocus}\n        className={classNames('input-super-large', {\n          'is-invalid': isInvalid,\n          'is-valid': isValid\n        })}\n        id=\"project-key\"\n        maxLength={PROJECT_KEY_MAX_LEN}\n        minLength={1}\n        onChange={props.onProjectKeyChange}\n        placeholder={placeholder}\n        type=\"text\"\n        value={projectKey}\n      />\n    </ValidationInput>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { ProjectKeyValidationResult } from '../types/component';\nimport { PROJECT_KEY_MAX_LEN } from './constants';\n\n// This is the regex used on the backend:\n//   [\\p{Alnum}\\-_.:]*[\\p{Alpha}\\-_.:]+[\\p{Alnum}\\-_.:]*\n// See sonar-core/src/main/java/org/sonar/core/component/ComponentKeys.java\nexport const PROJECT_KEY_REGEX = /^[\\w\\-.:]*[a-z\\-_.:]+[\\w\\-.:]*$/i;\nexport const PROJECT_KEY_INVALID_CHARACTERS = /[^\\w\\-:.]+/gi;\n\nexport function validateProjectKey(projectKey: string): ProjectKeyValidationResult {\n  if (projectKey.length === 0) {\n    return ProjectKeyValidationResult.Empty;\n  } else if (projectKey.length > PROJECT_KEY_MAX_LEN) {\n    return ProjectKeyValidationResult.TooLong;\n  } else if (PROJECT_KEY_REGEX.test(projectKey)) {\n    return ProjectKeyValidationResult.Valid;\n  } else if (/^[0-9]+$/.test(projectKey)) {\n    return ProjectKeyValidationResult.OnlyDigits;\n  }\n  return ProjectKeyValidationResult.InvalidChar;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronsIcon({ fill = 'currentColor', ...iconProps }: IconProps) {\n  return (\n    <Icon {...iconProps}>\n      <path\n        d=\"M6.27 11.07L3.2 8l3.07-3.07L5.33 4l-4 4 4 4 .94-.93zm3.46 0L12.8 8 9.73 4.93l.94-.93 4 4-4 4-.94-.93z\"\n        fill={fill}\n        fillRule=\"nonzero\"\n      />\n    </Icon>\n  );\n}\n"],"sourceRoot":""}