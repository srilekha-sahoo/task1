{"version":3,"sources":["webpack:///./src/main/js/app/components/ResetPassword.tsx","webpack:///./src/main/js/helpers/handleRequiredAuthentication.ts","webpack:///./src/main/js/components/ui/MandatoryFieldMarker.tsx","webpack:///./src/main/js/components/ui/MandatoryFieldsExplanation.tsx","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/components/common/ResetPasswordForm.tsx"],"names":["ResetPassword","currentUser","className","user","onPasswordChange","window","location","href","handleRequiredAuthentication","history","returnTo","pathname","search","hash","replace","query","return_to","MandatoryFieldMarker","MandatoryFieldsExplanation","id","defaultMessage","values","star","whenLoggedIn","WrappedComponent","Wrapper","this","props","displayName","ResetPasswordForm","oldPassword","password","passwordConfirmation","state","success","handleSuccessfulChange","value","setState","errors","undefined","setErrors","handleChangePassword","event","preventDefault","previousPassword","focus","login","then","onSubmit","variant","map","e","i","key","htmlFor","autoComplete","name","ref","elem","required","type"],"mappings":"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","file":"js/337.m.c4ffd02e.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ResetPasswordForm from '../../components/common/ResetPasswordForm';\nimport { whenLoggedIn } from '../../components/hoc/whenLoggedIn';\nimport { translate } from '../../helpers/l10n';\nimport { getBaseUrl } from '../../helpers/system';\nimport GlobalMessagesContainer from './GlobalMessagesContainer';\n\nexport interface ResetPasswordProps {\n  currentUser: T.LoggedInUser;\n}\n\nexport function ResetPassword({ currentUser }: ResetPasswordProps) {\n  return (\n    <div className=\"page-wrapper-simple\">\n      <div className=\"page-simple\">\n        <GlobalMessagesContainer />\n\n        <h1 className=\"text-center huge\">{translate('my_account.reset_password')}</h1>\n        <p className=\"text-center huge-spacer-top huge-spacer-bottom\">\n          {translate('my_account.reset_password.explain')}\n        </p>\n\n        <div className=\"text-center\">\n          <h2 className=\"big-spacer-bottom big\">{translate('my_profile.password.title')}</h2>\n\n          <ResetPasswordForm\n            user={currentUser}\n            onPasswordChange={() => {\n              // Force a refresh for the backend to handle additional redirects.\n              window.location.href = getBaseUrl() + '/';\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default whenLoggedIn(ResetPassword);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getHistory from './getHistory';\n\nexport default function handleRequiredAuthentication() {\n  const history = getHistory();\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n  // eslint-disable-next-line camelcase\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\n\nexport interface MandatoryFieldMarkerProps {\n  className?: string;\n}\n\nexport default function MandatoryFieldMarker({ className }: MandatoryFieldMarkerProps) {\n  return (\n    <em\n      aria-label={translate('field_required')}\n      className={classNames('mandatory little-spacer-left', className)}>\n      *\n    </em>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from '../../helpers/l10n';\n\nexport interface MandatoryFieldsExplanationProps {\n  className?: string;\n}\n\nexport default function MandatoryFieldsExplanation({ className }: MandatoryFieldsExplanationProps) {\n  return (\n    <div aria-hidden={true} className={classNames('text-muted', className)}>\n      <FormattedMessage\n        id=\"fields_marked_with_x_required\"\n        defaultMessage={translate('fields_marked_with_x_required')}\n        values={{ star: <em className=\"mandatory\">*</em> }}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from '../../helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { changePassword } from '../../api/users';\nimport { SubmitButton } from '../../components/controls/buttons';\nimport { Alert } from '../../components/ui/Alert';\nimport MandatoryFieldMarker from '../../components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from '../../components/ui/MandatoryFieldsExplanation';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  user: T.LoggedInUser;\n  onPasswordChange?: () => void;\n}\n\ninterface State {\n  errors?: string[];\n  success: boolean;\n}\n\nexport default class ResetPasswordForm extends React.Component<Props, State> {\n  oldPassword: HTMLInputElement | null = null;\n  password: HTMLInputElement | null = null;\n  passwordConfirmation: HTMLInputElement | null = null;\n  state: State = {\n    success: false\n  };\n\n  handleSuccessfulChange = () => {\n    if (!this.oldPassword || !this.password || !this.passwordConfirmation) {\n      return;\n    }\n    this.oldPassword.value = '';\n    this.password.value = '';\n    this.passwordConfirmation.value = '';\n    this.setState({ success: true, errors: undefined });\n    if (this.props.onPasswordChange) {\n      this.props.onPasswordChange();\n    }\n  };\n\n  setErrors = (errors: string[]) => {\n    this.setState({ success: false, errors });\n  };\n\n  handleChangePassword = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!this.oldPassword || !this.password || !this.passwordConfirmation) {\n      return;\n    }\n    const { user } = this.props;\n    const previousPassword = this.oldPassword.value;\n    const password = this.password.value;\n    const passwordConfirmation = this.passwordConfirmation.value;\n\n    if (password !== passwordConfirmation) {\n      this.password.focus();\n      this.setErrors([translate('user.password_doesnt_match_confirmation')]);\n    } else {\n      changePassword({ login: user.login, password, previousPassword }).then(\n        this.handleSuccessfulChange,\n        () => {\n          // error already reported.\n        }\n      );\n    }\n  };\n\n  render() {\n    const { className } = this.props;\n    const { success, errors } = this.state;\n\n    return (\n      <form className={className} onSubmit={this.handleChangePassword}>\n        {success && <Alert variant=\"success\">{translate('my_profile.password.changed')}</Alert>}\n\n        {errors &&\n          errors.map((e, i) => (\n            /* eslint-disable-next-line react/no-array-index-key */\n            <Alert key={i} variant=\"error\">\n              {e}\n            </Alert>\n          ))}\n\n        <MandatoryFieldsExplanation className=\"form-field\" />\n\n        <div className=\"form-field\">\n          <label htmlFor=\"old_password\">\n            {translate('my_profile.password.old')}\n            <MandatoryFieldMarker />\n          </label>\n          <input\n            autoComplete=\"off\"\n            id=\"old_password\"\n            name=\"old_password\"\n            ref={elem => (this.oldPassword = elem)}\n            required={true}\n            type=\"password\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"password\">\n            {translate('my_profile.password.new')}\n            <MandatoryFieldMarker />\n          </label>\n          <input\n            autoComplete=\"off\"\n            id=\"password\"\n            name=\"password\"\n            ref={elem => (this.password = elem)}\n            required={true}\n            type=\"password\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"password_confirmation\">\n            {translate('my_profile.password.confirm')}\n            <MandatoryFieldMarker />\n          </label>\n          <input\n            autoComplete=\"off\"\n            id=\"password_confirmation\"\n            name=\"password_confirmation\"\n            ref={elem => (this.passwordConfirmation = elem)}\n            required={true}\n            type=\"password\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <SubmitButton id=\"change-password\">{translate('update_verb')}</SubmitButton>\n        </div>\n      </form>\n    );\n  }\n}\n"],"sourceRoot":""}